Date;ModelName;Objective;UserTime;#Booleans;#Branches;#Conflicts;SolverParameters;SolverLog;time1;bound1;objective1;time2;bound2;objective2
2024-06-14_20-41;circles_2_100;284;19;0;0;0;"log_search_progress: true
cp_model_presolve: true
linearization_level: 1
log_to_stdout: false
log_to_response: true
num_workers: 16
";"objective_value: 284
best_objective_bound: 284
wall_time: 0.019105800000000003
user_time: 0.019105900000000002
deterministic_time: 0.0010917198750566958
solution_info: ""no_lp""
gap_integral: 0.00057804607628048413
solve_log: ""\nStarting CP-SAT solver v9.10.4067\nParameters: log_search_progress: true cp_model_presolve: true linearization_level: 1 log_to_stdout: false log_to_response: true num_workers: 16\n\nInitial optimization model \'\': (model_fingerprint: 0x5e76c70618a17e29)\n#Variables: 28 (#ints: 4 in objective)\n  - 10 in [-200,200]\n  - 8 in [0,200]\n  - 10 in [0,40000]\n#kIntProd: 10\n#kLinear1: 2\n#kLinear2: 9\n#kLinear3: 10\n\nStarting presolve at 0.00s\n  1.99e-05s  0.00e+00d  [DetectDominanceRelations] \n  2.10e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=2 #num_dual_strengthening=1 \n  5.20e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::ExtractEncodingFromLinear] \n  1.62e-04s  1.86e-07d  [operations_research::sat::CpModelPresolver::Probe] \n  5.40e-06s  0.00e+00d  [MaxClique] \n  1.10e-05s  0.00e+00d  [DetectDominanceRelations] \n  5.83e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  1.09e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessAtMostOneAndLinear] \n  3.09e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDuplicateConstraints] \n  1.68e-05s  9.20e-08d  [operations_research::sat::CpModelPresolver::DetectDominatedLinearConstraints] #relevant_constraints=11 #num_inclusions=2 #num_redundant=2 \n  2.80e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDifferentVariables] \n  9.00e-07s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessSetPPC] \n  5.70e-06s  3.00e-08d  [operations_research::sat::CpModelPresolver::FindAlmostIdenticalLinearConstraints] #num_tested_pairs=2 \n  3.50e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigAtMostOneAndLinearOverlap] \n  3.50e-06s  5.10e-07d  [operations_research::sat::CpModelPresolver::FindBigVerticalLinearOverlap] \n  9.00e-07s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigHorizontalLinearOverlap] \n  9.00e-07s  0.00e+00d  [operations_research::sat::CpModelPresolver::MergeClauses] \n  9.50e-06s  0.00e+00d  [DetectDominanceRelations] \n  5.74e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=2 #num_dual_strengthening=1 \n  8.50e-06s  0.00e+00d  [DetectDominanceRelations] \n  4.47e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  6.31e-05s  1.78e-07d  [operations_research::sat::CpModelPresolver::Probe] \n  1.10e-06s  0.00e+00d  [MaxClique] \n  9.60e-06s  0.00e+00d  [DetectDominanceRelations] \n  5.07e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  4.90e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessAtMostOneAndLinear] \n  2.44e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDuplicateConstraints] \n  5.70e-06s  6.60e-08d  [operations_research::sat::CpModelPresolver::DetectDominatedLinearConstraints] #relevant_constraints=9 \n  1.40e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDifferentVariables] \n  8.00e-07s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessSetPPC] \n  2.60e-06s  1.50e-08d  [operations_research::sat::CpModelPresolver::FindAlmostIdenticalLinearConstraints] #num_tested_pairs=1 \n  1.40e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigAtMostOneAndLinearOverlap] \n  2.80e-06s  5.10e-07d  [operations_research::sat::CpModelPresolver::FindBigVerticalLinearOverlap] \n  7.00e-07s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigHorizontalLinearOverlap] \n  6.00e-07s  0.00e+00d  [operations_research::sat::CpModelPresolver::MergeClauses] \n  8.80e-06s  0.00e+00d  [DetectDominanceRelations] \n  4.58e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  1.14e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ExpandObjective] #entries=20 #tight_variables=10 #tight_constraints=4 #expands=2 \n\nPresolve summary:\n  - 6 affine relations were detected.\n  - rule \'TODO dual: only one blocking constraint?\' was applied 60 times.\n  - rule \'affine: new relation\' was applied 6 times.\n  - rule \'linear inclusion: subset + singleton is equality\' was applied 2 times.\n  - rule \'linear: always true\' was applied 2 times.\n  - rule \'linear: empty\' was applied 2 times.\n  - rule \'linear: fixed or dup variables\' was applied 10 times.\n  - rule \'linear: reduced variable domains\' was applied 8 times.\n  - rule \'linear: reduced variable domains in derived constraint\' was applied 2 times.\n  - rule \'linear: remapped using affine relations\' was applied 12 times.\n  - rule \'linear: simplified rhs\' was applied 7 times.\n  - rule \'objective: expanded via tight equality\' was applied 2 times.\n  - rule \'presolve: 2 unused variables removed.\' was applied 1 time.\n  - rule \'presolve: iteration\' was applied 2 times.\n\nPresolved optimization model \'\': (model_fingerprint: 0x9dff32768cad62fd)\n#Variables: 20 (#ints: 6 in objective)\n  - 2 in [-200,200]\n  - 8 in [0,200]\n  - 10 in [0,40000]\n#kIntProd: 10\n#kLinear2: 5\n#kLinear3: 4\n\nPreloading model.\n#Bound   0.00s best:inf   next:[0,800]    initial_domain\n#Model   0.00s var:20/20 constraints:19/19\n\nStarting search at 0.00s with 16 workers.\n11 full problem subsolvers: [core, default_lp, lb_tree_search, max_lp, no_lp, objective_lb_search, probing, pseudo_costs, quick_restart, quick_restart_no_lp, reduced_costs]\n4 first solution subsolvers: [fj_long_default, fj_short_default, fs_random, fs_random_quick_restart]\n9 incomplete subsolvers: [feasibility_pump, graph_arc_lns, graph_cst_lns, graph_dec_lns, graph_var_lns, rins/rens, rnd_cst_lns, rnd_var_lns, violation_ls]\n3 helper subsolvers: [neighborhood_helper, synchronization_agent, update_gap_integral]\n#1       0.00s best:471   next:[0,470]    no_lp (fixed_bools=0/5)\n#Bound   0.00s best:471   next:[1,470]    bool_core (num_cores=1 [size:2 mw:1 d:1] a=5 d=1 fixed=0/6 clauses=0)\n#Bound   0.00s best:471   next:[200,470]  max_lp\n#2       0.00s best:387   next:[200,386]  no_lp (fixed_bools=0/6)\n#3       0.00s best:284   next:[200,283]  no_lp (fixed_bools=0/10)\n#Bound   0.00s best:284   next:[201,283]  default_lp\n#Done    0.00s quick_restart_no_lp\n\nTask timing                          n [     min,      max]      avg      dev     time         n [     min,      max]      avg      dev    dtime\n                     \'core\':         1 [  1.83ms,   1.83ms]   1.83ms   0.00ns   1.83ms         1 [ 32.33us,  32.33us]  32.33us   0.00ns  32.33us\n               \'default_lp\':         1 [  1.88ms,   1.88ms]   1.88ms   0.00ns   1.88ms         1 [ 17.24us,  17.24us]  17.24us   0.00ns  17.24us\n         \'feasibility_pump\':         1 [473.00us, 473.00us] 473.00us   0.00ns 473.00us         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns\n          \'fj_long_default\':         1 [  1.17ms,   1.17ms]   1.17ms   0.00ns   1.17ms         1 [279.14us, 279.14us] 279.14us   0.00ns 279.14us\n         \'fj_short_default\':         1 [  1.28ms,   1.28ms]   1.28ms   0.00ns   1.28ms         1 [251.42us, 251.42us] 251.42us   0.00ns 251.42us\n                \'fs_random\':         1 [  1.15ms,   1.15ms]   1.15ms   0.00ns   1.15ms         1 [ 20.00ns,  20.00ns]  20.00ns   0.00ns  20.00ns\n  \'fs_random_quick_restart\':         1 [933.20us, 933.20us] 933.20us   0.00ns 933.20us         1 [ 20.00ns,  20.00ns]  20.00ns   0.00ns  20.00ns\n            \'graph_arc_lns\':         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns\n            \'graph_cst_lns\':         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns\n            \'graph_dec_lns\':         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns\n            \'graph_var_lns\':         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns\n           \'lb_tree_search\':         1 [  1.65ms,   1.65ms]   1.65ms   0.00ns   1.65ms         1 [  5.15us,   5.15us]   5.15us   0.00ns   5.15us\n                   \'max_lp\':         1 [  1.81ms,   1.81ms]   1.81ms   0.00ns   1.81ms         1 [ 16.59us,  16.59us]  16.59us   0.00ns  16.59us\n                    \'no_lp\':         1 [  1.83ms,   1.83ms]   1.83ms   0.00ns   1.83ms         1 [101.10us, 101.10us] 101.10us   0.00ns 101.10us\n      \'objective_lb_search\':         1 [  1.41ms,   1.41ms]   1.41ms   0.00ns   1.41ms         1 [  6.96us,   6.96us]   6.96us   0.00ns   6.96us\n                  \'probing\':         1 [  1.56ms,   1.56ms]   1.56ms   0.00ns   1.56ms         1 [ 14.24us,  14.24us]  14.24us   0.00ns  14.24us\n             \'pseudo_costs\':         1 [  1.63ms,   1.63ms]   1.63ms   0.00ns   1.63ms         1 [  8.63us,   8.63us]   8.63us   0.00ns   8.63us\n            \'quick_restart\':         1 [  1.77ms,   1.77ms]   1.77ms   0.00ns   1.77ms         1 [  8.41us,   8.41us]   8.41us   0.00ns   8.41us\n      \'quick_restart_no_lp\':         1 [  1.63ms,   1.63ms]   1.63ms   0.00ns   1.63ms         1 [130.42us, 130.42us] 130.42us   0.00ns 130.42us\n            \'reduced_costs\':         1 [  1.74ms,   1.74ms]   1.74ms   0.00ns   1.74ms         1 [ 12.04us,  12.04us]  12.04us   0.00ns  12.04us\n                \'rins/rens\':         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns\n              \'rnd_cst_lns\':         1 [295.40us, 295.40us] 295.40us   0.00ns 295.40us         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns\n              \'rnd_var_lns\':         1 [359.90us, 359.90us] 359.90us   0.00ns 359.90us         0 [  0.00ns,   0.00ns]   0.00ns   0.00ns   0.00ns\n             \'violation_ls\':         1 [843.10us, 843.10us] 843.10us   0.00ns 843.10us         1 [206.43us, 206.43us] 206.43us   0.00ns 206.43us\n\nSearch stats                  Bools  Conflicts  Branches  Restarts  BoolPropag  IntegerPropag\n                     \'core\':     99         32        10        37         142            359\n               \'default_lp\':      0          0         0         0           0             14\n                \'fs_random\':      0          0         0         0           0              0\n  \'fs_random_quick_restart\':      0          0         0         0           0              0\n           \'lb_tree_search\':      0          0         0         0           0              1\n                   \'max_lp\':      0          0         0         0           0              1\n                    \'no_lp\':     13         10        50        23          55            843\n      \'objective_lb_search\':      0          0         0         0           0              1\n                  \'probing\':      2          0         4         4           1             26\n             \'pseudo_costs\':      0          0         0         0           0             34\n            \'quick_restart\':      0          0         0         0           0             34\n      \'quick_restart_no_lp\':     15         24        64        20          77          1\'106\n            \'reduced_costs\':      0          0         0         0           0             22\n\nSAT stats                     ClassicMinim  LitRemoved  LitLearned  LitForgotten  Subsumed  MClauses  MDecisions  MLitTrue  MSubsumed  MLitRemoved  MReused\n                     \'core\':             0           0           0             0         0         0           0         0          0            0        0\n               \'default_lp\':             0           0           0             0         0         0           0         0          0            0        0\n                \'fs_random\':             0           0           0             0         0         0           0         0          0            0        0\n  \'fs_random_quick_restart\':             0           0           0             0         0         0           0         0          0            0        0\n           \'lb_tree_search\':             0           0           0             0         0         0           0         0          0            0        0\n                   \'max_lp\':             0           0           0             0         0         0           0         0          0            0        0\n                    \'no_lp\':             1           1          19             0         0         0           0         0          0            0        0\n      \'objective_lb_search\':             0           0           0             0         0         0           0         0          0            0        0\n                  \'probing\':             0           0           0             0         0         0           0         0          0            0        0\n             \'pseudo_costs\':             0           0           0             0         0         0           0         0          0            0        0\n            \'quick_restart\':             0           0           0             0         0         0           0         0          0            0        0\n      \'quick_restart_no_lp\':             3           3          63             0         2         3           7         0          1            3        0\n            \'reduced_costs\':             0           0           0             0         0         0           0         0          0            0        0\n\nLp stats                      Component  Iterations  AddedCuts  OPTIMAL  DUAL_F.  DUAL_U.\n               \'default_lp\':          1          16          2       11        0        0\n                \'fs_random\':          1           0          0        0        0        0\n  \'fs_random_quick_restart\':          1           0          0        0        0        0\n           \'lb_tree_search\':          1          11          4        3        0        0\n                   \'max_lp\':          1          12          8        5        0        0\n      \'objective_lb_search\':          1          12          0        7        0        0\n                  \'probing\':          1          17          0        8        0        0\n             \'pseudo_costs\':          1          12          0        8        1        0\n            \'quick_restart\':          1          12          0        8        0        0\n            \'reduced_costs\':          1          13          5        9        0        0\n\nLp dimension                                                              Final dimension of first component\n               \'default_lp\':  17 rows, 20 columns, 39 entries with magnitude in [7.053456e-02, 1.000000e+00]\n                \'fs_random\':    0 rows, 20 columns, 0 entries with magnitude in [0.000000e+00, 0.000000e+00]\n  \'fs_random_quick_restart\':    0 rows, 20 columns, 0 entries with magnitude in [0.000000e+00, 0.000000e+00]\n           \'lb_tree_search\':  37 rows, 20 columns, 81 entries with magnitude in [1.000000e-02, 1.000000e+00]\n                   \'max_lp\':  37 rows, 20 columns, 79 entries with magnitude in [5.006262e-02, 1.000000e+00]\n      \'objective_lb_search\':  13 rows, 20 columns, 29 entries with magnitude in [7.071068e-02, 1.000000e+00]\n                  \'probing\':  14 rows, 20 columns, 32 entries with magnitude in [7.071068e-02, 1.000000e+00]\n             \'pseudo_costs\':  13 rows, 20 columns, 29 entries with magnitude in [7.071068e-02, 1.000000e+00]\n            \'quick_restart\':  13 rows, 20 columns, 29 entries with magnitude in [7.071068e-02, 1.000000e+00]\n            \'reduced_costs\':  18 rows, 20 columns, 39 entries with magnitude in [7.035975e-02, 1.000000e+00]\n\nLp debug                      CutPropag  CutEqPropag  Adjust  Overflow  Bad  BadScaling\n               \'default_lp\':          0            0       0         0    2           0\n                \'fs_random\':          0            0       0         0    0           0\n  \'fs_random_quick_restart\':          0            0       0         0    0           0\n           \'lb_tree_search\':          0            0       0         0   31           0\n                   \'max_lp\':          0            0       0         0   98           0\n      \'objective_lb_search\':          0            0       0         0    0           0\n                  \'probing\':          0            0       0         0    0           0\n             \'pseudo_costs\':          0            0       0         0    0           0\n            \'quick_restart\':          0            0       0         0    0           0\n            \'reduced_costs\':          0            0       0         0    0           0\n\nLp pool                       Constraints  Updates  Simplif  Merged  Shortened  Split  Strenghtened  Cuts/Call\n               \'default_lp\':           35        4        0       0          0      0             0       2/97\n                \'fs_random\':           33        0        0       0          0      0             0        0/0\n  \'fs_random_quick_restart\':           33        0        0       0          0      0             0        0/0\n           \'lb_tree_search\':           37        0        0       0          0      0             0       4/36\n                   \'max_lp\':           41        0        0       0          0      0             0       8/53\n      \'objective_lb_search\':           33        0        0       0          0      0             0       0/48\n                  \'probing\':           33        0        0       0          0      0             0       0/48\n             \'pseudo_costs\':           33        0        2       0          0      0             0       0/64\n            \'quick_restart\':           33        0        2       0          0      0             0       0/64\n            \'reduced_costs\':           38        3        4       0          0      0             0       5/80\n\nLp Cut          default_lp  max_lp  reduced_costs  lb_tree_search\n         CG_K:           -       2              -               -\n      MIR_1_K:           -       2              -               -\n      MIR_2_K:           -       1              -               -\n      MIR_3_R:           1       -              -               -\n      MIR_5_K:           -       -              -               1\n      MIR_5_R:           -       -              -               1\n  SquareLower:           -       3              -               2\n  SquareUpper:           1       -              5               -\n\nLNS stats           Improv/Calls  Closed  Difficulty  TimeLimit\n  \'graph_arc_lns\':           0/0      0%        0.50       0.10\n  \'graph_cst_lns\':           0/0      0%        0.50       0.10\n  \'graph_dec_lns\':           0/0      0%        0.50       0.10\n  \'graph_var_lns\':           0/0      0%        0.50       0.10\n      \'rins/rens\':           0/0      0%        0.50       0.10\n    \'rnd_cst_lns\':           0/0      0%        0.50       0.10\n    \'rnd_var_lns\':           0/0      0%        0.50       0.10\n\nLS stats               Batches  Restarts  LinMoves  GenMoves  CompoundMoves  WeightUpdates\n   \'fj_long_default\':        1         1         8        80              0             70\n  \'fj_short_default\':        1         1         0       315             49              4\n      \'violation_ls\':        1         0         0       214              0              3\n\nSolutions (3)    Num   Rank\n       \'no_lp\':    3  [1,3]\n\nObjective bounds     Num\n       \'bool_core\':    1\n      \'default_lp\':    1\n  \'initial_domain\':    1\n          \'max_lp\':    1\n\nSolution repositories    Added  Queried  Ignored  Synchro\n  \'feasible solutions\':      5        5        0        4\n        \'lp solutions\':      0        0        0        0\n                \'pump\':      0        0\n\nImproving bounds shared    Num\n            \'default_lp\':    4\n                 \'no_lp\':   17\n   \'quick_restart_no_lp\':   21\n         \'reduced_costs\':    6\n\nCpSolverResponse summary:\nstatus: OPTIMAL\nobjective: 284\nbest_bound: 284\nintegers: 21\nbooleans: 0\nconflicts: 0\nbranches: 0\npropagations: 0\ninteger_propagations: 0\nrestarts: 0\nlp_iterations: 0\nwalltime: 0.0191058\nusertime: 0.0191059\ndeterministic_time: 0.00109172\ngap_integral: 0.000578046\nsolution_fingerprint: 0x2456422f97b39c83\n\n""
inner_objective_lower_bound: 284
num_integers: 21";0;200;284;0;201;284
2024-06-14_20-41;circles_5_100;568;2282;61;682;56;"log_search_progress: true
cp_model_presolve: true
linearization_level: 1
log_to_stdout: false
log_to_response: true
num_workers: 16
";"objective_value: 568
best_objective_bound: 568
num_booleans: 61
num_conflicts: 56
num_branches: 682
num_binary_propagations: 10406
num_integer_propagations: 29679
wall_time: 2.2822219
user_time: 2.2822221000000003
deterministic_time: 15.108980113245826
solution_info: ""rnd_cst_lns (d=0.91 s=73 t=0.10 p=1.00 stall=4 h=auto_l0)""
gap_integral: 26.471159131193843
num_restarts: 212
num_lp_iterations: 189
solve_log: ""\nStarting CP-SAT solver v9.10.4067\nParameters: log_search_progress: true cp_model_presolve: true linearization_level: 1 log_to_stdout: false log_to_response: true num_workers: 16\n\nInitial optimization model \'\': (model_fingerprint: 0xa82c042d8d1b626f)\n#Variables: 274 (#ints: 10 in objective)\n  - 112 in [-500,500]\n  - 50 in [0,500]\n  - 112 in [0,250000]\n#kIntProd: 112\n#kLinear1: 2\n#kLinear2: 96\n#kLinear3: 112\n\nStarting presolve at 0.00s\n  7.47e-05s  0.00e+00d  [DetectDominanceRelations] \n  1.18e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=2 #num_dual_strengthening=1 \n  7.90e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::ExtractEncodingFromLinear] \n  5.84e-04s  2.78e-06d  [operations_research::sat::CpModelPresolver::Probe] \n  6.10e-06s  0.00e+00d  [MaxClique] \n  6.42e-05s  0.00e+00d  [DetectDominanceRelations] \n  5.77e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  8.27e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessAtMostOneAndLinear] \n  3.01e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDuplicateConstraints] \n  1.04e-04s  1.79e-06d  [operations_research::sat::CpModelPresolver::DetectDominatedLinearConstraints] #relevant_constraints=200 #num_inclusions=38 #num_redundant=38 \n  1.21e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDifferentVariables] \n  3.70e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessSetPPC] \n  2.56e-05s  2.07e-06d  [operations_research::sat::CpModelPresolver::FindAlmostIdenticalLinearConstraints] #num_tested_pairs=138 \n  1.16e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigAtMostOneAndLinearOverlap] \n  3.01e-05s  9.21e-06d  [operations_research::sat::CpModelPresolver::FindBigVerticalLinearOverlap] \n  1.40e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigHorizontalLinearOverlap] \n  1.50e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::MergeClauses] \n  6.00e-05s  0.00e+00d  [DetectDominanceRelations] \n  6.86e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=2 #num_dual_strengthening=1 \n  7.10e-05s  0.00e+00d  [DetectDominanceRelations] \n  6.52e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  5.37e-04s  2.63e-06d  [operations_research::sat::CpModelPresolver::Probe] \n  3.00e-06s  0.00e+00d  [MaxClique] \n  5.92e-05s  0.00e+00d  [DetectDominanceRelations] \n  5.53e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  6.62e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessAtMostOneAndLinear] \n  2.88e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDuplicateConstraints] \n  4.46e-05s  1.29e-06d  [operations_research::sat::CpModelPresolver::DetectDominatedLinearConstraints] #relevant_constraints=162 \n  1.16e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDifferentVariables] \n  3.30e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessSetPPC] \n  2.29e-05s  2.04e-06d  [operations_research::sat::CpModelPresolver::FindAlmostIdenticalLinearConstraints] #num_tested_pairs=136 \n  9.90e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigAtMostOneAndLinearOverlap] \n  3.01e-05s  9.21e-06d  [operations_research::sat::CpModelPresolver::FindBigVerticalLinearOverlap] \n  1.30e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigHorizontalLinearOverlap] \n  1.60e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::MergeClauses] \n  5.69e-05s  0.00e+00d  [DetectDominanceRelations] \n  5.41e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  6.73e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ExpandObjective] #entries=500 #tight_variables=250 #tight_constraints=106 #expands=38 \n\nPresolve summary:\n  - 6 affine relations were detected.\n  - rule \'TODO dual: only one blocking constraint?\' was applied 672 times.\n  - rule \'affine: new relation\' was applied 6 times.\n  - rule \'linear inclusion: subset + singleton is equality\' was applied 38 times.\n  - rule \'linear: always true\' was applied 2 times.\n  - rule \'linear: empty\' was applied 2 times.\n  - rule \'linear: fixed or dup variables\' was applied 10 times.\n  - rule \'linear: reduced variable domains\' was applied 8 times.\n  - rule \'linear: reduced variable domains in derived constraint\' was applied 38 times.\n  - rule \'linear: remapped using affine relations\' was applied 12 times.\n  - rule \'linear: simplified rhs\' was applied 94 times.\n  - rule \'objective: expanded via tight equality\' was applied 38 times.\n  - rule \'presolve: 2 unused variables removed.\' was applied 1 time.\n  - rule \'presolve: iteration\' was applied 2 times.\n\nPresolved optimization model \'\': (model_fingerprint: 0xf923e46c8234b6d5)\n#Variables: 266 (#ints: 48 in objective)\n  - 68 in [-500,500]\n  - 86 in [0,500]\n  - 112 in [0,250000]\n#kIntProd: 112\n#kLinear2: 56\n#kLinear3: 106\n\nPreloading model.\n#Bound   0.01s best:inf   next:[0,5000]   initial_domain\n#Model   0.01s var:266/266 constraints:274/274\n\nStarting search at 0.01s with 16 workers.\n11 full problem subsolvers: [core, default_lp, lb_tree_search, max_lp, no_lp, objective_lb_search, probing, pseudo_costs, quick_restart, quick_restart_no_lp, reduced_costs]\n4 first solution subsolvers: [fj_long_default, fj_short_default, fs_random, fs_random_quick_restart]\n9 incomplete subsolvers: [feasibility_pump, graph_arc_lns, graph_cst_lns, graph_dec_lns, graph_var_lns, rins/rens, rnd_cst_lns, rnd_var_lns, violation_ls]\n3 helper subsolvers: [neighborhood_helper, synchronization_agent, update_gap_integral]\n#Bound   0.01s best:inf   next:[1,5000]   bool_core (num_cores=1 [size:2 mw:1 d:1] a=47 d=1 fixed=0/48 clauses=0)\n#Bound   0.01s best:inf   next:[2,5000]   bool_core (num_cores=1 [cover] a=47 d=1 fixed=0/51 clauses=1)\n#Bound   0.01s best:inf   next:[3,5000]   bool_core (num_cores=1 [cover] a=47 d=1 fixed=1/54 clauses=3)\n#Bound   0.01s best:inf   next:[4,5000]   bool_core (num_cores=1 [cover] a=47 d=1 fixed=2/57 clauses=6)\n#Bound   0.01s best:inf   next:[5,5000]   bool_core (num_cores=1 [cover] a=47 d=1 fixed=3/60 clauses=10)\n#Bound   0.01s best:inf   next:[6,5000]   bool_core (num_cores=1 [cover] a=47 d=1 fixed=4/63 clauses=15)\n#Bound   0.01s best:inf   next:[7,5000]   bool_core (num_cores=1 [cover] a=47 d=1 fixed=5/66 clauses=21)\n#Bound   0.01s best:inf   next:[8,5000]   bool_core (num_cores=1 [cover] a=47 d=1 fixed=6/69 clauses=28)\n#Bound   0.01s best:inf   next:[9,5000]   bool_core (num_cores=1 [cover] a=47 d=1 fixed=7/72 clauses=36)\n#Bound   0.01s best:inf   next:[10,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=8/75 clauses=45)\n#Bound   0.01s best:inf   next:[11,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=9/78 clauses=55)\n#Bound   0.01s best:inf   next:[12,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=10/81 clauses=66)\n#Bound   0.01s best:inf   next:[13,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=11/84 clauses=78)\n#Bound   0.01s best:inf   next:[14,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=12/87 clauses=91)\n#Bound   0.01s best:inf   next:[15,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=13/90 clauses=105)\n#Bound   0.01s best:inf   next:[16,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=14/93 clauses=120)\n#Bound   0.01s best:inf   next:[17,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=15/96 clauses=136)\n#Bound   0.01s best:inf   next:[18,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=16/99 clauses=153)\n#Bound   0.01s best:inf   next:[19,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=17/102 clauses=171)\n#Bound   0.01s best:inf   next:[20,5000]  bool_core (num_cores=1 [cover] a=47 d=1 fixed=18/105 clauses=190)\n#1       0.05s best:3025  next:[312,3024] no_lp (fixed_bools=0/383)\n#2       0.05s best:3014  next:[315,3013] quick_restart_no_lp (fixed_bools=0/525)\n#3       0.06s best:2949  next:[326,2948] no_lp (fixed_bools=0/413)\n#4       0.06s best:2940  next:[327,2939] no_lp (fixed_bools=0/415)\n#5       0.06s best:2929  next:[328,2928] no_lp (fixed_bools=0/416)\n#6       0.07s best:2787  next:[330,2786] quick_restart_no_lp (fixed_bools=0/656)\n#7       0.07s best:2437  next:[331,2436] quick_restart_no_lp (fixed_bools=0/708)\n#8       0.07s best:2314  next:[333,2313] quick_restart_no_lp (fixed_bools=0/725)\n#9       0.08s best:2191  next:[335,2190] quick_restart_no_lp (fixed_bools=0/783)\n#10      0.08s best:1784  next:[336,1783] quick_restart_no_lp (fixed_bools=0/806)\n#11      0.08s best:1284  next:[336,1283] quick_restart_no_lp (fixed_bools=0/808)\n#12      0.11s best:1282  next:[343,1281] quick_restart_no_lp (fixed_bools=0/944)\n#13      0.12s best:926   next:[344,925]  graph_var_lns (d=0.81 s=67 t=0.10 p=1.00 stall=2 h=auto_l0)\n#14      0.15s best:568   next:[347,567]  rnd_cst_lns (d=0.91 s=73 t=0.10 p=1.00 stall=4 h=auto_l0)\n#Bound   0.95s best:568   next:[400,567]  objective_lb_search [skipped_logs=279]\n#Bound   1.91s best:568   next:[440,567]  objective_lb_search [skipped_logs=16]\n#Done    2.26s quick_restart_no_lp\n#Done    2.26s max_lp\n#Done    2.26s objective_lb_search\n#Done    2.26s probing\n#Bound   2.16s best:568   next:[453,567]  objective_lb_search [skipped_logs=2]\n\nTask timing                          n [     min,      max]      avg      dev     time         n [     min,      max]      avg      dev    dtime\n                     \'core\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [   4.32s,    4.32s]    4.32s   0.00ns    4.32s\n               \'default_lp\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [679.62ms, 679.62ms] 679.62ms   0.00ns 679.62ms\n         \'feasibility_pump\':        17 [111.20us,   6.75ms] 720.96us   1.68ms  12.26ms        16 [ 47.14us,   5.52ms] 389.06us   1.32ms   6.22ms\n          \'fj_long_default\':         5 [  6.94ms,  11.13ms]   9.00ms   1.56ms  44.99ms         5 [  1.43ms,   1.86ms]   1.65ms 149.16us   8.24ms\n         \'fj_short_default\':         6 [  6.63ms,  11.65ms]   7.97ms   1.81ms  47.82ms         6 [  1.68ms,   2.00ms]   1.89ms 113.49us  11.35ms\n                \'fs_random\':         1 [ 41.78ms,  41.78ms]  41.78ms   0.00ns  41.78ms         1 [  6.25ms,   6.25ms]   6.25ms   0.00ns   6.25ms\n  \'fs_random_quick_restart\':         1 [ 41.74ms,  41.74ms]  41.74ms   0.00ns  41.74ms         1 [  7.24ms,   7.24ms]   7.24ms   0.00ns   7.24ms\n            \'graph_arc_lns\':        16 [290.80us, 232.94ms]  76.95ms  90.21ms    1.23s        14 [  9.33us, 100.08ms]  45.48ms  46.82ms 636.74ms\n            \'graph_cst_lns\':        16 [808.60us, 641.41ms] 137.07ms 176.00ms    2.19s        15 [  5.74us, 100.05ms]  44.35ms  46.21ms 665.26ms\n            \'graph_dec_lns\':        16 [  1.32ms, 358.15ms] 120.28ms 127.82ms    1.92s        16 [ 10.00ns, 100.10ms]  40.57ms  46.45ms 649.15ms\n            \'graph_var_lns\':        16 [385.00us, 363.64ms]  61.13ms 104.13ms 978.07ms        14 [  7.37us, 100.09ms]  27.17ms  39.42ms 380.37ms\n           \'lb_tree_search\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [481.11ms, 481.11ms] 481.11ms   0.00ns 481.11ms\n                   \'max_lp\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [666.76ms, 666.76ms] 666.76ms   0.00ns 666.76ms\n                    \'no_lp\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [842.14ms, 842.14ms] 842.14ms   0.00ns 842.14ms\n      \'objective_lb_search\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [697.48ms, 697.48ms] 697.48ms   0.00ns 697.48ms\n                  \'probing\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [ 51.68ms,  51.68ms]  51.68ms   0.00ns  51.68ms\n             \'pseudo_costs\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [671.55ms, 671.55ms] 671.55ms   0.00ns 671.55ms\n            \'quick_restart\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [686.58ms, 686.58ms] 686.58ms   0.00ns 686.58ms\n      \'quick_restart_no_lp\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [   1.13s,    1.13s]    1.13s   0.00ns    1.13s\n            \'reduced_costs\':         1 [   2.25s,    2.25s]    2.25s   0.00ns    2.25s         1 [651.94ms, 651.94ms] 651.94ms   0.00ns 651.94ms\n                \'rins/rens\':        17 [ 78.70us, 244.06ms]  61.94ms  96.24ms    1.05s         5 [100.01ms, 100.05ms] 100.03ms  17.01us 500.16ms\n              \'rnd_cst_lns\':        16 [583.70us, 411.21ms] 109.79ms 126.69ms    1.76s        14 [730.00ns, 100.12ms]  47.99ms  46.73ms 671.87ms\n              \'rnd_var_lns\':        17 [  1.47ms, 366.43ms] 106.28ms 119.67ms    1.81s        17 [490.00ns, 100.05ms]  38.21ms  46.10ms 649.50ms\n             \'violation_ls\':        17 [  5.92ms,   9.66ms]   6.54ms 801.63us 111.16ms        17 [  1.91ms,   2.32ms]   2.20ms  98.16us  37.43ms\n\nSearch stats                  Bools  Conflicts  Branches  Restarts  BoolPropag  IntegerPropag\n                     \'core\':  3\'315     14\'260    48\'469     9\'699  11\'008\'357      3\'467\'144\n               \'default_lp\':  1\'149      4\'471    19\'716     2\'638   1\'342\'972      3\'545\'880\n                \'fs_random\':     61         56       682       212      10\'406         29\'679\n  \'fs_random_quick_restart\':    109        104     1\'057       166       7\'242         30\'040\n           \'lb_tree_search\':    579        287    36\'491     1\'242     242\'153        917\'971\n                   \'max_lp\':  1\'057      4\'019    16\'764     2\'251   1\'193\'803      3\'343\'347\n                    \'no_lp\':  1\'049      9\'575    33\'604     3\'338   2\'942\'895      4\'443\'251\n      \'objective_lb_search\':    865      4\'354    15\'291     1\'998   1\'312\'999      3\'345\'268\n                  \'probing\':    302        122       482       482       3\'887         67\'290\n             \'pseudo_costs\':    951      3\'424    16\'225     2\'651   1\'027\'859      3\'177\'299\n            \'quick_restart\':    492      2\'766    19\'347     3\'188     586\'708      3\'724\'891\n      \'quick_restart_no_lp\':  1\'523      7\'290    39\'930     3\'497   3\'015\'213      6\'679\'363\n            \'reduced_costs\':    993      4\'623    17\'087     1\'641   1\'697\'609      3\'134\'209\n\nSAT stats                     ClassicMinim  LitRemoved  LitLearned  LitForgotten  Subsumed  MClauses  MDecisions  MLitTrue  MSubsumed  MLitRemoved  MReused\n                     \'core\':        13\'165     115\'208     119\'588             0        52     4\'618      22\'905         0          0            0      204\n               \'default_lp\':         3\'219       8\'530      28\'617             0       139     1\'724      10\'007         0        759        4\'273      235\n                \'fs_random\':             6           6         174             0         0       100         497         0          2            6        0\n  \'fs_random_quick_restart\':             6           6         559             0         0        69         406         0         19           99        1\n           \'lb_tree_search\':            24          37       1\'403             0        25       283       1\'480         0         71          293       64\n                   \'max_lp\':         2\'824       7\'108      23\'264             0       138     1\'445       8\'773         0        622        3\'436      180\n                    \'no_lp\':         7\'135      28\'356      72\'059             0        80     1\'929      11\'342         0        759        3\'942      288\n      \'objective_lb_search\':         3\'161       7\'419      17\'507             0        75     1\'104       5\'724         0        325        1\'383      105\n                  \'probing\':             0           0         122             0         0         0           0         0          0            0        0\n             \'pseudo_costs\':         2\'542       6\'936      20\'046             0       127     1\'752       9\'487         0        831        4\'155      314\n            \'quick_restart\':         1\'933       5\'485      17\'009             0       149     1\'719      11\'296         3        609        2\'900      338\n      \'quick_restart_no_lp\':         4\'556      11\'192      44\'224             0       266     2\'002       9\'875       100      1\'147        5\'735      210\n            \'reduced_costs\':         4\'196      10\'910      31\'828             0        23     1\'239       5\'778         0        977        4\'830      168\n\nLp stats                      Component  Iterations  AddedCuts  OPTIMAL  DUAL_F.  DUAL_U.\n               \'default_lp\':          1       3\'372        792    7\'957        0        0\n                \'fs_random\':          1         189          6       75        0        0\n  \'fs_random_quick_restart\':          1         284          9      173        0        0\n           \'lb_tree_search\':          1      21\'578        560   14\'520      108        0\n                   \'max_lp\':          1       4\'743        948    6\'922       11        0\n      \'objective_lb_search\':          1      11\'608        365    9\'814        0        0\n                  \'probing\':          1       1\'603        128    1\'996        0        0\n             \'pseudo_costs\':          1       7\'933      1\'458    6\'318       30        0\n            \'quick_restart\':          1      11\'631        756    6\'237        0        0\n            \'reduced_costs\':          1       1\'057        222    7\'425        0        0\n\nLp dimension                                                                  Final dimension of first component\n               \'default_lp\':  423 rows, 236 columns, 1783 entries with magnitude in [2.281411e-03, 1.000000e+00]\n                \'fs_random\':   167 rows, 236 columns, 432 entries with magnitude in [3.163860e-02, 1.000000e+00]\n  \'fs_random_quick_restart\':   168 rows, 236 columns, 433 entries with magnitude in [4.472136e-02, 1.000000e+00]\n           \'lb_tree_search\':   188 rows, 236 columns, 482 entries with magnitude in [4.472136e-02, 1.000000e+00]\n                   \'max_lp\':  435 rows, 236 columns, 1832 entries with magnitude in [2.193457e-03, 1.000000e+00]\n      \'objective_lb_search\':   245 rows, 236 columns, 861 entries with magnitude in [2.317393e-03, 1.000000e+00]\n                  \'probing\':   189 rows, 236 columns, 485 entries with magnitude in [3.163860e-02, 1.000000e+00]\n             \'pseudo_costs\':  516 rows, 236 columns, 2335 entries with magnitude in [7.945522e-05, 1.000000e+00]\n            \'quick_restart\':  410 rows, 236 columns, 1767 entries with magnitude in [2.994931e-03, 1.000000e+00]\n            \'reduced_costs\':   163 rows, 236 columns, 431 entries with magnitude in [4.472136e-02, 1.000000e+00]\n\nLp debug                      CutPropag  CutEqPropag  Adjust  Overflow      Bad  BadScaling\n               \'default_lp\':         90            0   3\'704         0    7\'980           0\n                \'fs_random\':          0            0       0         0      767           0\n  \'fs_random_quick_restart\':          0            0       0         0    1\'743           0\n           \'lb_tree_search\':          0            0   6\'324         0    2\'976           0\n                   \'max_lp\':        128            0   3\'757         0   10\'995           0\n      \'objective_lb_search\':          1            0   3\'829         0    9\'232           0\n                  \'probing\':         71            0     456         0  175\'335           0\n             \'pseudo_costs\':        159            6   3\'850         0   14\'110           0\n            \'quick_restart\':        513           14   3\'180         0   23\'964           0\n            \'reduced_costs\':          0            0   5\'398         0    1\'804           0\n\nLp pool                       Constraints  Updates  Simplif  Merged  Shortened  Split  Strenghtened      Cuts/Call\n               \'default_lp\':        1\'025    1\'546      184      46          0     50             5      792/7\'452\n                \'fs_random\':          285        0        0       0          0      0             0          6/443\n  \'fs_random_quick_restart\':          288        0        0       0          0      0             0          9/974\n           \'lb_tree_search\':          838      243        1       1          0      1             0  560/1\'175\'104\n                   \'max_lp\':        1\'193    1\'628      111      34          0     15             7    948/556\'860\n      \'objective_lb_search\':          640      889       53       4          0     41             0      365/7\'220\n                  \'probing\':          406      543       34       1          0      0             0    128/147\'507\n             \'pseudo_costs\':        1\'717    1\'931      239      20          0     81             1  1\'458/459\'482\n            \'quick_restart\':        1\'029    2\'722      429       6          0     38            17     756/15\'891\n            \'reduced_costs\':          500      312        5       1          0      0             0    222/640\'069\n\nLp Cut          fs_ran  fs_ran  defaul  max_lp  quick_  reduce  pseudo  lb_tre  probin  object\n        CG_FF:       -       -       6       8      13       -       8       3       -       3\n         CG_K:       2       2     191     149     171      27     226      39      24      94\n         CG_R:       -       -     304     233     349      48     335      14      57     126\n      MIR_1_K:       1       1       5       8       6       1       4       4       -       4\n      MIR_1_R:       -       -       1       3       2       -       -       -       -       -\n     MIR_2_FF:       -       -       3       1       -       -       1       -       -       1\n      MIR_2_K:       -       2      14      12      18       3      11       3       3       8\n      MIR_2_R:       -       -      16       3       5       -       4       -       1       6\n     MIR_3_FF:       -       -       -       -       -       -       -       -       -       1\n      MIR_3_K:       -       1      25      23      25       5      22       7       7      12\n      MIR_3_R:       -       -      28      14      18       1      14       -       3      13\n     MIR_4_FF:       -       -       -       -       -       -       -       -       -       1\n      MIR_4_K:       -       -      17      18      14       4      22       4       4      11\n      MIR_4_R:       -       -      36      19      20       4      24       -       3      11\n      MIR_5_K:       -       -       8      12      10       2      14       1       2       7\n      MIR_5_R:       -       -      36      14      10       3      14       -       1       9\n      MIR_6_K:       -       -       1       2       4       -       5       2       -       2\n      MIR_6_R:       -       -      13      11       1       1       4       -       -       7\n  SquareLower:       3       3      33     339      14     105     642     446       5      19\n  SquareUpper:       -       -      51      77      73      18     103      37      18      28\n  ZERO_HALF_R:       -       -       4       2       3       -       5       -       -       2\n\nLNS stats           Improv/Calls  Closed  Difficulty  TimeLimit\n  \'graph_arc_lns\':          2/15     67%        0.91       0.10\n  \'graph_cst_lns\':          1/16     56%        0.88       0.10\n  \'graph_dec_lns\':          0/16     56%        0.90       0.10\n  \'graph_var_lns\':          3/15     73%        0.96       0.10\n      \'rins/rens\':         12/15     67%        0.95       0.10\n    \'rnd_cst_lns\':          3/16     56%        0.88       0.10\n    \'rnd_var_lns\':          1/17     59%        0.92       0.10\n\nLS stats               Batches  Restarts  LinMoves  GenMoves  CompoundMoves  WeightUpdates\n   \'fj_long_default\':        5         1       425     4\'194              0            156\n  \'fj_short_default\':        6         1         0     8\'990          1\'933             39\n      \'violation_ls\':       17         0        61    12\'125            828            355\n\nSolutions (14)            Num     Rank\n        \'graph_var_lns\':    1  [13,13]\n                \'no_lp\':    4    [1,5]\n  \'quick_restart_no_lp\':    8   [2,12]\n          \'rnd_cst_lns\':    1  [14,14]\n\nObjective bounds          Num\n            \'bool_core\':  287\n       \'initial_domain\':    1\n       \'lb_tree_search\':    8\n               \'max_lp\':    1\n  \'objective_lb_search\':   24\n\nSolution repositories    Added  Queried  Ignored  Synchro\n  \'feasible solutions\':     57      233        0       52\n        \'lp solutions\':    188        5        0       66\n                \'pump\':     16       12\n\nImproving bounds shared      Num\n            \'default_lp\':    109\n                \'max_lp\':    280\n   \'objective_lb_search\':     67\n               \'probing\':    219\n          \'pseudo_costs\':    227\n         \'quick_restart\':  3\'796\n   \'quick_restart_no_lp\':  1\'122\n         \'reduced_costs\':     64\n\nCpSolverResponse summary:\nstatus: OPTIMAL\nobjective: 568\nbest_bound: 568\nintegers: 267\nbooleans: 61\nconflicts: 56\nbranches: 682\npropagations: 10406\ninteger_propagations: 29679\nrestarts: 212\nlp_iterations: 189\nwalltime: 2.28222\nusertime: 2.28222\ndeterministic_time: 15.109\ngap_integral: 26.4712\nsolution_fingerprint: 0x54fc908144d42bf3\n\n""
inner_objective_lower_bound: 568
num_integers: 267";150;347;568;2260;440;568
2024-06-14_20-44;circles_10_100;1420;134078;1257;18136;985;"log_search_progress: true
cp_model_presolve: true
linearization_level: 1
log_to_stdout: false
log_to_response: true
num_workers: 16
";"objective_value: 1420
best_objective_bound: 1420
num_booleans: 1257
num_conflicts: 985
num_branches: 18136
num_binary_propagations: 442323
num_integer_propagations: 1180266
wall_time: 134.0788717
user_time: 134.0788719
deterministic_time: 692.50723400220613
solution_info: ""core""
gap_integral: 2112.8103367415551
num_restarts: 2592
num_lp_iterations: 3781
solve_log: ""\nStarting CP-SAT solver v9.10.4067\nParameters: log_search_progress: true cp_model_presolve: true linearization_level: 1 log_to_stdout: false log_to_response: true num_workers: 16\n\nInitial optimization model \'\': (model_fingerprint: 0xb1241a5c2cbaed4e)\n#Variables: 1\'244 (#ints: 20 in objective)\n  - 522 in [-1000,1000]\n  - 200 in [0,1000]\n  - 522 in [0,1000000]\n#kIntProd: 522\n#kLinear1: 2\n#kLinear2: 441\n#kLinear3: 522\n\nStarting presolve at 0.00s\n  3.13e-04s  0.00e+00d  [DetectDominanceRelations] \n  5.23e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=2 #num_dual_strengthening=1 \n  1.80e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ExtractEncodingFromLinear] \n  2.56e-03s  1.32e-05d  [operations_research::sat::CpModelPresolver::Probe] \n  9.70e-06s  0.00e+00d  [MaxClique] \n  2.67e-04s  0.00e+00d  [DetectDominanceRelations] \n  2.67e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  3.65e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessAtMostOneAndLinear] \n  1.40e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDuplicateConstraints] \n  4.29e-04s  8.56e-06d  [operations_research::sat::CpModelPresolver::DetectDominatedLinearConstraints] #relevant_constraints=955 #num_inclusions=178 #num_redundant=178 \n  5.15e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDifferentVariables] \n  1.49e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessSetPPC] \n  9.83e-05s  9.45e-06d  [operations_research::sat::CpModelPresolver::FindAlmostIdenticalLinearConstraints] #num_tested_pairs=630 \n  4.44e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigAtMostOneAndLinearOverlap] \n  1.42e-04s  4.41e-05d  [operations_research::sat::CpModelPresolver::FindBigVerticalLinearOverlap] \n  4.30e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigHorizontalLinearOverlap] \n  4.30e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::MergeClauses] \n  2.41e-04s  0.00e+00d  [DetectDominanceRelations] \n  3.13e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=2 #num_dual_strengthening=1 \n  2.39e-04s  0.00e+00d  [DetectDominanceRelations] \n  2.50e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  1.93e-03s  1.25e-05d  [operations_research::sat::CpModelPresolver::Probe] \n  4.60e-06s  0.00e+00d  [MaxClique] \n  2.43e-04s  0.00e+00d  [DetectDominanceRelations] \n  2.52e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  3.16e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessAtMostOneAndLinear] \n  1.26e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDuplicateConstraints] \n  1.55e-04s  6.21e-06d  [operations_research::sat::CpModelPresolver::DetectDominatedLinearConstraints] #relevant_constraints=777 \n  4.74e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDifferentVariables] \n  1.45e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessSetPPC] \n  9.33e-05s  9.06e-06d  [operations_research::sat::CpModelPresolver::FindAlmostIdenticalLinearConstraints] #num_tested_pairs=604 \n  3.99e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigAtMostOneAndLinearOverlap] \n  1.38e-04s  4.41e-05d  [operations_research::sat::CpModelPresolver::FindBigVerticalLinearOverlap] \n  3.90e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigHorizontalLinearOverlap] \n  4.10e-06s  0.00e+00d  [operations_research::sat::CpModelPresolver::MergeClauses] \n  2.44e-04s  0.00e+00d  [DetectDominanceRelations] \n  2.51e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  2.51e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::ExpandObjective] #entries=2\'420 #tight_variables=1\'210 #tight_constraints=516 #expands=178 \n\nPresolve summary:\n  - 6 affine relations were detected.\n  - rule \'TODO dual: only one blocking constraint?\' was applied 3\'132 times.\n  - rule \'affine: new relation\' was applied 6 times.\n  - rule \'linear inclusion: subset + singleton is equality\' was applied 178 times.\n  - rule \'linear: always true\' was applied 2 times.\n  - rule \'linear: empty\' was applied 2 times.\n  - rule \'linear: fixed or dup variables\' was applied 10 times.\n  - rule \'linear: reduced variable domains\' was applied 8 times.\n  - rule \'linear: reduced variable domains in derived constraint\' was applied 178 times.\n  - rule \'linear: remapped using affine relations\' was applied 12 times.\n  - rule \'linear: simplified rhs\' was applied 439 times.\n  - rule \'objective: expanded via tight equality\' was applied 178 times.\n  - rule \'presolve: 2 unused variables removed.\' was applied 1 time.\n  - rule \'presolve: iteration\' was applied 2 times.\n\nPresolved optimization model \'\': (model_fingerprint: 0x24246680772e781d)\n#Variables: 1\'236 (#ints: 198 in objective)\n  - 338 in [-1000,1000]\n  - 376 in [0,1000]\n  - 522 in [0,1000000]\n#kIntProd: 522\n#kLinear2: 261\n#kLinear3: 516\n\nPreloading model.\n#Bound   0.03s best:inf   next:[0,20000]  initial_domain\n#Model   0.03s var:1236/1236 constraints:1299/1299\n\nStarting search at 0.03s with 16 workers.\n11 full problem subsolvers: [core, default_lp, lb_tree_search, max_lp, no_lp, objective_lb_search, probing, pseudo_costs, quick_restart, quick_restart_no_lp, reduced_costs]\n4 first solution subsolvers: [fj_long_default, fj_short_default, fs_random, fs_random_quick_restart]\n9 incomplete subsolvers: [feasibility_pump, graph_arc_lns, graph_cst_lns, graph_dec_lns, graph_var_lns, rins/rens, rnd_cst_lns, rnd_var_lns, violation_ls]\n3 helper subsolvers: [neighborhood_helper, synchronization_agent, update_gap_integral]\n#Bound   0.05s best:inf   next:[40,20000] max_lp\n#Bound   0.05s best:inf   next:[41,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=39/318 clauses=820)\n#Bound   0.05s best:inf   next:[42,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=40/321 clauses=861)\n#Bound   0.05s best:inf   next:[43,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=41/324 clauses=903)\n#Bound   0.05s best:inf   next:[44,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=42/327 clauses=946)\n#Bound   0.05s best:inf   next:[45,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=43/330 clauses=990)\n#Bound   0.05s best:inf   next:[46,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=44/333 clauses=1\'035)\n#Bound   0.05s best:inf   next:[47,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=45/336 clauses=1\'081)\n#Bound   0.05s best:inf   next:[48,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=46/339 clauses=1\'128)\n#Bound   0.05s best:inf   next:[49,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=47/342 clauses=1\'176)\n#Bound   0.05s best:inf   next:[50,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=48/345 clauses=1\'225)\n#Bound   0.05s best:inf   next:[51,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=49/348 clauses=1\'275)\n#Bound   0.05s best:inf   next:[52,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=50/351 clauses=1\'326)\n#Bound   0.05s best:inf   next:[53,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=51/354 clauses=1\'378)\n#Bound   0.05s best:inf   next:[54,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=52/357 clauses=1\'431)\n#Bound   0.05s best:inf   next:[55,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=53/360 clauses=1\'485)\n#Bound   0.05s best:inf   next:[56,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=54/363 clauses=1\'540)\n#Bound   0.05s best:inf   next:[57,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=55/366 clauses=1\'596)\n#Bound   0.05s best:inf   next:[58,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=56/369 clauses=1\'653)\n#Bound   0.05s best:inf   next:[59,20000] bool_core (num_cores=1 [cover] a=197 d=1 fixed=57/372 clauses=1\'711)\n#Bound   0.92s best:inf   next:[324,20000] bool_core (num_cores=3 [cover] a=176 d=5 fixed=320/2668 clauses=28\'704) [skipped_logs=198]\n#1       1.80s best:12354 next:[328,12353] reduced_costs (fixed_bools=0/1678)\n#2       1.86s best:12212 next:[328,12211] rnd_cst_lns (d=0.71 s=280 t=0.10 p=1.00 stall=1 h=auto_l0)\n#3       1.96s best:8866  next:[328,8865] no_lp (fixed_bools=0/2364)\n#4       1.97s best:8865  next:[328,8864] no_lp (fixed_bools=0/2365)\n#5       1.97s best:8864  next:[328,8863] no_lp (fixed_bools=0/2365)\n#6       1.98s best:8863  next:[328,8862] no_lp (fixed_bools=0/2365)\n#7       1.98s best:8862  next:[328,8861] no_lp (fixed_bools=0/2366)\n#8       1.98s best:8861  next:[328,8860] no_lp (fixed_bools=0/2366)\n#9       1.99s best:8860  next:[328,8859] no_lp (fixed_bools=0/2369)\n#10      1.99s best:8859  next:[328,8858] no_lp (fixed_bools=0/2369)\n#11      1.99s best:8858  next:[328,8857] no_lp (fixed_bools=0/2369)\n#12      2.00s best:8857  next:[328,8856] no_lp (fixed_bools=0/2370)\n#13      2.00s best:8856  next:[328,8855] no_lp (fixed_bools=0/2370)\n#14      2.01s best:8855  next:[328,8854] no_lp (fixed_bools=0/2374)\n#15      2.01s best:8854  next:[328,8853] no_lp (fixed_bools=0/2374)\n#16      2.02s best:8853  next:[328,8852] no_lp (fixed_bools=0/2374)\n#17      2.02s best:8852  next:[328,8851] no_lp (fixed_bools=0/2375)\n#18      2.03s best:8851  next:[328,8850] no_lp (fixed_bools=0/2375)\n#19      2.03s best:8850  next:[328,8849] no_lp (fixed_bools=0/2378)\n#20      2.04s best:8849  next:[328,8848] no_lp (fixed_bools=0/2378)\n#21      2.04s best:8848  next:[328,8847] no_lp (fixed_bools=0/2378)\n#22      2.04s best:8847  next:[328,8846] no_lp (fixed_bools=0/2378)\n#23      2.05s best:8846  next:[328,8845] no_lp (fixed_bools=0/2384)\n#24      2.05s best:8845  next:[328,8844] no_lp (fixed_bools=0/2384)\n#25      2.05s best:8719  next:[328,8718] rnd_cst_lns (d=0.81 s=287 t=0.10 p=1.00 stall=0 h=auto_l0)\n#Bound   1.77s best:inf   next:[328,20000] bool_core (num_cores=3 [cover] a=176 d=5 fixed=324/2832 clauses=35\'232) [skipped_logs=3]\n#26      2.44s best:8506  next:[330,8505] quick_restart_no_lp (fixed_bools=0/5113)\n#27      2.51s best:8486  next:[330,8485] quick_restart_no_lp (fixed_bools=0/5190)\n#28      2.54s best:8485  next:[330,8484] quick_restart_no_lp (fixed_bools=0/5229)\n#29      2.61s best:8484  next:[337,8483] graph_var_lns (d=0.18 s=316 t=0.10 p=0.20 stall=5 h=auto_l0)\n#30      2.61s best:8478  next:[337,8477] quick_restart_no_lp (fixed_bools=0/5370)\n#31      2.66s best:8336  next:[337,8335] quick_restart_no_lp (fixed_bools=0/5443)\n#32      2.75s best:8194  next:[337,8193] quick_restart (fixed_bools=0/1474)\n#33      2.79s best:8080  next:[337,8079] quick_restart_no_lp (fixed_bools=0/5537)\n#34      2.81s best:8079  next:[337,8078] quick_restart_no_lp (fixed_bools=0/5537)\n#35      2.93s best:8074  next:[337,8073] quick_restart_no_lp (fixed_bools=0/5680)\n#36      2.99s best:8062  next:[337,8061] rnd_var_lns (d=0.86 s=321 t=0.10 p=0.71 stall=7 h=auto_l0)\n#37      3.01s best:8056  next:[337,8055] quick_restart (fixed_bools=0/1521)\n#Bound   2.58s best:8485  next:[337,8484] objective_lb_search [skipped_logs=1]\n#38      3.05s best:8055  next:[337,8054] quick_restart_no_lp (fixed_bools=0/5743)\n#39      3.05s best:8054  next:[337,8053] quick_restart_no_lp (fixed_bools=0/5743)\n#40      3.06s best:7913  next:[337,7912] quick_restart_no_lp (fixed_bools=0/5746)\n#41      3.10s best:7790  next:[337,7789] quick_restart_no_lp (fixed_bools=0/5750)\n#42      3.14s best:7649  next:[337,7648] quick_restart_no_lp (fixed_bools=0/5762)\n#43      3.15s best:7648  next:[337,7647] quick_restart_no_lp (fixed_bools=0/5764)\n#44      3.46s best:7526  next:[337,7525] graph_arc_lns (d=0.47 s=345 t=0.10 p=0.56 stall=7 h=auto_l0)\n#45      3.47s best:6668  next:[337,6667] rnd_cst_lns (d=0.77 s=357 t=0.10 p=0.55 stall=8 h=auto_l0)\n#46      3.66s best:6526  next:[337,6525] rnd_cst_lns (d=0.78 s=364 t=0.10 p=0.54 stall=1 h=auto_l0)\n#47      3.70s best:6309  next:[337,6308] quick_restart_no_lp (fixed_bools=0/6190)\n#48      3.76s best:6194  next:[337,6193] quick_restart_no_lp (fixed_bools=0/6211)\n#49      3.80s best:6193  next:[337,6192] quick_restart_no_lp (fixed_bools=0/6211)\n#50      3.90s best:6179  next:[337,6178] quick_restart_no_lp (fixed_bools=0/6331)\n#51      3.90s best:6172  next:[337,6171] quick_restart_no_lp (fixed_bools=0/6347)\n#52      3.91s best:6171  next:[337,6170] quick_restart_no_lp (fixed_bools=0/6353)\n#53      3.93s best:6170  next:[337,6169] quick_restart_no_lp (fixed_bools=0/6357)\n#Bound   4.09s best:6170  next:[338,6169] bool_core (num_cores=7 [cover] a=175 d=6 fixed=333/3254 clauses=29\'848)\n#54      4.11s best:6164  next:[353,6163] quick_restart_no_lp (fixed_bools=0/6571)\n#55      4.17s best:5925  next:[369,5924] graph_arc_lns (d=0.56 s=394 t=0.10 p=0.56 stall=4 h=auto_l0)\n#56      4.18s best:5868  next:[370,5867] quick_restart_no_lp (fixed_bools=0/6682)\n#57      4.66s best:5685  next:[393,5684] graph_arc_lns (d=0.37 s=415 t=0.10 p=0.50 stall=2 h=auto_l0)\n#58      4.72s best:5543  next:[394,5542] quick_restart (fixed_bools=0/1772)\n#59      4.92s best:5401  next:[398,5400] quick_restart_no_lp (fixed_bools=0/7284)\n#60      4.93s best:5259  next:[399,5258] graph_var_lns (d=0.40 s=435 t=0.10 p=0.52 stall=16 h=folio_rnd)\n#Bound   4.99s best:5259  next:[400,5258] bool_core (num_cores=7 [cover] a=175 d=6 fixed=395/5920 clauses=139\'619) [skipped_logs=61]\n#61      5.14s best:5179  next:[402,5178] rnd_var_lns (d=0.90 s=447 t=0.10 p=0.60 stall=10 h=folio_rnd)\n#62      5.56s best:5174  next:[406,5173] graph_arc_lns (d=0.60 s=464 t=0.10 p=0.56 stall=6 h=auto_l0)\n#63      5.82s best:5170  next:[408,5169] graph_arc_lns (d=0.52 s=471 t=0.10 p=0.54 stall=0 h=auto_l0)\n#64      5.94s best:5028  next:[409,5027] rnd_cst_lns (d=0.83 s=483 t=0.10 p=0.53 stall=16 h=folio_rnd)\n#Bound   5.89s best:5170  next:[409,5169] bool_core (num_cores=7 [cover] a=175 d=6 fixed=404/6307 clauses=164\'882) [skipped_logs=8]\n#65      6.02s best:5013  next:[409,5012] graph_dec_lns (d=0.87 s=487 t=0.10 p=0.53 stall=20 h=folio_rnd)\n#66      6.17s best:5012  next:[409,5011] quick_restart_no_lp (fixed_bools=0/7401)\n#67      6.30s best:5011  next:[410,5010] graph_dec_lns (d=0.89 s=494 t=0.10 p=0.55 stall=0 h=auto_l0)\n#68      6.42s best:4992  next:[411,4991] quick_restart (fixed_bools=0/2027)\n#69      6.43s best:4864  next:[411,4863] quick_restart_no_lp (fixed_bools=0/7546)\n#70      6.45s best:4816  next:[411,4815] quick_restart_no_lp (fixed_bools=0/7571)\n#71      6.45s best:4815  next:[411,4814] quick_restart_no_lp (fixed_bools=0/7571)\n#72      6.45s best:4814  next:[411,4813] quick_restart_no_lp (fixed_bools=0/7572)\n#73      6.57s best:4810  next:[412,4809] quick_restart (fixed_bools=0/2064)\n#74      6.70s best:4809  next:[412,4808] quick_restart_no_lp (fixed_bools=0/7738)\n#75      6.77s best:4808  next:[413,4807] quick_restart_no_lp (fixed_bools=0/7742)\n#76      6.77s best:4711  next:[413,4710] graph_var_lns (d=0.21 s=505 t=0.10 p=0.45 stall=3 h=auto_l0)\n#77      6.97s best:4571  next:[413,4570] graph_arc_lns (d=0.38 s=513 t=0.10 p=0.50 stall=4 h=auto_l0)\n#Bound   6.74s best:4809  next:[413,4808] bool_core (num_cores=7 [cover] a=175 d=6 fixed=408/6479 clauses=178\'206) [skipped_logs=3]\n#78      7.12s best:4570  next:[413,4569] quick_restart_no_lp (fixed_bools=0/7974)\n#79      7.14s best:4568  next:[413,4567] quick_restart_no_lp (fixed_bools=0/8001)\n#80      7.22s best:4484  next:[413,4483] rnd_var_lns (d=0.89 s=517 t=0.10 p=0.56 stall=1 h=auto_l0)\n#81      7.38s best:4483  next:[413,4482] quick_restart_no_lp (fixed_bools=0/8105)\n#82      7.39s best:4482  next:[413,4481] quick_restart_no_lp (fixed_bools=0/8105)\n#83      7.52s best:4474  next:[413,4473] graph_dec_lns (d=0.89 s=536 t=0.10 p=0.54 stall=5 h=auto_l0)\n#84      7.59s best:4265  next:[413,4264] graph_var_lns (d=0.28 s=547 t=0.10 p=0.49 stall=5 h=auto_l0)\n#85      7.71s best:4208  next:[414,4207] graph_var_lns (d=0.32 s=554 t=0.10 p=0.50 stall=0 h=auto_l0)\n#86      7.77s best:4096  next:[414,4095] quick_restart_no_lp (fixed_bools=0/8257)\n#87      7.79s best:4074  next:[414,4073] graph_var_lns (d=0.37 s=561 t=0.10 p=0.51 stall=0 h=auto_l0)\n#88      7.80s best:3999  next:[414,3998] quick_restart_no_lp (fixed_bools=0/8260)\n#89      7.83s best:3925  next:[414,3924] quick_restart_no_lp (fixed_bools=0/8273)\n#90      7.85s best:3924  next:[414,3923] violation_ls(batch:43 #solutions_imported:32 #lin_moves:2\'200 #lin_evals:104\'766 #gen_moves:10\'050 #gen_evals:204\'016 #comp_moves:80 #backtracks:2\'057 #weight_updates:2\'350)\n#91      7.90s best:3881  next:[414,3880] quick_restart (fixed_bools=0/2158)\n#Bound   7.66s best:4265  next:[414,4264] bool_core (num_cores=8 [size:1 mw:1] a=175 d=6 fixed=409/6522 clauses=172\'887) [skipped_logs=0]\n#92      8.03s best:3880  next:[414,3879] quick_restart_no_lp (fixed_bools=0/8325)\n#93      8.08s best:3811  next:[415,3810] quick_restart (fixed_bools=0/2181)\n#94      8.20s best:3810  next:[415,3809] quick_restart_no_lp (fixed_bools=0/8384)\n#95      8.21s best:3742  next:[415,3741] quick_restart (fixed_bools=0/2195)\n#96      8.23s best:3741  next:[415,3740] quick_restart_no_lp (fixed_bools=0/8401)\n#97      8.30s best:3739  next:[415,3738] quick_restart_no_lp (fixed_bools=0/8471)\n#98      8.43s best:3738  next:[415,3737] quick_restart_no_lp (fixed_bools=0/8474)\n#99      8.56s best:3654  next:[434,3653] quick_restart_no_lp (fixed_bools=0/8506)\n#100     8.65s best:3653  next:[438,3652] quick_restart_no_lp (fixed_bools=0/8561)\n#101     8.67s best:3652  next:[438,3651] quick_restart_no_lp (fixed_bools=0/8571)\n#102     8.73s best:3651  next:[441,3650] quick_restart_no_lp (fixed_bools=0/8595)\n#103     8.76s best:3650  next:[441,3649] quick_restart_no_lp (fixed_bools=0/8596)\n#104     8.80s best:3649  next:[442,3648] quick_restart_no_lp (fixed_bools=0/8599)\n#105     8.87s best:3645  next:[444,3644] graph_var_lns (d=0.56 s=624 t=0.10 p=0.54 stall=8 h=auto_l0)\n#106     8.93s best:3644  next:[445,3643] quick_restart_no_lp (fixed_bools=0/8635)\n#Bound   8.99s best:3644  next:[446,3643] bool_core (num_cores=10 [cover] a=155 d=6 fixed=440/7857 clauses=191\'764) [skipped_logs=31]\n#107     9.02s best:3643  next:[446,3642] quick_restart (fixed_bools=0/2272)\n#108     9.07s best:3642  next:[446,3641] quick_restart_no_lp (fixed_bools=0/8722)\n#109     9.16s best:3641  next:[447,3640] quick_restart_no_lp (fixed_bools=0/8739)\n#110     9.20s best:3640  next:[447,3639] quick_restart_no_lp (fixed_bools=0/8743)\n#111     9.46s best:3639  next:[448,3638] quick_restart (fixed_bools=0/2318)\n#112     9.54s best:3638  next:[450,3637] quick_restart_no_lp (fixed_bools=0/8884)\n#Bound   9.98s best:3638  next:[453,3637] bool_core (num_cores=10 [cover] a=155 d=6 fixed=447/8144 clauses=193\'913) [skipped_logs=6]\n#113    10.14s best:3573  next:[453,3572] graph_arc_lns (d=0.62 s=667 t=0.10 p=0.54 stall=7 h=auto_l0)\n#114    10.21s best:3572  next:[454,3571] quick_restart_no_lp (fixed_bools=0/9033)\n#115    10.29s best:3536  next:[454,3535] quick_restart_no_lp (fixed_bools=0/9075)\n#116    10.33s best:3535  next:[454,3534] quick_restart_no_lp (fixed_bools=0/9075)\n#117    10.34s best:3518  next:[454,3517] quick_restart_no_lp (fixed_bools=0/9116)\n#118    10.40s best:3517  next:[454,3516] quick_restart_no_lp (fixed_bools=0/9116)\n#119    10.47s best:3509  next:[455,3508] quick_restart_no_lp (fixed_bools=0/9162)\n#120    10.55s best:3505  next:[455,3504] quick_restart_no_lp (fixed_bools=0/9175)\n#121    10.55s best:3503  next:[455,3502] quick_restart_no_lp (fixed_bools=0/9182)\n#Bound  10.69s best:3503  next:[456,3502] bool_core (num_cores=10 [cover] a=155 d=6 fixed=450/8267 clauses=198\'799) [skipped_logs=2]\n#122    11.10s best:3411  next:[457,3410] quick_restart (fixed_bools=0/2432)\n#123    11.11s best:3269  next:[457,3268] quick_restart_no_lp (fixed_bools=0/9372)\n#124    11.16s best:3172  next:[457,3171] graph_var_lns (d=0.56 s=701 t=0.10 p=0.53 stall=5 h=auto_l0)\n#125    11.29s best:3171  next:[457,3170] quick_restart (fixed_bools=0/2438)\n#126    11.32s best:3170  next:[457,3169] quick_restart_no_lp (fixed_bools=0/9389)\n#127    11.53s best:3169  next:[458,3168] quick_restart_no_lp (fixed_bools=0/9426)\n#128    11.61s best:3168  next:[458,3167] quick_restart_no_lp (fixed_bools=0/9427)\n#129    11.68s best:3131  next:[458,3130] quick_restart_no_lp (fixed_bools=0/9454)\n#130    11.75s best:3122  next:[458,3121] quick_restart_no_lp (fixed_bools=0/9520)\n#131    11.79s best:3115  next:[458,3114] quick_restart_no_lp (fixed_bools=0/9586)\n#132    11.79s best:3088  next:[458,3087] quick_restart_no_lp (fixed_bools=0/9600)\n#133    11.91s best:3087  next:[458,3086] quick_restart (fixed_bools=0/2493)\n#134    11.97s best:3086  next:[458,3085] quick_restart_no_lp (fixed_bools=0/9606)\n#Bound  11.46s best:3170  next:[458,3169] bool_core (num_cores=12 [size:1 mw:1] a=155 d=6 fixed=452/8349 clauses=203\'240) [skipped_logs=1]\n#135    12.20s best:3045  next:[458,3044] quick_restart (fixed_bools=0/2534)\n#136    12.26s best:3043  next:[458,3042] quick_restart (fixed_bools=0/2552)\n#137    12.53s best:3042  next:[458,3041] quick_restart (fixed_bools=0/2602)\n#138    12.89s best:2768  next:[459,2767] rnd_cst_lns (d=0.88 s=775 t=0.10 p=0.54 stall=22 h=folio_rnd)\n#139    12.93s best:2475  next:[459,2474] rnd_var_lns (d=0.91 s=783 t=0.10 p=0.54 stall=12 h=folio_rnd)\n#Bound  12.72s best:3042  next:[459,3041] bool_core (num_cores=13 [size:1 mw:1] a=155 d=6 fixed=453/8390 clauses=197\'606) [skipped_logs=0]\n#140    13.39s best:2472  next:[460,2471] graph_var_lns (d=0.56 s=794 t=0.10 p=0.53 stall=11 h=auto_l0)\n#141    13.55s best:2469  next:[461,2468] quick_restart (fixed_bools=0/2729)\n#142    13.65s best:2468  next:[461,2467] quick_restart_no_lp (fixed_bools=0/9712)\n#Bound  13.50s best:2472  next:[461,2471] bool_core (num_cores=14 [cover] a=155 d=6 fixed=455/8431 clauses=197\'665) [skipped_logs=1]\n#Bound  14.97s best:2468  next:[527,2467] bool_core (num_cores=15 [cover] a=154 d=6 fixed=520/11310 clauses=308\'822) [skipped_logs=65]\n#Bound  15.88s best:2468  next:[536,2467] bool_core (num_cores=15 [cover] a=154 d=6 fixed=529/11697 clauses=332\'412) [skipped_logs=8]\n#143    16.16s best:2310  next:[537,2309] graph_arc_lns (d=0.75 s=885 t=0.10 p=0.55 stall=9 h=auto_l0)\n#144    16.35s best:1893  next:[538,1892] quick_restart (fixed_bools=0/2863)\n#Bound  16.82s best:1893  next:[541,1892] bool_core (num_cores=15 [cover] a=154 d=6 fixed=534/11912 clauses=347\'748) [skipped_logs=4]\n#145    17.16s best:1892  next:[542,1891] quick_restart_no_lp (fixed_bools=0/10594)\n#146    17.27s best:1891  next:[542,1890] quick_restart_no_lp (fixed_bools=0/10651)\n#147    17.28s best:1890  next:[542,1889] quick_restart_no_lp (fixed_bools=0/10660)\n#148    17.44s best:1889  next:[543,1888] quick_restart_no_lp (fixed_bools=0/10666)\n#149    17.59s best:1888  next:[543,1887] quick_restart_no_lp (fixed_bools=0/10673)\n#150    17.59s best:1887  next:[543,1886] quick_restart_no_lp (fixed_bools=0/10679)\n#Bound  17.35s best:1890  next:[543,1889] bool_core (num_cores=15 [cover] a=154 d=6 fixed=536/11998 clauses=354\'499) [skipped_logs=1]\n#151    18.15s best:1853  next:[543,1852] quick_restart (fixed_bools=0/2994)\n#152    18.16s best:1846  next:[543,1845] quick_restart_no_lp (fixed_bools=0/10722)\n#153    18.26s best:1845  next:[543,1844] quick_restart_no_lp (fixed_bools=0/10761)\n#154    18.31s best:1844  next:[543,1843] quick_restart_no_lp (fixed_bools=0/10769)\n#155    18.59s best:1843  next:[543,1842] quick_restart_no_lp (fixed_bools=0/10819)\n#156    18.67s best:1842  next:[543,1841] quick_restart_no_lp (fixed_bools=0/10825)\n#157    18.82s best:1813  next:[543,1812] quick_restart (fixed_bools=0/3070)\n#158    18.85s best:1812  next:[543,1811] quick_restart_no_lp (fixed_bools=0/10853)\n#Bound  18.99s best:1812  next:[554,1811] bool_core (num_cores=17 [size:1 mw:1] a=153 d=7 fixed=546/12491 clauses=376\'172) [skipped_logs=10]\n#159    19.05s best:1793  next:[554,1792] graph_var_lns (d=0.74 s=983 t=0.10 p=0.55 stall=7 h=auto_l0)\n#160    19.07s best:1733  next:[554,1732] quick_restart_no_lp (fixed_bools=0/10872)\n#161    19.07s best:1732  next:[554,1731] quick_restart_no_lp (fixed_bools=0/10872)\n#162    19.17s best:1731  next:[554,1730] quick_restart_no_lp (fixed_bools=0/10892)\n#163    19.29s best:1730  next:[569,1729] quick_restart_no_lp (fixed_bools=0/10932)\n#164    19.35s best:1729  next:[574,1728] quick_restart_no_lp (fixed_bools=0/10934)\n#165    19.38s best:1728  next:[575,1727] quick_restart_no_lp (fixed_bools=0/10935)\n#166    19.46s best:1727  next:[577,1726] quick_restart_no_lp (fixed_bools=0/10939)\n#167    19.55s best:1726  next:[579,1725] quick_restart_no_lp (fixed_bools=0/10946)\n#168    19.61s best:1704  next:[580,1703] graph_cst_lns (d=0.80 s=1003 t=0.10 p=0.53 stall=13 h=folio_rnd)\n#Bound  19.92s best:1704  next:[583,1703] bool_core (num_cores=18 [cover] a=133 d=7 fixed=574/13701 clauses=388\'714) [skipped_logs=28]\n#Bound  20.68s best:1704  next:[585,1703] bool_core (num_cores=20 [size:1 mw:1] a=133 d=7 fixed=576/13783 clauses=387\'845) [skipped_logs=1]\n#Bound  21.34s best:1704  next:[586,1703] bool_core (num_cores=21 [size:1 mw:1] a=133 d=7 fixed=577/13824 clauses=390\'389) [skipped_logs=0]\n#Bound  22.59s best:1704  next:[588,1703] bool_core (num_cores=23 [size:1 mw:1] a=133 d=7 fixed=579/13906 clauses=395\'626) [skipped_logs=1]\n#Bound  23.77s best:1704  next:[590,1703] bool_core (num_cores=25 [size:1 mw:1] a=133 d=7 fixed=581/13990 clauses=402\'784) [skipped_logs=1]\n#Bound  24.83s best:1704  next:[591,1703] bool_core (num_cores=26 [size:1 mw:1] a=133 d=7 fixed=582/14033 clauses=397\'256) [skipped_logs=0]\n#Bound  25.61s best:1704  next:[592,1703] bool_core (num_cores=27 [size:1 mw:1] a=133 d=7 fixed=583/14074 clauses=400\'325) [skipped_logs=0]\n#Bound  26.94s best:1704  next:[593,1703] bool_core (num_cores=28 [size:1 mw:1] a=133 d=7 fixed=584/14117 clauses=406\'952) [skipped_logs=0]\n#Bound  28.61s best:1704  next:[594,1703] bool_core (num_cores=29 [size:2 mw:1 d:6] a=132 d=7 fixed=585/14158 clauses=401\'758)\n#Bound  29.00s best:1704  next:[674,1703] bool_core (num_cores=29 [cover] a=132 d=7 fixed=664/17598 clauses=527\'398) [skipped_logs=79]\n#Bound  30.00s best:1704  next:[712,1703] bool_core (num_cores=31 [cover] a=111 d=7 fixed=700/19271 clauses=620\'986) [skipped_logs=37]\n#Bound  30.87s best:1704  next:[739,1703] bool_core (num_cores=31 [cover] a=111 d=7 fixed=727/20378 clauses=631\'448) [skipped_logs=26]\n#Bound  31.99s best:1704  next:[744,1703] bool_core (num_cores=32 [size:1 mw:1] a=111 d=7 fixed=732/20583 clauses=638\'475) [skipped_logs=4]\n#Bound  32.94s best:1704  next:[746,1703] bool_core (num_cores=34 [size:1 mw:1] a=111 d=7 fixed=734/20665 clauses=643\'173) [skipped_logs=1]\n#Bound  33.99s best:1704  next:[795,1703] bool_core (num_cores=35 [cover] a=110 d=7 fixed=782/22770 clauses=705\'286) [skipped_logs=48]\n#Bound  34.96s best:1704  next:[822,1703] bool_core (num_cores=35 [cover] a=110 d=7 fixed=809/23931 clauses=761\'798) [skipped_logs=26]\n#Bound  35.92s best:1704  next:[832,1703] bool_core (num_cores=35 [cover] a=110 d=7 fixed=819/24361 clauses=771\'936) [skipped_logs=9]\n#Bound  36.83s best:1704  next:[837,1703] bool_core (num_cores=35 [cover] a=110 d=7 fixed=824/24576 clauses=787\'313) [skipped_logs=4]\n#Bound  37.90s best:1704  next:[840,1703] bool_core (num_cores=36 [size:1 mw:1] a=110 d=7 fixed=827/24705 clauses=798\'172) [skipped_logs=2]\n#Bound  39.81s best:1704  next:[841,1703] bool_core (num_cores=37 [size:1 mw:1] a=110 d=7 fixed=828/24748 clauses=795\'990)\n#Bound  40.33s best:1704  next:[842,1703] bool_core (num_cores=38 [size:1 mw:1] a=110 d=7 fixed=829/24791 clauses=800\'089)\n#Bound  41.08s best:1704  next:[843,1703] bool_core (num_cores=39 [size:1 mw:1] a=110 d=7 fixed=830/24834 clauses=804\'626)\n#Bound  41.99s best:1704  next:[844,1703] bool_core (num_cores=40 [size:1 mw:1] a=110 d=7 fixed=831/24877 clauses=804\'172) [skipped_logs=0]\n#Bound  43.10s best:1704  next:[845,1703] bool_core (num_cores=41 [size:1 mw:1] a=110 d=7 fixed=832/24920 clauses=810\'402)\n#Bound  45.35s best:1704  next:[846,1703] bool_core (num_cores=42 [size:7 mw:1 d:7] a=104 d=7 fixed=833/24968 clauses=812\'332)\n#Bound  45.37s best:1704  next:[847,1703] bool_core (num_cores=42 [cover] a=104 d=7 fixed=833/25023 clauses=815\'158)\n#Bound  46.01s best:1704  next:[889,1703] bool_core (num_cores=42 [cover] a=104 d=7 fixed=875/27333 clauses=958\'381) [skipped_logs=41]\n#Bound  46.48s best:1704  next:[894,1703] bool_core (num_cores=42 [cover] a=104 d=7 fixed=880/27608 clauses=979\'554) [skipped_logs=4]\n#Bound  48.80s best:1704  next:[895,1703] bool_core (num_cores=43 [size:2 mw:1 d:8] a=103 d=8 fixed=881/27663 clauses=986\'669)\n#Bound  49.00s best:1704  next:[909,1703] bool_core (num_cores=43 [cover] a=103 d=8 fixed=894/28461 clauses=1\'047\'317) [skipped_logs=13]\n#Bound  50.00s best:1704  next:[944,1703] bool_core (num_cores=44 [cover] a=103 d=8 fixed=930/30456 clauses=1\'224\'018) [skipped_logs=34]\n#Bound  50.99s best:1704  next:[983,1703] bool_core (num_cores=44 [cover] a=103 d=8 fixed=969/32679 clauses=1\'460\'962) [skipped_logs=38]\n#Bound  51.31s best:1704  next:[988,1703] bool_core (num_cores=44 [cover] a=103 d=8 fixed=974/32964 clauses=1\'495\'209) [skipped_logs=4]\n#Bound  54.02s best:1704  next:[989,1703] bool_core (num_cores=45 [size:2 mw:1 d:9] a=102 d=9 fixed=975/33021 clauses=1\'495\'252)\n#Bound  54.08s best:1704  next:[990,1703] bool_core (num_cores=45 [cover] a=102 d=9 fixed=975/33080 clauses=1\'502\'078)\n#Bound  55.00s best:1704  next:[1007,1703] bool_core (num_cores=46 [cover] a=92 d=9 fixed=991/34140 clauses=1\'574\'388) [skipped_logs=16]\n#Bound  55.98s best:1704  next:[1040,1703] bool_core (num_cores=46 [cover] a=92 d=9 fixed=1024/36219 clauses=1\'701\'989) [skipped_logs=32]\n#Bound  57.00s best:1704  next:[1052,1703] bool_core (num_cores=46 [cover] a=92 d=9 fixed=1036/36975 clauses=1\'758\'389) [skipped_logs=11]\n#Bound  57.99s best:1704  next:[1058,1703] bool_core (num_cores=46 [cover] a=92 d=9 fixed=1042/37353 clauses=1\'789\'321) [skipped_logs=5]\n#Bound  59.03s best:1704  next:[1062,1703] bool_core (num_cores=46 [cover] a=92 d=9 fixed=1046/37605 clauses=1\'811\'634) [skipped_logs=3]\n#Bound  60.03s best:1704  next:[1065,1703] bool_core (num_cores=46 [cover] a=92 d=9 fixed=1049/37794 clauses=1\'817\'732) [skipped_logs=2]\n#Bound  60.78s best:1704  next:[1067,1703] bool_core (num_cores=46 [cover] a=92 d=9 fixed=1051/37920 clauses=1\'830\'009) [skipped_logs=1]\n#Bound  62.03s best:1704  next:[1069,1703] bool_core (num_cores=48 [size:1 mw:1] a=92 d=9 fixed=1053/38046 clauses=1\'842\'916) [skipped_logs=1]\n#Bound  62.65s best:1704  next:[1070,1703] bool_core (num_cores=49 [size:1 mw:1] a=92 d=9 fixed=1054/38109 clauses=1\'849\'439) [skipped_logs=0]\n#Bound  63.97s best:1704  next:[1072,1703] bool_core (num_cores=51 [size:1 mw:1] a=92 d=9 fixed=1056/38235 clauses=1\'862\'946) [skipped_logs=1]\n#Bound  64.71s best:1704  next:[1073,1703] bool_core (num_cores=52 [size:1 mw:1] a=92 d=9 fixed=1057/38298 clauses=1\'869\'984) [skipped_logs=0]\n#Bound  65.59s best:1704  next:[1074,1703] bool_core (num_cores=53 [size:1 mw:1] a=92 d=9 fixed=1058/38361 clauses=1\'864\'436) [skipped_logs=0]\n#Bound  68.56s best:1704  next:[1075,1703] bool_core (num_cores=54 [size:2 mw:1 d:8] a=91 d=9 fixed=1059/38424 clauses=1\'869\'917)\n#Bound  68.58s best:1704  next:[1076,1703] bool_core (num_cores=54 [cover] a=91 d=9 fixed=1059/38489 clauses=1\'875\'375)\n#Bound  69.00s best:1704  next:[1095,1703] bool_core (num_cores=54 [cover] a=91 d=9 fixed=1078/39724 clauses=1\'985\'157) [skipped_logs=18]\n#Bound  70.00s best:1704  next:[1136,1703] bool_core (num_cores=54 [cover] a=91 d=9 fixed=1119/42389 clauses=2\'261\'415) [skipped_logs=40]\n#Bound  71.00s best:1704  next:[1143,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1125/42973 clauses=2\'314\'249) [skipped_logs=6]\n#Bound  72.01s best:1704  next:[1173,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1155/45523 clauses=2\'563\'806) [skipped_logs=29]\n#Bound  72.93s best:1704  next:[1184,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1166/46458 clauses=2\'665\'430) [skipped_logs=10]\n#Bound  73.94s best:1704  next:[1193,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1175/47223 clauses=2\'752\'685) [skipped_logs=8]\n#Bound  74.97s best:1704  next:[1197,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1179/47563 clauses=2\'793\'091) [skipped_logs=3]\n#Bound  75.79s best:1704  next:[1200,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1182/47818 clauses=2\'824\'349) [skipped_logs=2]\n#Bound  76.82s best:1704  next:[1203,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1185/48073 clauses=2\'856\'055) [skipped_logs=2]\n#Bound  77.87s best:1704  next:[1206,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1188/48328 clauses=2\'888\'220) [skipped_logs=2]\n#Bound  78.71s best:1704  next:[1208,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1190/48498 clauses=2\'909\'984) [skipped_logs=1]\n#Bound  79.73s best:1704  next:[1210,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1192/48668 clauses=2\'932\'145) [skipped_logs=1]\n#Bound  80.84s best:1704  next:[1212,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1194/48838 clauses=2\'954\'883) [skipped_logs=1]\n#Bound  81.52s best:1704  next:[1213,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1195/48923 clauses=2\'950\'823) [skipped_logs=0]\n#Bound  82.13s best:1704  next:[1214,1703] bool_core (num_cores=55 [cover] a=81 d=9 fixed=1196/49008 clauses=2\'962\'441) [skipped_logs=0]\n#Bound  86.45s best:1704  next:[1215,1703] bool_core (num_cores=56 [size:1 mw:1] a=81 d=9 fixed=1197/49093 clauses=2\'970\'362)\n#169    86.80s best:1703  next:[1215,1702] quick_restart_no_lp (fixed_bools=0/16087)\n#170    87.09s best:1626  next:[1215,1625] rnd_var_lns (d=0.93 s=3078 t=0.10 p=0.51 stall=55 h=auto_l0)\n#171    87.24s best:1562  next:[1215,1561] rins_pump_lns (d=0.76 s=3085 t=0.10 p=0.45 stall=0 h=auto_l0)\n#Bound  87.36s best:1562  next:[1216,1561] bool_core (num_cores=57 [size:1 mw:1] a=81 d=9 fixed=1198/49178 clauses=2\'982\'261)\n#Bound  88.73s best:1562  next:[1217,1561] bool_core (num_cores=58 [size:1 mw:1] a=81 d=9 fixed=1199/49263 clauses=2\'994\'651)\n#Bound  90.33s best:1562  next:[1218,1561] bool_core (num_cores=59 [size:1 mw:1] a=81 d=9 fixed=1200/49348 clauses=3\'007\'087)\n#Bound  91.77s best:1562  next:[1219,1561] bool_core (num_cores=60 [size:1 mw:1] a=81 d=9 fixed=1201/49433 clauses=3\'019\'739)\n#Bound  93.45s best:1562  next:[1220,1561] bool_core (num_cores=61 [size:1 mw:1] a=81 d=9 fixed=1202/49518 clauses=3\'032\'531)\n#Bound  95.20s best:1562  next:[1221,1561] bool_core (num_cores=62 [size:1 mw:1] a=81 d=9 fixed=1203/49603 clauses=3\'035\'752)\n#Bound  96.85s best:1562  next:[1222,1561] bool_core (num_cores=63 [size:2 mw:1 d:10] a=80 d=10 fixed=1204/49688 clauses=3\'048\'732)\n#Bound  96.88s best:1562  next:[1223,1561] bool_core (num_cores=63 [cover] a=80 d=10 fixed=1204/49775 clauses=3\'059\'755)\n#Bound  96.91s best:1562  next:[1224,1561] bool_core (num_cores=63 [cover] a=80 d=10 fixed=1205/49862 clauses=3\'070\'821)\n#Bound  96.94s best:1562  next:[1225,1561] bool_core (num_cores=63 [cover] a=80 d=10 fixed=1206/49949 clauses=3\'081\'930)\n#Bound  96.97s best:1562  next:[1226,1561] bool_core (num_cores=63 [cover] a=80 d=10 fixed=1207/50036 clauses=3\'093\'082)\n#Bound  97.01s best:1562  next:[1227,1561] bool_core (num_cores=63 [cover] a=80 d=10 fixed=1208/50123 clauses=3\'104\'277)\n#Bound  97.06s best:1562  next:[1228,1561] bool_core (num_cores=63 [cover] a=80 d=10 fixed=1209/50210 clauses=3\'115\'515)\n#Bound  97.99s best:1562  next:[1254,1561] bool_core (num_cores=63 [cover] a=80 d=10 fixed=1235/52472 clauses=3\'422\'796) [skipped_logs=25]\n#Bound  98.90s best:1562  next:[1278,1561] bool_core (num_cores=63 [cover] a=80 d=10 fixed=1259/54560 clauses=3\'732\'240) [skipped_logs=23]\n#Bound 100.01s best:1562  next:[1283,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1263/54936 clauses=3\'773\'791) [skipped_logs=4]\n#Bound 100.99s best:1562  next:[1307,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1287/56640 clauses=3\'953\'924) [skipped_logs=23]\n#Bound 101.92s best:1562  next:[1325,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1305/57918 clauses=4\'102\'323) [skipped_logs=17]\n#Bound 102.93s best:1562  next:[1338,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1318/58841 clauses=4\'216\'847) [skipped_logs=12]\n#Bound 103.93s best:1562  next:[1348,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1328/59551 clauses=4\'309\'110) [skipped_logs=9]\n#Bound 104.95s best:1562  next:[1354,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1334/59977 clauses=4\'366\'438) [skipped_logs=5]\n#Bound 105.85s best:1562  next:[1359,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1339/60332 clauses=4\'415\'359) [skipped_logs=4]\n#Bound 106.86s best:1562  next:[1364,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1344/60687 clauses=4\'465\'204) [skipped_logs=4]\n#Bound 107.80s best:1562  next:[1368,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1348/60971 clauses=4\'505\'908) [skipped_logs=3]\n#Bound 108.91s best:1562  next:[1372,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1352/61255 clauses=4\'547\'304) [skipped_logs=3]\n#Bound 109.92s best:1562  next:[1375,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1355/61468 clauses=4\'578\'892) [skipped_logs=2]\n#Bound 111.04s best:1562  next:[1378,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1358/61681 clauses=4\'611\'010) [skipped_logs=2]\n#Bound 111.81s best:1562  next:[1381,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1361/61894 clauses=4\'643\'078) [skipped_logs=2]\n#Bound 113.00s best:1562  next:[1385,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1365/62178 clauses=4\'686\'428) [skipped_logs=3]\n#Bound 113.95s best:1562  next:[1388,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1368/62391 clauses=4\'719\'546) [skipped_logs=2]\n#Bound 114.94s best:1562  next:[1391,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1371/62604 clauses=4\'753\'067) [skipped_logs=2]\n#Bound 115.69s best:1562  next:[1393,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1373/62746 clauses=4\'775\'675) [skipped_logs=1]\n#Bound 116.59s best:1562  next:[1395,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1375/62888 clauses=4\'798\'727) [skipped_logs=1]\n#Bound 117.66s best:1562  next:[1397,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1377/63030 clauses=4\'822\'263) [skipped_logs=1]\n#Bound 118.85s best:1562  next:[1399,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1379/63172 clauses=4\'846\'173) [skipped_logs=1]\n#Bound 119.40s best:1562  next:[1400,1561] bool_core (num_cores=64 [cover] a=74 d=10 fixed=1380/63243 clauses=4\'858\'201) [skipped_logs=0]\n#Bound 126.61s best:1562  next:[1401,1561] bool_core (num_cores=65 [size:1 mw:1] a=74 d=10 fixed=1381/63314 clauses=4\'845\'299)\n#Bound 127.51s best:1562  next:[1402,1561] bool_core (num_cores=66 [size:1 mw:1] a=74 d=10 fixed=1382/63385 clauses=4\'857\'630)\n#Bound 128.40s best:1562  next:[1403,1561] bool_core (num_cores=67 [size:1 mw:1] a=74 d=10 fixed=1383/63456 clauses=4\'870\'118)\n#Bound 129.40s best:1562  next:[1404,1561] bool_core (num_cores=68 [size:1 mw:1] a=74 d=10 fixed=1384/63527 clauses=4\'882\'757)\n#Bound 130.31s best:1562  next:[1405,1561] bool_core (num_cores=69 [size:1 mw:1] a=74 d=10 fixed=1385/63598 clauses=4\'895\'520)\n#Bound 131.50s best:1562  next:[1406,1561] bool_core (num_cores=70 [size:1 mw:1] a=74 d=10 fixed=1386/63669 clauses=4\'908\'765)\n#Bound 132.86s best:1562  next:[1407,1561] bool_core (num_cores=71 [size:2 mw:1 d:11] a=73 d=11 fixed=1387/63740 clauses=4\'922\'200)\n#Bound 132.90s best:1562  next:[1408,1561] bool_core (num_cores=71 [cover] a=73 d=11 fixed=1387/63813 clauses=4\'933\'643)\n#Bound 132.95s best:1562  next:[1409,1561] bool_core (num_cores=71 [cover] a=73 d=11 fixed=1388/63886 clauses=4\'945\'122)\n#Bound 133.00s best:1562  next:[1410,1561] bool_core (num_cores=71 [cover] a=73 d=11 fixed=1389/63959 clauses=4\'956\'637)\n#Bound 133.05s best:1562  next:[1411,1561] bool_core (num_cores=71 [cover] a=73 d=11 fixed=1390/64032 clauses=4\'968\'188)\n#Bound 133.10s best:1562  next:[1412,1561] bool_core (num_cores=71 [cover] a=73 d=11 fixed=1391/64105 clauses=4\'979\'775)\n#Bound 133.14s best:1562  next:[1413,1561] bool_core (num_cores=71 [cover] a=73 d=11 fixed=1392/64178 clauses=4\'991\'398)\n#172   133.79s best:1420  next:[]         core (fixed_bools=1400/64762)\n#Done  133.79s core\n#Done  133.79s probing\n#Bound 133.50s best:1562  next:[1420,1561] bool_core (num_cores=71 [cover] a=73 d=11 fixed=1399/64689 clauses=5\'073\'767) [skipped_logs=6]\n\nTask timing                          n [     min,      max]      avg      dev     time         n [     min,      max]      avg      dev    dtime\n                     \'core\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [   2.98m,    2.98m]    2.98m   0.00ns    2.98m\n               \'default_lp\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  31.89s,   31.89s]   31.89s   0.00ns   31.89s\n         \'feasibility_pump\':       492 [478.40us,  56.89ms] 777.41us   2.63ms 382.49ms       491 [217.61us,  48.99ms] 371.18us   2.50ms 182.25ms\n          \'fj_long_default\':        64 [  6.27ms,   9.98ms]   7.14ms 892.87us 457.02ms        64 [  1.37ms,   2.23ms]   1.83ms 137.69us 117.19ms\n         \'fj_short_default\':        64 [  6.13ms,  10.11ms]   6.82ms 676.67us 436.59ms        64 [  1.40ms,   1.96ms]   1.77ms 103.09us 113.52ms\n                \'fs_random\':         1 [   1.77s,    1.77s]    1.77s   0.00ns    1.77s         1 [466.30ms, 466.30ms] 466.30ms   0.00ns 466.30ms\n  \'fs_random_quick_restart\':         1 [   1.77s,    1.77s]    1.77s   0.00ns    1.77s         1 [416.13ms, 416.13ms] 416.13ms   0.00ns 416.13ms\n            \'graph_arc_lns\':       492 [  3.72ms, 770.71ms] 174.21ms 154.18ms    1.43m       490 [ 10.00ns, 200.08ms]  54.32ms  47.89ms   26.62s\n            \'graph_cst_lns\':       492 [  6.96ms, 795.98ms] 219.32ms 177.93ms    1.80m       492 [  6.60us, 103.72ms]  56.43ms  46.29ms   27.76s\n            \'graph_dec_lns\':       492 [  5.37ms, 820.16ms] 201.59ms 170.73ms    1.65m       491 [  1.41us, 101.39ms]  54.69ms  46.60ms   26.85s\n            \'graph_var_lns\':       492 [  3.47ms, 799.87ms] 180.27ms 161.99ms    1.48m       492 [ 10.00ns, 101.65ms]  54.19ms  47.55ms   26.66s\n           \'lb_tree_search\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  32.04s,   32.04s]   32.04s   0.00ns   32.04s\n                   \'max_lp\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  35.34s,   35.34s]   35.34s   0.00ns   35.34s\n                    \'no_lp\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  34.29s,   34.29s]   34.29s   0.00ns   34.29s\n      \'objective_lb_search\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  29.11s,   29.11s]   29.11s   0.00ns   29.11s\n                  \'probing\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [   5.60s,    5.60s]    5.60s   0.00ns    5.60s\n             \'pseudo_costs\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  31.45s,   31.45s]   31.45s   0.00ns   31.45s\n            \'quick_restart\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  34.37s,   34.37s]   34.37s   0.00ns   34.37s\n      \'quick_restart_no_lp\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  57.66s,   57.66s]   57.66s   0.00ns   57.66s\n            \'reduced_costs\':         1 [   2.23m,    2.23m]    2.23m   0.00ns    2.23m         1 [  32.44s,   32.44s]   32.44s   0.00ns   32.44s\n                \'rins/rens\':       492 [652.20us, 553.25ms] 129.41ms 120.61ms    1.06m       348 [ 26.29us, 100.43ms]  72.39ms  42.52ms   25.19s\n              \'rnd_cst_lns\':       492 [  5.46ms,    1.02s] 244.88ms 223.18ms    2.01m       490 [740.00ns, 200.05ms]  54.21ms  48.16ms   26.56s\n              \'rnd_var_lns\':       492 [  6.70ms, 673.96ms] 190.22ms 158.56ms    1.56m       490 [250.00ns, 200.08ms]  55.05ms  47.58ms   26.97s\n             \'violation_ls\':       492 [756.30us,  61.38ms]   9.41ms   6.64ms    4.63s       492 [220.53us,  26.07ms]   3.19ms   2.83ms    1.57s\n\nSearch stats                   Bools  Conflicts   Branches  Restarts   BoolPropag  IntegerPropag\n                     \'core\':  64\'762    207\'863    732\'093    46\'162  426\'877\'066    158\'154\'456\n               \'default_lp\':   8\'002     53\'320    315\'808    24\'993   81\'323\'773    134\'413\'280\n                \'fs_random\':   1\'257        985     18\'136     2\'592      442\'323      1\'180\'266\n  \'fs_random_quick_restart\':     964        406     13\'018     1\'571      168\'508      1\'073\'505\n           \'lb_tree_search\':   2\'156      2\'374  1\'281\'608   105\'907   23\'108\'512     66\'293\'509\n                   \'max_lp\':   7\'560     37\'280    262\'586    38\'597   70\'223\'468    111\'299\'692\n                    \'no_lp\':   4\'542    115\'664    551\'760    56\'619  125\'470\'131    174\'524\'368\n      \'objective_lb_search\':   6\'729     42\'146    284\'393    32\'337   58\'528\'200    141\'173\'602\n                  \'probing\':   2\'859        343     19\'016     9\'460    5\'005\'689     11\'676\'744\n             \'pseudo_costs\':   6\'199     56\'627    260\'207    16\'107   40\'336\'876     98\'711\'971\n            \'quick_restart\':   5\'873     19\'162    335\'321    33\'159   44\'250\'533    140\'123\'472\n      \'quick_restart_no_lp\':  18\'595     84\'760  1\'376\'040    32\'030  237\'688\'576    261\'682\'099\n            \'reduced_costs\':   8\'193     43\'946    192\'916    14\'683   45\'053\'696     99\'073\'913\n\nSAT stats                     ClassicMinim  LitRemoved  LitLearned  LitForgotten  Subsumed  MClauses  MDecisions  MLitTrue  MSubsumed  MLitRemoved  MReused\n                     \'core\':       186\'452   1\'766\'843   2\'091\'894       699\'778       569    21\'514     118\'641         0        339        5\'676      833\n               \'default_lp\':        43\'218     303\'651     702\'641       433\'827        68    13\'404      85\'414         0      2\'246       10\'366    2\'419\n                \'fs_random\':           235         327       4\'301             0         0     1\'321       7\'387         0        119          525       75\n  \'fs_random_quick_restart\':            43          47       2\'287             0         4       737       4\'549         0         60          244      138\n           \'lb_tree_search\':           346         388      19\'053             0        81    36\'940     273\'377         0        427        1\'929    8\'783\n                   \'max_lp\':        30\'146     173\'882     512\'150       284\'000        77    20\'343     118\'589         0      2\'950       13\'339    2\'458\n                    \'no_lp\':       112\'700     414\'481   1\'940\'922     1\'714\'752        79    28\'481     163\'630         0      1\'236        5\'742    3\'078\n      \'objective_lb_search\':        30\'689     101\'682     420\'904        64\'537       503    16\'433     100\'780         0      1\'976        9\'183    2\'666\n                  \'probing\':           107         198       1\'683             0         0         0           0         0          0            0        0\n             \'pseudo_costs\':        38\'806     335\'522     429\'170       147\'050        26     8\'925      64\'063         0      1\'316        6\'863    2\'433\n            \'quick_restart\':        13\'647      85\'666     229\'585        65\'815       241    17\'214     119\'293         0      1\'956        8\'895    4\'613\n      \'quick_restart_no_lp\':        50\'425     172\'545   1\'250\'221       848\'867     2\'060    14\'560      96\'873         0      4\'333       20\'596    3\'076\n            \'reduced_costs\':        39\'839     288\'659     709\'962       553\'564        34     7\'016      52\'638         0        609        3\'188    2\'500\n\nLp stats                      Component  Iterations  AddedCuts  OPTIMAL  DUAL_F.  DUAL_U.\n               \'default_lp\':          1     119\'816          7  136\'113        0        0\n                \'fs_random\':          1       3\'781          4    4\'697        0        0\n  \'fs_random_quick_restart\':          1       5\'213          4    4\'118        1        0\n           \'lb_tree_search\':          1     320\'379      3\'148  226\'601    2\'864        0\n                   \'max_lp\':          1     279\'956      7\'633  111\'380    9\'583        2\n      \'objective_lb_search\':          1      92\'742        150  100\'376        0        2\n                  \'probing\':          1      92\'347        372   44\'703       85        0\n             \'pseudo_costs\':          1     139\'741      3\'984  148\'472    3\'739        0\n            \'quick_restart\':          1     395\'216        502  137\'205        0        0\n            \'reduced_costs\':          1     287\'735      5\'486  119\'286    9\'465        2\n\nLp dimension                                                                   Final dimension of first component\n               \'default_lp\':  758 rows, 1076 columns, 2020 entries with magnitude in [3.162278e-02, 1.000000e+00]\n                \'fs_random\':  762 rows, 1076 columns, 2008 entries with magnitude in [2.236627e-02, 1.000000e+00]\n  \'fs_random_quick_restart\':  771 rows, 1076 columns, 2027 entries with magnitude in [2.236627e-02, 1.000000e+00]\n           \'lb_tree_search\':  794 rows, 1076 columns, 2104 entries with magnitude in [3.162278e-02, 1.000000e+00]\n                   \'max_lp\':  853 rows, 1076 columns, 2222 entries with magnitude in [3.162278e-02, 1.000000e+00]\n      \'objective_lb_search\':  755 rows, 1076 columns, 2001 entries with magnitude in [3.162278e-02, 1.000000e+00]\n                  \'probing\':  839 rows, 1076 columns, 2194 entries with magnitude in [3.162278e-02, 1.000000e+00]\n             \'pseudo_costs\':  790 rows, 1076 columns, 2084 entries with magnitude in [3.162278e-02, 1.000000e+00]\n            \'quick_restart\':  862 rows, 1076 columns, 2241 entries with magnitude in [2.236627e-02, 1.000000e+00]\n            \'reduced_costs\':  824 rows, 1076 columns, 2155 entries with magnitude in [3.162278e-02, 1.000000e+00]\n\nLp debug                      CutPropag  CutEqPropag   Adjust  Overflow        Bad  BadScaling\n               \'default_lp\':          0            0    6\'086         0        862           0\n                \'fs_random\':          0            0      263         0          0           0\n  \'fs_random_quick_restart\':          0            0      840         0      2\'322           0\n           \'lb_tree_search\':          0            0  110\'219         0      1\'550           0\n                   \'max_lp\':          0            0   24\'154         0        771           0\n      \'objective_lb_search\':          0            0   15\'702         0      6\'736           0\n                  \'probing\':          0            0      166         0  5\'394\'870           0\n             \'pseudo_costs\':          0            0    6\'408         0          0           0\n            \'quick_restart\':          0            0   15\'058         0     37\'301           0\n            \'reduced_costs\':          0            0    5\'793         0          0           0\n\nLp pool                       Constraints  Updates  Simplif  Merged  Shortened  Split  Strenghtened         Cuts/Call\n               \'default_lp\':        1\'256        1        0       0          0      0             0          7/18\'035\n                \'fs_random\':        1\'253        0        0       0          0      0             0           4/4\'416\n  \'fs_random_quick_restart\':        1\'253        0        0       0          0      0             0           4/9\'568\n           \'lb_tree_search\':        4\'397        3        0       0          0      0             0  3\'148/76\'717\'696\n                   \'max_lp\':        8\'882        1        0       0          0      0             0  7\'633/32\'346\'096\n      \'objective_lb_search\':        1\'399        1        0       0          0      0             0        150/65\'658\n                  \'probing\':        1\'621        8        0       0          0      0             0    372/12\'242\'384\n             \'pseudo_costs\':        5\'233        2        0       0          0      0             0  3\'984/45\'726\'576\n            \'quick_restart\':        1\'751       45        0       0          0      0             0       502/208\'308\n            \'reduced_costs\':        6\'735        0        0       0          0      0             0  5\'486/31\'705\'408\n\nLp Cut          fs_ran  fs_ran  defaul  max_lp  quick_  reduce  pseudo  lb_tre  probin  object\n        CG_FF:       -       -       -       -      28       -       -       -      25       -\n         CG_K:       -       -       1       -     218       -       -       -     137      55\n         CG_R:       -       -       -       -     183       -       -       -     155      73\n      MIR_1_K:       -       -       1       -       5       -       -       -       5       1\n      MIR_1_R:       -       -       -       -       1       -       -       -      10      11\n      MIR_2_K:       -       -       -       -       4       -       -       -       7       1\n      MIR_2_R:       -       -       -       -       -       -       -       -       2       -\n     MIR_3_FF:       -       -       -       -      16       -       -       -       -       -\n      MIR_3_K:       -       -       -       -       1       -       -       -       1       1\n      MIR_3_R:       -       -       -       -       1       -       -       -       -       -\n     MIR_4_FF:       -       -       -       -      11       -       -       -       -       -\n      MIR_4_K:       -       -       -       -       2       -       -       -       1       -\n      MIR_4_R:       -       -       -       -       1       -       -       -       -       -\n     MIR_5_FF:       -       -       -       -       2       -       -       -       -       -\n      MIR_5_K:       -       -       -       -       2       -       -       -       1       1\n      MIR_5_R:       -       -       -       -       1       -       -       -       -       -\n      MIR_6_K:       -       -       -       -       1       -       -       -       -       -\n      MIR_6_R:       -       -       -       -       -       -       -       -       1       -\n  SquareLower:       4       4       5   7\'631      23   5\'486   3\'983   3\'146      25       5\n  SquareUpper:       -       -       -       2       2       -       1       2       2       2\n\nLNS stats           Improv/Calls  Closed  Difficulty  TimeLimit\n  \'graph_arc_lns\':        38/492     51%        0.68       0.10\n  \'graph_cst_lns\':        25/492     50%        0.81       0.10\n  \'graph_dec_lns\':        30/491     51%        0.93       0.10\n  \'graph_var_lns\':        40/492     51%        0.68       0.10\n      \'rins/rens\':       205/452     47%        0.83       0.10\n    \'rnd_cst_lns\':        31/492     50%        0.86       0.10\n    \'rnd_var_lns\':        28/492     51%        0.94       0.10\n\nLS stats               Batches  Restarts  LinMoves  GenMoves  CompoundMoves  WeightUpdates\n   \'fj_long_default\':       64         1    26\'946    52\'124              0            904\n  \'fj_short_default\':       64         1         0    70\'388         13\'397             48\n      \'violation_ls\':      492         0   279\'547   222\'044         11\'326        162\'946\n\nSolutions (172)           Num       Rank\n                 \'core\':    1  [172,172]\n        \'graph_arc_lns\':    8   [44,143]\n        \'graph_cst_lns\':    1  [168,168]\n        \'graph_dec_lns\':    3    [65,83]\n        \'graph_var_lns\':   10   [29,159]\n                \'no_lp\':   22     [3,24]\n        \'quick_restart\':   20   [32,157]\n  \'quick_restart_no_lp\':   93   [26,169]\n        \'reduced_costs\':    1      [1,1]\n        \'rins_pump_lns\':    1  [171,171]\n          \'rnd_cst_lns\':    6    [2,138]\n          \'rnd_var_lns\':    5   [36,170]\n         \'violation_ls\':    1    [90,90]\n\nObjective bounds            Num\n            \'bool_core\':  1\'286\n       \'initial_domain\':      1\n       \'lb_tree_search\':     19\n               \'max_lp\':      1\n  \'objective_lb_search\':      2\n\nSolution repositories    Added  Queried  Ignored  Synchro\n  \'feasible solutions\':    803    7\'574        0      790\n        \'lp solutions\':  2\'956      242       44    1\'761\n                \'pump\':    491      250\n\nImproving bounds shared    Num\n   \'quick_restart_no_lp\':    6\n\nCpSolverResponse summary:\nstatus: OPTIMAL\nobjective: 1420\nbest_bound: 1420\nintegers: 1251\nbooleans: 1257\nconflicts: 985\nbranches: 18136\npropagations: 442323\ninteger_propagations: 1180266\nrestarts: 2592\nlp_iterations: 3781\nwalltime: 134.079\nusertime: 134.079\ndeterministic_time: 692.507\ngap_integral: 2112.81\nsolution_fingerprint: 0xde7066818aeb84c9\n\n""
inner_objective_lower_bound: 1420
num_integers: 1251";87240;1215;1562;133790;1413;1562
2024-06-14_20-56;circles_20_100;2840;615590;2821;54121;1035;"log_search_progress: true
cp_model_presolve: true
linearization_level: 1
log_to_stdout: false
log_to_response: true
num_workers: 16
";"objective_value: 2840
best_objective_bound: 2840
num_booleans: 2821
num_conflicts: 1035
num_branches: 54121
num_binary_propagations: 1708578
num_integer_propagations: 10438605
wall_time: 615.590402
user_time: 615.5904023
deterministic_time: 1948.6717854403373
solution_info: ""core""
gap_integral: 6240.9960580824991
num_restarts: 5575
num_lp_iterations: 22057
solve_log: ""\nStarting CP-SAT solver v9.10.4067\nParameters: log_search_progress: true cp_model_presolve: true linearization_level: 1 log_to_stdout: false log_to_response: true num_workers: 16\n\nInitial optimization model \'\': (model_fingerprint: 0x1382000107bcb72e)\n#Variables: 5\'284 (#ints: 40 in objective)\n  - 2\'242 in [-2000,2000]\n  - 800 in [0,2000]\n  - 2\'242 in [0,4000000]\n#kIntProd: 2\'242\n#kLinear1: 2\n#kLinear2: 1\'881\n#kLinear3: 2\'242\n\nStarting presolve at 0.00s\n  1.22e-03s  0.00e+00d  [DetectDominanceRelations] \n  2.18e-02s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=2 #num_dual_strengthening=1 \n  5.62e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ExtractEncodingFromLinear] \n  9.90e-03s  5.68e-05d  [operations_research::sat::CpModelPresolver::Probe] \n  1.85e-05s  0.00e+00d  [MaxClique] \n  1.17e-03s  0.00e+00d  [DetectDominanceRelations] \n  1.16e-02s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  1.56e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessAtMostOneAndLinear] \n  5.90e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDuplicateConstraints] \n  1.68e-03s  3.69e-05d  [operations_research::sat::CpModelPresolver::DetectDominatedLinearConstraints] #relevant_constraints=4\'115 #num_inclusions=758 #num_redundant=758 \n  2.21e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDifferentVariables] \n  6.17e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessSetPPC] \n  4.17e-04s  4.29e-05d  [operations_research::sat::CpModelPresolver::FindAlmostIdenticalLinearConstraints] #num_tested_pairs=2\'858 \n  1.69e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigAtMostOneAndLinearOverlap] \n  6.11e-04s  1.90e-04d  [operations_research::sat::CpModelPresolver::FindBigVerticalLinearOverlap] \n  1.66e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigHorizontalLinearOverlap] \n  2.03e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::MergeClauses] \n  9.85e-04s  0.00e+00d  [DetectDominanceRelations] \n  1.33e-02s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=2 #num_dual_strengthening=1 \n  9.82e-04s  0.00e+00d  [DetectDominanceRelations] \n  1.06e-02s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  8.79e-03s  5.37e-05d  [operations_research::sat::CpModelPresolver::Probe] \n  1.35e-05s  0.00e+00d  [MaxClique] \n  1.11e-03s  0.00e+00d  [DetectDominanceRelations] \n  1.09e-02s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  1.34e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessAtMostOneAndLinear] \n  5.36e-03s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDuplicateConstraints] \n  6.20e-04s  2.69e-05d  [operations_research::sat::CpModelPresolver::DetectDominatedLinearConstraints] #relevant_constraints=3\'357 \n  2.17e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::DetectDifferentVariables] \n  6.16e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::ProcessSetPPC] \n  4.11e-04s  4.42e-05d  [operations_research::sat::CpModelPresolver::FindAlmostIdenticalLinearConstraints] #num_tested_pairs=2\'949 \n  1.67e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigAtMostOneAndLinearOverlap] \n  5.96e-04s  1.90e-04d  [operations_research::sat::CpModelPresolver::FindBigVerticalLinearOverlap] \n  1.60e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::FindBigHorizontalLinearOverlap] \n  1.69e-05s  0.00e+00d  [operations_research::sat::CpModelPresolver::MergeClauses] \n  9.86e-04s  0.00e+00d  [DetectDominanceRelations] \n  1.06e-02s  0.00e+00d  [operations_research::sat::CpModelPresolver::PresolveToFixPoint] #num_loops=1 #num_dual_strengthening=1 \n  9.60e-04s  0.00e+00d  [operations_research::sat::CpModelPresolver::ExpandObjective] #entries=10\'460 #tight_variables=5\'230 #tight_constraints=2\'236 #expands=758 \n\nPresolve summary:\n  - 6 affine relations were detected.\n  - rule \'TODO dual: only one blocking constraint?\' was applied 13\'452 times.\n  - rule \'affine: new relation\' was applied 6 times.\n  - rule \'linear inclusion: subset + singleton is equality\' was applied 758 times.\n  - rule \'linear: always true\' was applied 2 times.\n  - rule \'linear: empty\' was applied 2 times.\n  - rule \'linear: fixed or dup variables\' was applied 10 times.\n  - rule \'linear: reduced variable domains\' was applied 8 times.\n  - rule \'linear: reduced variable domains in derived constraint\' was applied 758 times.\n  - rule \'linear: remapped using affine relations\' was applied 12 times.\n  - rule \'linear: simplified rhs\' was applied 1\'879 times.\n  - rule \'objective: expanded via tight equality\' was applied 758 times.\n  - rule \'presolve: 2 unused variables removed.\' was applied 1 time.\n  - rule \'presolve: iteration\' was applied 2 times.\n\nPresolved optimization model \'\': (model_fingerprint: 0xb8db3726c962f7d4)\n#Variables: 5\'276 (#ints: 798 in objective)\n  - 1\'478 in [-2000,2000]\n  - 1\'556 in [0,2000]\n  - 2\'242 in [0,4000000]\n#kIntProd: 2\'242\n#kLinear2: 1\'121\n#kLinear3: 2\'236\n\nPreloading model.\n#Bound   0.14s best:inf   next:[0,80000]  initial_domain\n#Model   0.14s var:5276/5276 constraints:5599/5599\n\nStarting search at 0.14s with 16 workers.\n11 full problem subsolvers: [core, default_lp, lb_tree_search, max_lp, no_lp, objective_lb_search, probing, pseudo_costs, quick_restart, quick_restart_no_lp, reduced_costs]\n4 first solution subsolvers: [fj_long_default, fj_short_default, fs_random, fs_random_quick_restart]\n9 incomplete subsolvers: [feasibility_pump, graph_arc_lns, graph_cst_lns, graph_dec_lns, graph_var_lns, rins/rens, rnd_cst_lns, rnd_var_lns, violation_ls]\n3 helper subsolvers: [neighborhood_helper, synchronization_agent, update_gap_integral]\n#Bound   0.21s best:inf   next:[1,80000]  quick_restart_no_lp\n#Bound   0.21s best:inf   next:[2,80000]  bool_core (num_cores=1 [cover] a=797 d=1 fixed=0/801 clauses=1)\n#Bound   0.21s best:inf   next:[3,80000]  bool_core (num_cores=1 [cover] a=797 d=1 fixed=1/804 clauses=3)\n#Bound   0.21s best:inf   next:[4,80000]  bool_core (num_cores=1 [cover] a=797 d=1 fixed=2/807 clauses=6)\n#Bound   0.21s best:inf   next:[5,80000]  bool_core (num_cores=1 [cover] a=797 d=1 fixed=3/810 clauses=10)\n#Bound   0.21s best:inf   next:[6,80000]  bool_core (num_cores=1 [cover] a=797 d=1 fixed=4/813 clauses=15)\n#Bound   0.21s best:inf   next:[7,80000]  bool_core (num_cores=1 [cover] a=797 d=1 fixed=5/816 clauses=21)\n#Bound   0.21s best:inf   next:[8,80000]  bool_core (num_cores=1 [cover] a=797 d=1 fixed=6/819 clauses=28)\n#Bound   0.21s best:inf   next:[9,80000]  bool_core (num_cores=1 [cover] a=797 d=1 fixed=7/822 clauses=36)\n#Bound   0.21s best:inf   next:[10,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=8/825 clauses=45)\n#Bound   0.21s best:inf   next:[11,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=9/828 clauses=55)\n#Bound   0.21s best:inf   next:[12,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=10/831 clauses=66)\n#Bound   0.21s best:inf   next:[13,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=11/834 clauses=78)\n#Bound   0.21s best:inf   next:[14,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=12/837 clauses=91)\n#Bound   0.21s best:inf   next:[15,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=13/840 clauses=105)\n#Bound   0.21s best:inf   next:[16,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=14/843 clauses=120)\n#Bound   0.21s best:inf   next:[17,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=15/846 clauses=136)\n#Bound   0.21s best:inf   next:[18,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=16/849 clauses=153)\n#Bound   0.21s best:inf   next:[19,80000] bool_core (num_cores=1 [cover] a=797 d=1 fixed=17/852 clauses=171)\n#Bound   0.21s best:inf   next:[20,80000] lb_tree_search\n#Bound   0.88s best:inf   next:[297,80000] bool_core (num_cores=3 [cover] a=756 d=6 fixed=293/2661 clauses=13\'711) [skipped_logs=272]\n#Bound   1.67s best:inf   next:[300,80000] bool_core (num_cores=3 [cover] a=756 d=6 fixed=296/2904 clauses=16\'077) [skipped_logs=2]\n#Bound   2.30s best:inf   next:[301,80000] bool_core (num_cores=3 [cover] a=756 d=6 fixed=297/2985 clauses=17\'423) [skipped_logs=0]\n#Bound   3.96s best:inf   next:[303,80000] lb_tree_search (nodes=437/440 rc=13 decisions=69908 @root=24 restarts=10)  [skipped_logs=1]\n#Bound   4.53s best:inf   next:[304,80000] lb_tree_search (nodes=500/505 rc=20 decisions=71830 @root=25 restarts=10)  [skipped_logs=0]\n#Bound   5.70s best:inf   next:[306,80000] lb_tree_search (nodes=620/630 rc=33 decisions=75631 @root=27 restarts=10)  [skipped_logs=1]\n#Bound   6.46s best:inf   next:[307,80000] lb_tree_search (nodes=696/710 rc=42 decisions=77637 @root=28 restarts=10)  [skipped_logs=0]\n#Bound   7.94s best:inf   next:[309,80000] lb_tree_search (nodes=824/845 rc=53 decisions=81650 @root=30 restarts=10)  [skipped_logs=1]\n#Bound   8.73s best:inf   next:[310,80000] lb_tree_search (nodes=920/943 rc=65 decisions=83782 @root=31 restarts=10)  [skipped_logs=0]\n#Bound   9.48s best:inf   next:[311,80000] lb_tree_search (nodes=987/1012 rc=72 decisions=85813 @root=32 restarts=10)  [skipped_logs=0]\n#Bound  11.03s best:inf   next:[339,80000] bool_core (num_cores=7 [cover] a=755 d=7 fixed=334/6129 clauses=67\'716) [skipped_logs=27]\n#Bound  11.95s best:inf   next:[348,80000] bool_core (num_cores=7 [cover] a=755 d=7 fixed=343/6876 clauses=90\'829) [skipped_logs=8]\n#Bound  12.82s best:inf   next:[352,80000] bool_core (num_cores=7 [cover] a=755 d=7 fixed=347/7208 clauses=94\'521) [skipped_logs=3]\n#Bound  13.75s best:inf   next:[355,80000] bool_core (num_cores=7 [cover] a=755 d=7 fixed=350/7457 clauses=104\'547) [skipped_logs=2]\n#Bound  14.53s best:inf   next:[357,80000] bool_core (num_cores=7 [cover] a=755 d=7 fixed=352/7623 clauses=111\'703) [skipped_logs=1]\n#Bound  15.63s best:inf   next:[359,80000] bool_core (num_cores=7 [cover] a=755 d=7 fixed=354/7789 clauses=119\'418) [skipped_logs=1]\n#Bound  16.18s best:inf   next:[360,80000] bool_core (num_cores=7 [cover] a=755 d=7 fixed=355/7872 clauses=123\'444) [skipped_logs=0]\n#Bound  18.69s best:inf   next:[361,80000] bool_core (num_cores=8 [size:1 mw:1] a=755 d=7 fixed=356/7955 clauses=122\'541)\n#Bound  19.43s best:inf   next:[362,80000] bool_core (num_cores=9 [size:1 mw:1] a=755 d=7 fixed=357/8038 clauses=126\'919)\n#Bound  20.44s best:inf   next:[363,80000] bool_core (num_cores=10 [size:1 mw:1] a=755 d=7 fixed=358/8121 clauses=131\'665)\n#Bound  22.89s best:inf   next:[364,80000] bool_core (num_cores=11 [size:1 mw:1] a=755 d=7 fixed=359/8204 clauses=133\'797)\n#1      23.52s best:19757 next:[364,19756] no_lp (fixed_bools=0/7156)\n#2      23.83s best:19749 next:[364,19748] quick_restart_no_lp (fixed_bools=0/12875)\n#3      23.92s best:19748 next:[364,19747] quick_restart_no_lp (fixed_bools=0/12903)\n#4      23.93s best:19741 next:[364,19740] quick_restart_no_lp (fixed_bools=0/12937)\n#Bound  24.05s best:19741 next:[365,19740] bool_core (num_cores=12 [size:1 mw:1] a=755 d=7 fixed=360/8287 clauses=135\'875)\n#5      24.06s best:19734 next:[365,19733] quick_restart_no_lp (fixed_bools=0/13062)\n#6      24.24s best:19592 next:[365,19591] quick_restart_no_lp (fixed_bools=0/13223)\n#7      24.30s best:19205 next:[365,19204] quick_restart_no_lp (fixed_bools=0/13252)\n#8      24.41s best:19204 next:[365,19203] quick_restart_no_lp (fixed_bools=0/13321)\n#9      24.45s best:19203 next:[365,19202] quick_restart_no_lp (fixed_bools=0/13404)\n#10     24.77s best:18918 next:[365,18917] quick_restart_no_lp (fixed_bools=0/13559)\n#11     24.87s best:18907 next:[365,18906] rnd_cst_lns (d=0.79 s=1711 t=0.10 p=0.67 stall=2 h=auto_l0)\n#Bound  25.30s best:18907 next:[366,18906] bool_core (num_cores=13 [size:1 mw:1] a=755 d=7 fixed=361/8370 clauses=141\'127)\n#12     25.48s best:18773 next:[366,18772] quick_restart_no_lp (fixed_bools=0/13647)\n#13     25.70s best:17814 next:[366,17813] graph_var_lns (d=0.39 s=1726 t=0.10 p=0.50 stall=8 h=auto_l0)\n#14     25.90s best:17285 next:[366,17284] quick_restart_no_lp (fixed_bools=0/13827)\n#15     26.06s best:17143 next:[366,17142] quick_restart_no_lp (fixed_bools=0/13919)\n#16     26.17s best:17017 next:[366,17016] rnd_var_lns (d=0.86 s=1752 t=0.10 p=0.64 stall=11 h=auto_l0)\n#Bound  26.67s best:17017 next:[367,17016] bool_core (num_cores=14 [size:1 mw:1] a=755 d=7 fixed=362/8453 clauses=146\'584)\n#17     26.79s best:17009 next:[367,17008] graph_cst_lns (d=0.16 s=1784 t=0.10 p=0.38 stall=10 h=auto_l0)\n#18     27.23s best:16998 next:[367,16997] graph_var_lns (d=0.17 s=1796 t=0.10 p=0.41 stall=7 h=auto_l0)\n#19     27.45s best:16856 next:[367,16855] rnd_var_lns (d=0.82 s=1808 t=0.10 p=0.55 stall=7 h=auto_l0)\n#Bound  28.21s best:16856 next:[368,16855] bool_core (num_cores=15 [size:1 mw:1] a=755 d=7 fixed=363/8536 clauses=152\'289)\n#20     29.25s best:16561 next:[368,16560] graph_var_lns (d=0.11 s=1873 t=0.10 p=0.41 stall=9 h=auto_l0)\n#21     29.37s best:16557 next:[368,16556] quick_restart_no_lp (fixed_bools=0/14465)\n#22     29.73s best:16550 next:[368,16549] graph_cst_lns (d=0.37 s=1889 t=0.10 p=0.50 stall=0 h=auto_l0)\n#23     29.80s best:16408 next:[368,16407] rnd_var_lns (d=0.79 s=1899 t=0.10 p=0.52 stall=12 h=folio_rnd)\n#Bound  30.08s best:16408 next:[369,16407] bool_core (num_cores=16 [size:1 mw:1] a=755 d=7 fixed=364/8619 clauses=158\'665)\n#24     30.11s best:16266 next:[369,16265] rnd_var_lns (d=0.82 s=1913 t=0.10 p=0.53 stall=0 h=auto_l0)\n#25     31.02s best:16265 next:[369,16264] quick_restart_no_lp (fixed_bools=0/14757)\n#26     31.10s best:16264 next:[369,16263] graph_arc_lns (d=0.09 s=1937 t=0.10 p=0.42 stall=11 h=folio_rnd)\n#27     31.20s best:16122 next:[369,16121] graph_dec_lns (d=0.85 s=1953 t=0.10 p=0.54 stall=23 h=folio_rnd)\n#28     31.72s best:15975 next:[369,15974] graph_cst_lns (d=0.27 s=1966 t=0.10 p=0.48 stall=10 h=auto_l0)\n#Bound  32.38s best:15975 next:[370,15974] bool_core (num_cores=17 [size:2 mw:1 d:8] a=754 d=8 fixed=365/8702 clauses=153\'753)\n#Bound  32.38s best:15975 next:[371,15974] bool_core (num_cores=17 [cover] a=754 d=8 fixed=365/8787 clauses=157\'259)\n#Bound  32.38s best:15975 next:[372,15974] bool_core (num_cores=17 [cover] a=754 d=8 fixed=366/8872 clauses=160\'807)\n#Bound  32.39s best:15975 next:[373,15974] bool_core (num_cores=17 [cover] a=754 d=8 fixed=367/8957 clauses=164\'397)\n#Bound  32.39s best:15975 next:[374,15974] bool_core (num_cores=17 [cover] a=754 d=8 fixed=368/9042 clauses=168\'029)\n#Bound  32.39s best:15975 next:[375,15974] bool_core (num_cores=17 [cover] a=754 d=8 fixed=369/9127 clauses=171\'703)\n#29     32.69s best:15265 next:[426,15264] graph_var_lns (d=0.11 s=2027 t=0.10 p=0.45 stall=17 h=folio_rnd)\n#Bound  32.67s best:15975 next:[426,15974] bool_core (num_cores=17 [cover] a=754 d=8 fixed=420/13462 clauses=414\'769) [skipped_logs=50]\n#Bound  33.95s best:15265 next:[440,15264] bool_core (num_cores=18 [cover] a=714 d=8 fixed=433/14639 clauses=424\'828) [skipped_logs=13]\n#30     34.15s best:14981 next:[440,14980] graph_cst_lns (d=0.57 s=2078 t=0.10 p=0.53 stall=15 h=auto_l0)\n#31     34.45s best:14961 next:[441,14960] rnd_cst_lns (d=0.79 s=2103 t=0.10 p=0.52 stall=29 h=folio_rnd)\n#32     34.52s best:14953 next:[441,14952] quick_restart_no_lp (fixed_bools=0/14972)\n#Bound  34.34s best:14981 next:[441,14980] bool_core (num_cores=18 [cover] a=714 d=8 fixed=434/14720 clauses=425\'787) [skipped_logs=0]\n#33     35.30s best:14810 next:[442,14809] graph_arc_lns (d=0.19 s=2119 t=0.10 p=0.50 stall=24 h=folio_rnd)\n#Bound  35.06s best:14953 next:[442,14952] bool_core (num_cores=18 [cover] a=714 d=8 fixed=435/14801 clauses=427\'238) [skipped_logs=0]\n#34     36.42s best:14742 next:[442,14741] quick_restart_no_lp (fixed_bools=0/15344)\n#Bound  37.00s best:14742 next:[448,14741] bool_core (num_cores=19 [cover] a=713 d=8 fixed=440/15297 clauses=433\'719) [skipped_logs=5]\n#35     37.11s best:14458 next:[451,14457] graph_arc_lns (d=0.27 s=2196 t=0.10 p=0.52 stall=9 h=auto_l0)\n#36     37.17s best:14457 next:[452,14456] quick_restart_no_lp (fixed_bools=0/15438)\n#Bound  37.92s best:14457 next:[463,14456] bool_core (num_cores=19 [cover] a=713 d=8 fixed=455/16542 clauses=452\'628) [skipped_logs=14]\n#Bound  38.83s best:14457 next:[469,14456] bool_core (num_cores=19 [cover] a=713 d=8 fixed=461/17040 clauses=463\'522) [skipped_logs=5]\n#37     39.15s best:14173 next:[470,14172] graph_cst_lns (d=0.45 s=2267 t=0.10 p=0.51 stall=10 h=folio_rnd)\n#38     39.36s best:14134 next:[471,14133] graph_var_lns (d=0.09 s=2279 t=0.10 p=0.46 stall=15 h=folio_rnd)\n#Bound  39.29s best:14173 next:[471,14172] bool_core (num_cores=19 [cover] a=713 d=8 fixed=463/17206 clauses=467\'738) [skipped_logs=1]\n#Bound  40.72s best:14134 next:[473,14133] bool_core (num_cores=20 [cover] a=713 d=8 fixed=465/17372 clauses=473\'501) [skipped_logs=1]\n#39     41.43s best:14133 next:[475,14132] quick_restart_no_lp (fixed_bools=0/15885)\n#40     41.73s best:14114 next:[475,14113] quick_restart_no_lp (fixed_bools=0/16002)\n#Bound  42.11s best:14114 next:[477,14113] bool_core (num_cores=20 [cover] a=713 d=8 fixed=469/17704 clauses=483\'479) [skipped_logs=3]\n#41     42.81s best:12398 next:[478,12397] quick_restart_no_lp (fixed_bools=0/16142)\n#Bound  42.57s best:14114 next:[478,14113] bool_core (num_cores=20 [cover] a=713 d=8 fixed=470/17787 clauses=486\'248) [skipped_logs=0]\n#42     43.51s best:12351 next:[479,12350] quick_restart_no_lp (fixed_bools=0/16286)\n#Bound  43.74s best:12351 next:[480,12350] bool_core (num_cores=20 [cover] a=713 d=8 fixed=472/17953 clauses=479\'871) [skipped_logs=1]\n#43     44.34s best:12305 next:[480,12304] graph_arc_lns (d=0.22 s=2427 t=0.10 p=0.50 stall=14 h=folio_rnd)\n#44     45.10s best:12163 next:[480,12162] graph_arc_lns (d=0.14 s=2469 t=0.10 p=0.48 stall=3 h=auto_l0)\n#Bound  46.23s best:12163 next:[481,12162] bool_core (num_cores=21 [size:1 mw:1] a=713 d=8 fixed=473/18036 clauses=479\'918)\n#Bound  47.16s best:12163 next:[482,12162] bool_core (num_cores=22 [size:1 mw:1] a=713 d=8 fixed=474/18119 clauses=483\'539)\n#45     47.39s best:12021 next:[482,12020] quick_restart (fixed_bools=0/4041)\n#46     47.91s best:11890 next:[482,11889] quick_restart_no_lp (fixed_bools=0/16492)\n#47     49.31s best:10473 next:[482,10472] quick_restart_no_lp (fixed_bools=0/16684)\n#Bound  49.46s best:10473 next:[483,10472] bool_core (num_cores=23 [size:41 mw:1 d:6] a=673 d=8 fixed=475/18241 clauses=487\'012)\n#Bound  49.47s best:10473 next:[484,10472] bool_core (num_cores=23 [cover] a=673 d=8 fixed=475/18322 clauses=487\'052)\n#Bound  49.47s best:10473 next:[485,10472] bool_core (num_cores=23 [cover] a=673 d=8 fixed=476/18403 clauses=487\'132)\n#Bound  49.86s best:10473 next:[498,10472] bool_core (num_cores=23 [cover] a=673 d=8 fixed=489/19456 clauses=492\'118) [skipped_logs=12]\n#Bound  50.55s best:10473 next:[500,10472] bool_core (num_cores=23 [cover] a=673 d=8 fixed=491/19618 clauses=494\'295) [skipped_logs=1]\n#Bound  51.20s best:10473 next:[501,10472] bool_core (num_cores=23 [cover] a=673 d=8 fixed=492/19699 clauses=495\'851) [skipped_logs=0]\n#48     52.73s best:10457 next:[502,10456] graph_arc_lns (d=0.27 s=2714 t=0.10 p=0.51 stall=33 h=auto_l0)\n#Bound  52.22s best:10473 next:[502,10472] bool_core (num_cores=24 [size:1 mw:1] a=673 d=8 fixed=493/19780 clauses=497\'855) [skipped_logs=0]\n#49     53.53s best:10456 next:[503,10455] quick_restart_no_lp (fixed_bools=0/17113)\n#Bound  53.27s best:10457 next:[503,10456] bool_core (num_cores=25 [size:1 mw:1] a=673 d=8 fixed=494/19861 clauses=499\'997) [skipped_logs=0]\n#Bound  55.00s best:10456 next:[505,10455] bool_core (num_cores=26 [cover] a=672 d=8 fixed=495/20025 clauses=495\'020) [skipped_logs=1]\n#50     55.91s best:10455 next:[534,10454] quick_restart (fixed_bools=0/4224)\n#Bound  55.98s best:10455 next:[535,10454] bool_core (num_cores=26 [cover] a=672 d=8 fixed=525/22515 clauses=541\'638) [skipped_logs=29]\n#51     56.76s best:10029 next:[540,10028] quick_restart (fixed_bools=0/4254)\n#Bound  56.93s best:10029 next:[541,10028] bool_core (num_cores=26 [cover] a=672 d=8 fixed=531/23013 clauses=556\'575) [skipped_logs=5]\n#Bound  57.96s best:10029 next:[545,10028] bool_core (num_cores=26 [cover] a=672 d=8 fixed=535/23345 clauses=567\'953) [skipped_logs=3]\n#Bound  58.67s best:10029 next:[547,10028] bool_core (num_cores=26 [cover] a=672 d=8 fixed=537/23511 clauses=574\'212) [skipped_logs=1]\n#Bound  59.60s best:10029 next:[549,10028] bool_core (num_cores=26 [cover] a=672 d=8 fixed=539/23677 clauses=580\'980) [skipped_logs=1]\n#Bound  60.72s best:10029 next:[551,10028] bool_core (num_cores=26 [cover] a=672 d=8 fixed=541/23843 clauses=588\'181) [skipped_logs=1]\n#52     62.55s best:10018 next:[551,10017] quick_restart (fixed_bools=0/4329)\n#53     63.29s best:9881  next:[551,9880] quick_restart_no_lp (fixed_bools=0/17827)\n#54     63.68s best:9863  next:[551,9862] graph_cst_lns (d=0.61 s=3051 t=0.10 p=0.52 stall=24 h=folio_rnd)\n#Bound  63.82s best:9863  next:[552,9862] bool_core (num_cores=27 [size:1 mw:1] a=672 d=8 fixed=542/23926 clauses=583\'654)\n#Bound  65.02s best:9863  next:[553,9862] bool_core (num_cores=28 [size:1 mw:1] a=672 d=8 fixed=543/24009 clauses=588\'234)\n#Bound  65.04s best:9863  next:[554,9862] bool_core (num_cores=28 [cover] a=672 d=8 fixed=544/24009 clauses=588\'244)\n#55     65.79s best:9862  next:[554,9861] quick_restart_no_lp (fixed_bools=0/18187)\n#56     65.91s best:9856  next:[554,9855] graph_var_lns (d=0.27 s=3098 t=0.10 p=0.51 stall=10 h=auto_l0)\n#57     66.52s best:9854  next:[554,9853] graph_arc_lns (d=0.26 s=3113 t=0.10 p=0.51 stall=11 h=folio_rnd)\n#58     67.17s best:9853  next:[554,9852] quick_restart_no_lp (fixed_bools=0/18287)\n#Bound  67.62s best:9853  next:[555,9852] bool_core (num_cores=29 [size:2 mw:1 d:8] a=671 d=8 fixed=545/24175 clauses=592\'053)\n#Bound  67.63s best:9853  next:[556,9852] bool_core (num_cores=29 [cover] a=671 d=8 fixed=545/24260 clauses=594\'416)\n#Bound  67.64s best:9853  next:[557,9852] bool_core (num_cores=29 [cover] a=671 d=8 fixed=546/24345 clauses=596\'821)\n#59     67.86s best:9852  next:[577,9851] quick_restart_no_lp (fixed_bools=0/18313)\n#60     67.89s best:9851  next:[579,9850] quick_restart_no_lp (fixed_bools=0/18318)\n#Bound  68.00s best:9851  next:[588,9850] bool_core (num_cores=29 [cover] a=671 d=8 fixed=577/26980 clauses=692\'232) [skipped_logs=30]\n#61     68.68s best:9850  next:[619,9849] quick_restart_no_lp (fixed_bools=0/18347)\n#Bound  68.98s best:9850  next:[626,9849] bool_core (num_cores=29 [cover] a=671 d=8 fixed=615/30210 clauses=864\'694) [skipped_logs=37]\n#62     69.59s best:9849  next:[632,9848] quick_restart_no_lp (fixed_bools=0/18485)\n#Bound  69.97s best:9849  next:[634,9848] bool_core (num_cores=29 [cover] a=671 d=8 fixed=623/30890 clauses=909\'654) [skipped_logs=7]\n#63     70.17s best:9848  next:[635,9847] quick_restart_no_lp (fixed_bools=0/18561)\n#Bound  70.96s best:9848  next:[638,9847] bool_core (num_cores=29 [cover] a=671 d=8 fixed=627/31230 clauses=934\'028) [skipped_logs=3]\n#64     71.94s best:9847  next:[639,9846] quick_restart_no_lp (fixed_bools=0/18788)\n#Bound  71.60s best:9848  next:[639,9847] bool_core (num_cores=29 [cover] a=671 d=8 fixed=628/31315 clauses=940\'819) [skipped_logs=0]\n#65     72.60s best:9846  next:[640,9845] quick_restart_no_lp (fixed_bools=0/18950)\n#Bound  72.38s best:9847  next:[640,9846] bool_core (num_cores=30 [size:1 mw:1] a=671 d=8 fixed=629/31400 clauses=947\'056) [skipped_logs=0]\n#66     73.18s best:9711  next:[640,9710] graph_arc_lns (d=0.24 s=3323 t=0.10 p=0.51 stall=28 h=folio_rnd)\n#Bound  73.60s best:9711  next:[641,9710] bool_core (num_cores=31 [size:1 mw:1] a=671 d=8 fixed=630/31483 clauses=951\'444) [skipped_logs=0]\n#67     74.44s best:9706  next:[641,9705] quick_restart (fixed_bools=0/4465)\n#Bound  75.18s best:9706  next:[642,9705] bool_core (num_cores=32 [size:1 mw:1] a=671 d=8 fixed=631/31566 clauses=956\'242)\n#68     76.80s best:9694  next:[642,9693] quick_restart (fixed_bools=0/4554)\n#69     77.44s best:9412  next:[642,9411] quick_restart (fixed_bools=0/4577)\n#Bound  77.72s best:9412  next:[643,9411] bool_core (num_cores=33 [size:1 mw:1] a=671 d=8 fixed=632/31649 clauses=962\'098)\n#70     77.98s best:8727  next:[643,8726] quick_restart (fixed_bools=0/4591)\n#71     78.07s best:8726  next:[643,8725] quick_restart_no_lp (fixed_bools=0/19693)\n#Bound  79.56s best:8726  next:[644,8725] bool_core (num_cores=34 [size:1 mw:1] a=671 d=8 fixed=633/31732 clauses=953\'657)\n#72     79.64s best:8369  next:[644,8368] graph_var_lns (d=0.24 s=3518 t=0.10 p=0.51 stall=3 h=auto_l0)\n#73     80.20s best:8318  next:[644,8317] quick_restart_no_lp (fixed_bools=0/20043)\n#74     80.37s best:8296  next:[644,8295] graph_var_lns (d=0.21 s=3553 t=0.10 p=0.50 stall=1 h=auto_l0)\n#75     80.72s best:8256  next:[644,8255] rnd_cst_lns (d=0.83 s=3566 t=0.10 p=0.51 stall=30 h=auto_l0)\n#76     80.88s best:8255  next:[644,8254] quick_restart_no_lp (fixed_bools=0/20199)\n#77     80.97s best:8254  next:[644,8253] quick_restart_no_lp (fixed_bools=0/20200)\n#78     81.13s best:8235  next:[644,8234] rnd_var_lns (d=0.84 s=3579 t=0.11 p=0.51 stall=0 h=auto_l0)\n#79     81.19s best:8234  next:[644,8233] quick_restart_no_lp (fixed_bools=0/20233)\n#80     81.81s best:8200  next:[644,8199] graph_var_lns (d=0.26 s=3602 t=0.10 p=0.51 stall=6 h=auto_l0)\n#Bound  82.89s best:8200  next:[645,8199] bool_core (num_cores=35 [size:2 mw:1 d:8] a=670 d=8 fixed=634/31815 clauses=956\'334)\n#Bound  82.90s best:8200  next:[646,8199] bool_core (num_cores=35 [cover] a=670 d=8 fixed=634/31900 clauses=959\'471)\n#Bound  82.92s best:8200  next:[647,8199] bool_core (num_cores=35 [cover] a=670 d=8 fixed=635/31985 clauses=962\'650)\n#Bound  82.93s best:8200  next:[648,8199] bool_core (num_cores=35 [cover] a=670 d=8 fixed=636/32070 clauses=965\'871)\n#Bound  82.95s best:8200  next:[649,8199] bool_core (num_cores=35 [cover] a=670 d=8 fixed=637/32155 clauses=969\'134)\n#Bound  82.98s best:8200  next:[651,8199] bool_core (num_cores=35 [cover] a=670 d=8 fixed=639/32325 clauses=975\'786) [skipped_logs=1]\n#81     83.29s best:8178  next:[668,8177] graph_dec_lns (d=0.87 s=3640 t=0.10 p=0.51 stall=4 h=auto_l0)\n#Bound  84.00s best:8178  next:[708,8177] bool_core (num_cores=35 [cover] a=670 d=8 fixed=696/37170 clauses=1\'235\'991) [skipped_logs=56]\n#82     85.00s best:8171  next:[710,8170] quick_restart (fixed_bools=0/4683)\n#Bound  84.04s best:8178  next:[710,8177] bool_core (num_cores=35 [cover] a=670 d=8 fixed=698/37340 clauses=1\'247\'599) [skipped_logs=1]\n#Bound  86.23s best:8171  next:[711,8170] bool_core (num_cores=36 [size:41 mw:1 d:6] a=630 d=8 fixed=699/37464 clauses=1\'253\'507)\n#83     86.33s best:8164  next:[716,8163] quick_restart (fixed_bools=0/4728)\n#Bound  86.84s best:8164  next:[722,8163] bool_core (num_cores=36 [cover] a=630 d=8 fixed=709/38355 clauses=1\'256\'533) [skipped_logs=10]\n#84     87.41s best:8145  next:[723,8144] graph_cst_lns (d=0.65 s=3751 t=0.10 p=0.52 stall=11 h=folio_rnd)\n#85     87.59s best:8070  next:[723,8069] graph_arc_lns (d=0.26 s=3757 t=0.10 p=0.51 stall=10 h=folio_rnd)\n#86     87.77s best:7905  next:[723,7904] graph_var_lns (d=0.26 s=3763 t=0.10 p=0.51 stall=21 h=folio_rnd)\n#Bound  87.06s best:8164  next:[723,8163] bool_core (num_cores=36 [cover] a=630 d=8 fixed=710/38436 clauses=1\'257\'284) [skipped_logs=0]\n#Bound  88.26s best:7905  next:[724,7904] bool_core (num_cores=37 [size:1 mw:1] a=630 d=8 fixed=711/38517 clauses=1\'258\'880) [skipped_logs=0]\n#87     89.69s best:7621  next:[725,7620] quick_restart (fixed_bools=0/4760)\n#Bound  89.10s best:7905  next:[725,7904] bool_core (num_cores=37 [cover] a=630 d=8 fixed=712/38598 clauses=1\'260\'305) [skipped_logs=0]\n#Bound  90.56s best:7621  next:[726,7620] bool_core (num_cores=38 [size:1 mw:1] a=630 d=8 fixed=713/38679 clauses=1\'262\'319) [skipped_logs=0]\n#Bound  92.63s best:7621  next:[727,7620] bool_core (num_cores=39 [size:2 mw:1 d:7] a=629 d=8 fixed=714/38760 clauses=1\'264\'963)\n#Bound  93.01s best:7621  next:[736,7620] bool_core (num_cores=39 [cover] a=629 d=8 fixed=722/39507 clauses=1\'272\'879) [skipped_logs=8]\n#88     93.73s best:7620  next:[741,7619] quick_restart_no_lp (fixed_bools=0/20992)\n#Bound  93.95s best:7620  next:[743,7619] bool_core (num_cores=39 [cover] a=629 d=8 fixed=729/40088 clauses=1\'282\'472) [skipped_logs=6]\n#Bound  94.89s best:7620  next:[747,7619] bool_core (num_cores=39 [cover] a=629 d=8 fixed=733/40420 clauses=1\'289\'480) [skipped_logs=3]\n#89     95.05s best:7619  next:[747,7618] quick_restart_no_lp (fixed_bools=0/21196)\n#Bound  96.01s best:7619  next:[750,7618] bool_core (num_cores=39 [cover] a=629 d=8 fixed=736/40669 clauses=1\'295\'943) [skipped_logs=2]\n#90     96.48s best:7608  next:[750,7607] quick_restart (fixed_bools=0/4851)\n#Bound  96.53s best:7608  next:[751,7607] bool_core (num_cores=39 [cover] a=629 d=8 fixed=737/40752 clauses=1\'285\'658) [skipped_logs=0]\n#Bound  97.43s best:7608  next:[752,7607] bool_core (num_cores=40 [size:1 mw:1] a=629 d=8 fixed=738/40835 clauses=1\'288\'416) [skipped_logs=0]\n#91     98.35s best:7607  next:[753,7606] quick_restart_no_lp (fixed_bools=0/21430)\n#92     98.67s best:7597  next:[753,7596] graph_arc_lns (d=0.38 s=4051 t=0.10 p=0.52 stall=4 h=auto_l0)\n#Bound  98.29s best:7608  next:[753,7607] bool_core (num_cores=41 [size:1 mw:1] a=629 d=8 fixed=739/40918 clauses=1\'291\'361) [skipped_logs=0]\n#Bound  99.61s best:7597  next:[754,7596] bool_core (num_cores=42 [size:1 mw:1] a=629 d=8 fixed=740/41001 clauses=1\'294\'563) [skipped_logs=0]\n#93    100.87s best:7460  next:[755,7459] rnd_var_lns (d=0.87 s=4118 t=0.11 p=0.51 stall=6 h=auto_l0)\n#Bound 100.77s best:7597  next:[755,7596] bool_core (num_cores=43 [size:1 mw:1] a=629 d=8 fixed=741/41084 clauses=1\'298\'201) [skipped_logs=0]\n#94    101.07s best:7459  next:[755,7458] quick_restart_no_lp (fixed_bools=0/21764)\n#95    101.28s best:7317  next:[755,7316] rnd_cst_lns (d=0.82 s=4133 t=0.10 p=0.51 stall=17 h=folio_rnd)\n#96    101.44s best:7176  next:[755,7175] rnd_var_lns (d=0.85 s=4132 t=0.11 p=0.51 stall=1 h=auto_l0)\n#97    101.99s best:7175  next:[755,7174] quick_restart_no_lp (fixed_bools=0/21813)\n#Bound 102.17s best:7175  next:[756,7174] bool_core (num_cores=44 [size:2 mw:1 d:8] a=628 d=8 fixed=742/41167 clauses=1\'302\'069)\n#98    102.57s best:7033  next:[773,7032] rnd_cst_lns (d=0.82 s=4161 t=0.10 p=0.51 stall=1 h=auto_l0)\n#99    103.00s best:7032  next:[785,7031] quick_restart_no_lp (fixed_bools=0/21979)\n#Bound 103.00s best:7033  next:[785,7032] bool_core (num_cores=44 [cover] a=628 d=8 fixed=770/43632 clauses=1\'373\'701) [skipped_logs=28]\n#100   103.02s best:7027  next:[785,7026] graph_dec_lns (d=0.88 s=4179 t=0.11 p=0.51 stall=52 h=folio_rnd)\n#101   103.11s best:6892  next:[786,6891] graph_dec_lns (d=0.88 s=4172 t=0.11 p=0.51 stall=51 h=auto_l0)\n#102   103.63s best:6754  next:[797,6753] graph_dec_lns (d=0.88 s=4193 t=0.11 p=0.51 stall=1 h=auto_l0)\n#Bound 104.05s best:6754  next:[803,6753] bool_core (num_cores=44 [cover] a=628 d=8 fixed=788/45162 clauses=1\'436\'544) [skipped_logs=17]\n#103   104.08s best:6753  next:[803,6752] quick_restart_no_lp (fixed_bools=0/22037)\n#Bound 104.92s best:6753  next:[811,6752] bool_core (num_cores=44 [cover] a=628 d=8 fixed=796/45842 clauses=1\'469\'483) [skipped_logs=7]\n#Bound 105.86s best:6753  next:[816,6752] bool_core (num_cores=44 [cover] a=628 d=8 fixed=801/46267 clauses=1\'491\'971) [skipped_logs=4]\n#104   106.20s best:6745  next:[817,6744] quick_restart (fixed_bools=0/4972)\n#Bound 106.82s best:6745  next:[820,6744] bool_core (num_cores=44 [cover] a=628 d=8 fixed=805/46607 clauses=1\'510\'983) [skipped_logs=3]\n#Bound 107.82s best:6745  next:[823,6744] bool_core (num_cores=44 [cover] a=628 d=8 fixed=808/46862 clauses=1\'526\'051) [skipped_logs=2]\n#105   108.07s best:6727  next:[823,6726] quick_restart (fixed_bools=0/5001)\n#Bound 108.63s best:6727  next:[825,6726] bool_core (num_cores=44 [cover] a=628 d=8 fixed=810/47032 clauses=1\'536\'527) [skipped_logs=1]\n#Bound 109.56s best:6727  next:[827,6726] bool_core (num_cores=44 [cover] a=628 d=8 fixed=812/47202 clauses=1\'532\'966) [skipped_logs=1]\n#106   110.30s best:6718  next:[828,6717] graph_arc_lns (d=0.33 s=4359 t=0.10 p=0.51 stall=14 h=folio_rnd)\n#107   110.54s best:6717  next:[828,6716] quick_restart_no_lp (fixed_bools=0/22307)\n#108   110.79s best:6716  next:[829,6715] quick_restart_no_lp (fixed_bools=0/22313)\n#Bound 110.57s best:6717  next:[829,6716] bool_core (num_cores=44 [cover] a=628 d=8 fixed=814/47372 clauses=1\'544\'061) [skipped_logs=1]\n#109   111.21s best:6635  next:[830,6634] graph_cst_lns (d=0.54 s=4395 t=0.10 p=0.51 stall=10 h=folio_rnd)\n#110   111.30s best:6634  next:[830,6633] quick_restart_no_lp (fixed_bools=0/22433)\n#Bound 111.75s best:6634  next:[831,6633] bool_core (num_cores=44 [cover] a=628 d=8 fixed=816/47542 clauses=1\'555\'544) [skipped_logs=1]\n#111   112.39s best:6633  next:[831,6632] quick_restart_no_lp (fixed_bools=0/22504)\n#Bound 112.47s best:6633  next:[832,6632] bool_core (num_cores=44 [cover] a=628 d=8 fixed=817/47627 clauses=1\'561\'536) [skipped_logs=0]\n#112   116.00s best:6347  next:[832,6346] graph_var_lns (d=0.36 s=4519 t=0.10 p=0.52 stall=21 h=folio_rnd)\n#Bound 116.40s best:6347  next:[833,6346] bool_core (num_cores=45 [size:1 mw:1] a=628 d=8 fixed=818/47712 clauses=1\'562\'425)\n#113   116.46s best:6344  next:[833,6343] rnd_cst_lns (d=0.83 s=4532 t=0.10 p=0.51 stall=12 h=auto_l0)\n#114   118.85s best:6335  next:[833,6334] quick_restart (fixed_bools=0/5139)\n#115   119.24s best:6334  next:[833,6333] quick_restart (fixed_bools=0/5142)\n#116   119.58s best:6333  next:[833,6332] violation_ls(batch:422 #solutions_imported:101 #lin_moves:385\'723 #lin_evals:6\'442\'732 #gen_moves:151\'548 #gen_evals:1\'738\'145 #comp_moves:177 #backtracks:14\'103 #weight_updates:23\'249)\n#117   120.05s best:6242  next:[833,6241] graph_var_lns (d=0.30 s=4633 t=0.10 p=0.51 stall=13 h=folio_rnd)\n#Bound 122.40s best:6242  next:[834,6241] bool_core (num_cores=46 [size:41 mw:1 d:6] a=588 d=8 fixed=819/47836 clauses=1\'568\'986)\n#Bound 122.43s best:6242  next:[835,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=819/47917 clauses=1\'569\'026)\n#Bound 122.45s best:6242  next:[836,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=820/47998 clauses=1\'569\'106)\n#Bound 122.47s best:6242  next:[837,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=821/48079 clauses=1\'569\'226)\n#Bound 122.49s best:6242  next:[838,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=822/48160 clauses=1\'569\'386)\n#Bound 122.52s best:6242  next:[839,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=823/48241 clauses=1\'569\'586)\n#Bound 122.54s best:6242  next:[840,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=824/48322 clauses=1\'569\'826)\n#Bound 122.56s best:6242  next:[841,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=825/48403 clauses=1\'570\'106)\n#Bound 123.03s best:6242  next:[846,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=830/48808 clauses=1\'572\'229) [skipped_logs=4]\n#Bound 123.73s best:6242  next:[848,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=832/48970 clauses=1\'574\'054) [skipped_logs=1]\n#Bound 124.58s best:6242  next:[849,6241] bool_core (num_cores=46 [cover] a=588 d=8 fixed=833/49051 clauses=1\'575\'428) [skipped_logs=0]\n#Bound 126.18s best:6242  next:[850,6241] bool_core (num_cores=47 [size:1 mw:1] a=588 d=8 fixed=834/49132 clauses=1\'577\'598)\n#118   126.72s best:6241  next:[850,6240] quick_restart_no_lp (fixed_bools=0/23050)\n#Bound 127.60s best:6241  next:[851,6240] bool_core (num_cores=48 [size:1 mw:1] a=588 d=8 fixed=835/49213 clauses=1\'579\'694)\n#Bound 129.43s best:6241  next:[852,6240] bool_core (num_cores=49 [size:1 mw:1] a=588 d=8 fixed=836/49294 clauses=1\'573\'789)\n#Bound 131.31s best:6241  next:[853,6240] bool_core (num_cores=50 [size:2 mw:1 d:7] a=587 d=8 fixed=837/49375 clauses=1\'576\'551)\n#Bound 131.33s best:6241  next:[854,6240] bool_core (num_cores=50 [cover] a=587 d=8 fixed=837/49458 clauses=1\'577\'352)\n#Bound 131.37s best:6241  next:[855,6240] bool_core (num_cores=50 [cover] a=587 d=8 fixed=838/49541 clauses=1\'578\'195)\n#Bound 132.04s best:6241  next:[874,6240] bool_core (num_cores=50 [cover] a=587 d=8 fixed=857/51118 clauses=1\'602\'284) [skipped_logs=18]\n#119   132.05s best:5659  next:[874,5658] graph_arc_lns (d=0.27 s=4967 t=0.10 p=0.50 stall=17 h=folio_rnd)\n#Bound 132.89s best:5659  next:[882,5658] bool_core (num_cores=50 [cover] a=587 d=8 fixed=865/51782 clauses=1\'617\'786) [skipped_logs=7]\n#Bound 133.81s best:5659  next:[886,5658] bool_core (num_cores=50 [cover] a=587 d=8 fixed=869/52114 clauses=1\'627\'149) [skipped_logs=3]\n#Bound 134.72s best:5659  next:[889,5658] bool_core (num_cores=50 [cover] a=587 d=8 fixed=872/52363 clauses=1\'635\'073) [skipped_logs=2]\n#120   135.39s best:5658  next:[890,5657] quick_restart_no_lp (fixed_bools=0/23142)\n#Bound 135.64s best:5658  next:[891,5657] bool_core (num_cores=50 [cover] a=587 d=8 fixed=874/52529 clauses=1\'640\'930) [skipped_logs=1]\n#Bound 136.66s best:5658  next:[893,5657] bool_core (num_cores=50 [cover] a=587 d=8 fixed=876/52695 clauses=1\'647\'140) [skipped_logs=1]\n#121   138.22s best:5550  next:[893,5549] quick_restart (fixed_bools=0/5282)\n#122   138.29s best:5549  next:[893,5548] quick_restart_no_lp (fixed_bools=0/23355)\n#123   140.46s best:5548  next:[893,5547] quick_restart_no_lp (fixed_bools=0/23503)\n#Bound 140.49s best:5548  next:[894,5547] bool_core (num_cores=51 [size:1 mw:1] a=587 d=8 fixed=877/52778 clauses=1\'641\'913)\n#Bound 141.69s best:5548  next:[895,5547] bool_core (num_cores=52 [size:1 mw:1] a=587 d=8 fixed=878/52861 clauses=1\'645\'746)\n#Bound 141.84s best:5548  next:[896,5547] bool_core (num_cores=52 [cover] a=587 d=8 fixed=879/52861 clauses=1\'645\'883)\n#Bound 142.89s best:5548  next:[897,5547] bool_core (num_cores=53 [size:1 mw:1] a=587 d=8 fixed=880/53029 clauses=1\'654\'823)\n#124   143.30s best:5417  next:[897,5416] quick_restart (fixed_bools=0/5306)\n#Bound 144.11s best:5417  next:[898,5416] bool_core (num_cores=54 [size:1 mw:1] a=587 d=8 fixed=881/53112 clauses=1\'653\'880)\n#125   144.99s best:5416  next:[898,5415] quick_restart_no_lp (fixed_bools=0/23592)\n#Bound 145.41s best:5416  next:[899,5415] bool_core (num_cores=55 [size:1 mw:1] a=587 d=8 fixed=882/53195 clauses=1\'658\'153)\n#126   145.79s best:5415  next:[899,5414] quick_restart_no_lp (fixed_bools=0/23639)\n#127   145.82s best:5414  next:[899,5413] quick_restart_no_lp (fixed_bools=0/23641)\n#128   145.86s best:5413  next:[899,5412] quick_restart_no_lp (fixed_bools=0/23643)\n#129   146.23s best:5412  next:[899,5411] quick_restart_no_lp (fixed_bools=0/23644)\n#130   146.32s best:5411  next:[899,5410] quick_restart_no_lp (fixed_bools=0/23663)\n#131   146.48s best:5410  next:[899,5409] quick_restart_no_lp (fixed_bools=0/23666)\n#132   146.61s best:5409  next:[899,5408] quick_restart_no_lp (fixed_bools=0/23668)\n#Bound 146.86s best:5409  next:[900,5408] bool_core (num_cores=56 [size:1 mw:1] a=587 d=8 fixed=883/53278 clauses=1\'662\'722)\n#133   147.79s best:5408  next:[900,5407] quick_restart_no_lp (fixed_bools=0/23669)\n#Bound 148.32s best:5408  next:[901,5407] bool_core (num_cores=57 [size:2 mw:1 d:8] a=586 d=8 fixed=884/53361 clauses=1\'667\'406)\n#Bound 148.34s best:5408  next:[902,5407] bool_core (num_cores=57 [cover] a=586 d=8 fixed=884/53446 clauses=1\'670\'135)\n#Bound 148.37s best:5408  next:[903,5407] bool_core (num_cores=57 [cover] a=586 d=8 fixed=885/53531 clauses=1\'672\'906)\n#Bound 148.39s best:5408  next:[904,5407] bool_core (num_cores=57 [cover] a=586 d=8 fixed=886/53616 clauses=1\'675\'719)\n#Bound 149.00s best:5408  next:[929,5407] bool_core (num_cores=57 [cover] a=586 d=8 fixed=911/55741 clauses=1\'759\'722) [skipped_logs=24]\n#Bound 149.98s best:5408  next:[958,5407] bool_core (num_cores=57 [cover] a=586 d=8 fixed=940/58206 clauses=1\'890\'219) [skipped_logs=28]\n#134   150.18s best:5396  next:[961,5395] quick_restart (fixed_bools=0/5398)\n#135   150.56s best:5112  next:[966,5111] quick_restart (fixed_bools=0/5403)\n#Bound 150.96s best:5112  next:[970,5111] bool_core (num_cores=57 [cover] a=586 d=8 fixed=952/59226 clauses=1\'955\'323) [skipped_logs=11]\n#Bound 151.97s best:5112  next:[974,5111] bool_core (num_cores=57 [cover] a=586 d=8 fixed=956/59566 clauses=1\'979\'319) [skipped_logs=3]\n#Bound 152.73s best:5112  next:[976,5111] bool_core (num_cores=57 [cover] a=586 d=8 fixed=958/59736 clauses=1\'991\'893) [skipped_logs=1]\n#Bound 155.50s best:5112  next:[977,5111] bool_core (num_cores=58 [size:41 mw:1 d:6] a=546 d=8 fixed=959/59860 clauses=1\'997\'938)\n#Bound 155.53s best:5112  next:[978,5111] bool_core (num_cores=58 [cover] a=546 d=8 fixed=959/59941 clauses=1\'997\'978)\n#Bound 156.00s best:5112  next:[990,5111] bool_core (num_cores=58 [cover] a=546 d=8 fixed=971/60913 clauses=2\'001\'694) [skipped_logs=11]\n#Bound 156.94s best:5112  next:[994,5111] bool_core (num_cores=58 [cover] a=546 d=8 fixed=975/61237 clauses=2\'005\'003) [skipped_logs=3]\n#Bound 158.00s best:5112  next:[996,5111] bool_core (num_cores=58 [cover] a=546 d=8 fixed=977/61399 clauses=2\'007\'803) [skipped_logs=1]\n#Bound 159.19s best:5112  next:[997,5111] bool_core (num_cores=59 [size:1 mw:1] a=546 d=8 fixed=978/61480 clauses=1\'996\'513)\n#Bound 161.32s best:5112  next:[998,5111] bool_core (num_cores=60 [size:2 mw:1 d:7] a=545 d=8 fixed=979/61561 clauses=1\'999\'354)\n#Bound 161.35s best:5112  next:[999,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=979/61644 clauses=2\'000\'235)\n#Bound 161.96s best:5112  next:[1015,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=995/62972 clauses=2\'020\'158) [skipped_logs=15]\n#Bound 162.92s best:5112  next:[1027,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=1007/63968 clauses=2\'042\'773) [skipped_logs=11]\n#Bound 164.01s best:5112  next:[1033,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=1013/64466 clauses=2\'057\'308) [skipped_logs=5]\n#Bound 164.96s best:5112  next:[1036,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=1016/64715 clauses=2\'065\'750) [skipped_logs=2]\n#Bound 166.07s best:5112  next:[1039,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=1019/64964 clauses=2\'074\'682) [skipped_logs=2]\n#Bound 166.68s best:5112  next:[1040,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=1020/65047 clauses=2\'077\'900) [skipped_logs=0]\n#Bound 167.71s best:5112  next:[1042,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=1022/65213 clauses=2\'084\'497) [skipped_logs=1]\n#Bound 168.30s best:5112  next:[1043,5111] bool_core (num_cores=60 [cover] a=545 d=8 fixed=1023/65296 clauses=2\'088\'004) [skipped_logs=0]\n#Bound 172.48s best:5112  next:[1044,5111] bool_core (num_cores=61 [size:1 mw:1] a=545 d=8 fixed=1024/65379 clauses=2\'081\'169)\n#136   173.04s best:4828  next:[1044,4827] graph_var_lns (d=0.41 s=5920 t=0.10 p=0.51 stall=9 h=auto_l0)\n#Bound 173.15s best:4828  next:[1045,4827] bool_core (num_cores=61 [cover] a=545 d=8 fixed=1025/65462 clauses=2\'084\'920)\n#137   187.00s best:4544  next:[1045,4543] quick_restart (fixed_bools=0/5620)\n#Bound 187.39s best:4544  next:[1046,4543] bool_core (num_cores=62 [size:41 mw:1 d:6] a=505 d=8 fixed=1026/65584 clauses=2\'089\'949)\n#Bound 187.41s best:4544  next:[1047,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1026/65665 clauses=2\'089\'989)\n#Bound 187.44s best:4544  next:[1048,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1027/65746 clauses=2\'090\'069)\n#Bound 187.46s best:4544  next:[1049,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1028/65827 clauses=2\'090\'189)\n#Bound 187.49s best:4544  next:[1050,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1029/65908 clauses=2\'090\'349)\n#Bound 187.51s best:4544  next:[1051,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1030/65989 clauses=2\'090\'549)\n#Bound 187.54s best:4544  next:[1052,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1031/66070 clauses=2\'090\'789)\n#Bound 187.57s best:4544  next:[1053,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1032/66151 clauses=2\'091\'069)\n#Bound 187.64s best:4544  next:[1054,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1033/66232 clauses=2\'091\'392)\n#Bound 187.69s best:4544  next:[1055,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1034/66313 clauses=2\'091\'761)\n#Bound 187.73s best:4544  next:[1056,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1035/66394 clauses=2\'092\'173)\n#Bound 187.76s best:4544  next:[1057,4543] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1036/66475 clauses=2\'092\'620)\n#138   187.78s best:3976  next:[1057,3975] rins_lp_lns (d=0.78 s=6249 t=0.10 p=0.41 stall=1 h=auto_l0)\n#Bound 187.81s best:3976  next:[1058,3975] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1037/66556 clauses=2\'093\'108)\n#Bound 187.90s best:3976  next:[1059,3975] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1038/66637 clauses=2\'093\'681)\n#Bound 187.98s best:3976  next:[1060,3975] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1039/66718 clauses=2\'094\'306)\n#Bound 188.08s best:3976  next:[1061,3975] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1040/66799 clauses=2\'095\'021)\n#Bound 188.27s best:3976  next:[1062,3975] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1041/66880 clauses=2\'095\'862)\n#139   188.95s best:3834  next:[1063,3833] rins_pump_lns (d=0.80 s=6267 t=0.10 p=0.41 stall=1 h=auto_l0)\n#Bound 188.51s best:3976  next:[1063,3975] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1042/66961 clauses=2\'096\'799) [skipped_logs=0]\n#Bound 189.80s best:3834  next:[1065,3833] bool_core (num_cores=62 [cover] a=505 d=8 fixed=1044/67123 clauses=2\'099\'689) [skipped_logs=1]\n#Bound 190.83s best:3834  next:[1066,3833] bool_core (num_cores=63 [size:1 mw:1] a=505 d=8 fixed=1045/67204 clauses=2\'101\'563) [skipped_logs=0]\n#Bound 192.38s best:3834  next:[1067,3833] bool_core (num_cores=64 [size:1 mw:1] a=505 d=8 fixed=1046/67285 clauses=2\'104\'170)\n#140   193.37s best:3550  next:[1067,3549] rins_pump_lns (d=0.76 s=6357 t=0.10 p=0.41 stall=0 h=auto_l0)\n#Bound 195.89s best:3550  next:[1068,3549] bool_core (num_cores=65 [size:2 mw:1 d:7] a=504 d=8 fixed=1047/67366 clauses=2\'097\'849)\n#Bound 195.91s best:3550  next:[1069,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1047/67449 clauses=2\'098\'770)\n#Bound 195.94s best:3550  next:[1070,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1048/67532 clauses=2\'099\'734)\n#Bound 196.00s best:3550  next:[1072,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1050/67698 clauses=2\'101\'783) [skipped_logs=1]\n#Bound 196.95s best:3550  next:[1090,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1068/69192 clauses=2\'128\'315) [skipped_logs=17]\n#Bound 198.02s best:3550  next:[1097,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1075/69773 clauses=2\'143\'271) [skipped_logs=6]\n#Bound 198.96s best:3550  next:[1102,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1080/70188 clauses=2\'155\'333) [skipped_logs=4]\n#Bound 200.03s best:3550  next:[1106,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1084/70520 clauses=2\'166\'364) [skipped_logs=3]\n#Bound 200.85s best:3550  next:[1108,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1086/70686 clauses=2\'172\'536) [skipped_logs=1]\n#Bound 201.89s best:3550  next:[1110,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1088/70852 clauses=2\'179\'179) [skipped_logs=1]\n#Bound 202.50s best:3550  next:[1111,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1089/70935 clauses=2\'182\'764) [skipped_logs=0]\n#Bound 203.21s best:3550  next:[1112,3549] bool_core (num_cores=65 [cover] a=504 d=8 fixed=1090/71018 clauses=2\'186\'397) [skipped_logs=0]\n#Bound 208.76s best:3550  next:[1113,3549] bool_core (num_cores=66 [size:1 mw:1] a=504 d=8 fixed=1091/71101 clauses=2\'181\'596)\n#Bound 211.77s best:3550  next:[1114,3549] bool_core (num_cores=67 [size:1 mw:1] a=504 d=8 fixed=1092/71184 clauses=2\'185\'868)\n#Bound 212.03s best:3550  next:[1115,3549] bool_core (num_cores=67 [cover] a=504 d=8 fixed=1093/71184 clauses=2\'186\'194)\n#Bound 213.93s best:3550  next:[1116,3549] bool_core (num_cores=68 [size:1 mw:1] a=504 d=8 fixed=1094/71350 clauses=2\'188\'549)\n#Bound 215.24s best:3550  next:[1117,3549] bool_core (num_cores=69 [size:1 mw:1] a=504 d=8 fixed=1095/71433 clauses=2\'192\'831)\n#Bound 215.78s best:3550  next:[1118,3549] bool_core (num_cores=69 [cover] a=504 d=8 fixed=1096/71433 clauses=2\'193\'485)\n#Bound 217.38s best:3550  next:[1119,3549] bool_core (num_cores=70 [size:1 mw:1] a=504 d=8 fixed=1097/71599 clauses=2\'201\'046)\n#Bound 218.97s best:3550  next:[1120,3549] bool_core (num_cores=71 [size:1 mw:1] a=504 d=8 fixed=1098/71682 clauses=2\'205\'784)\n#Bound 221.00s best:3550  next:[1121,3549] bool_core (num_cores=72 [size:1 mw:1] a=504 d=8 fixed=1099/71765 clauses=2\'210\'886)\n#141   221.55s best:3124  next:[1121,3123] rins_lp_lns (d=0.63 s=6906 t=0.10 p=0.41 stall=1 h=auto_l0)\n#Bound 223.04s best:3124  next:[1122,3123] bool_core (num_cores=73 [size:1 mw:1] a=504 d=8 fixed=1100/71848 clauses=2\'216\'264)\n#Bound 225.58s best:3124  next:[1123,3123] bool_core (num_cores=74 [size:1 mw:1] a=504 d=8 fixed=1101/71931 clauses=2\'210\'012)\n#Bound 228.31s best:3124  next:[1124,3123] bool_core (num_cores=75 [size:1 mw:1] a=504 d=8 fixed=1102/72014 clauses=2\'216\'027)\n#Bound 230.93s best:3124  next:[1125,3123] bool_core (num_cores=76 [size:1 mw:1] a=504 d=8 fixed=1103/72097 clauses=2\'222\'202)\n#Bound 236.36s best:3124  next:[1126,3123] bool_core (num_cores=77 [size:2 mw:1 d:8] a=503 d=8 fixed=1104/72180 clauses=2\'221\'300)\n#Bound 236.39s best:3124  next:[1127,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1104/72265 clauses=2\'224\'232)\n#Bound 236.42s best:3124  next:[1128,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1105/72350 clauses=2\'227\'206)\n#Bound 236.45s best:3124  next:[1129,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1106/72435 clauses=2\'230\'222)\n#Bound 236.48s best:3124  next:[1130,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1107/72520 clauses=2\'233\'280)\n#Bound 236.52s best:3124  next:[1131,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1108/72605 clauses=2\'236\'380)\n#Bound 236.54s best:3124  next:[1132,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1109/72690 clauses=2\'239\'522)\n#Bound 236.57s best:3124  next:[1133,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1110/72775 clauses=2\'242\'706)\n#Bound 236.60s best:3124  next:[1134,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1111/72860 clauses=2\'245\'932)\n#Bound 236.63s best:3124  next:[1135,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1112/72945 clauses=2\'249\'200)\n#Bound 236.66s best:3124  next:[1136,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1113/73030 clauses=2\'252\'510)\n#Bound 236.69s best:3124  next:[1137,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1114/73115 clauses=2\'255\'862)\n#Bound 236.72s best:3124  next:[1138,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1115/73200 clauses=2\'259\'256)\n#Bound 236.76s best:3124  next:[1139,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1116/73285 clauses=2\'262\'692)\n#Bound 236.79s best:3124  next:[1140,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1117/73370 clauses=2\'266\'170)\n#Bound 236.82s best:3124  next:[1141,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1118/73455 clauses=2\'269\'690)\n#Bound 236.86s best:3124  next:[1142,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1119/73540 clauses=2\'273\'252)\n#Bound 236.89s best:3124  next:[1143,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1120/73625 clauses=2\'276\'856)\n#Bound 236.94s best:3124  next:[1144,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1121/73710 clauses=2\'280\'502)\n#Bound 237.01s best:3124  next:[1146,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1123/73880 clauses=2\'287\'920) [skipped_logs=1]\n#Bound 238.03s best:3124  next:[1177,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1154/76515 clauses=2\'424\'382) [skipped_logs=30]\n#Bound 238.71s best:3124  next:[1196,3123] bool_core (num_cores=77 [cover] a=503 d=8 fixed=1173/78130 clauses=2\'527\'970) [skipped_logs=18]\n#Bound 240.02s best:3124  next:[1198,3123] bool_core (num_cores=78 [cover] a=502 d=8 fixed=1174/78300 clauses=2\'538\'076) [skipped_logs=1]\n#Bound 241.03s best:3124  next:[1225,3123] bool_core (num_cores=78 [cover] a=502 d=8 fixed=1201/80595 clauses=2\'640\'838) [skipped_logs=26]\n#Bound 242.01s best:3124  next:[1250,3123] bool_core (num_cores=78 [cover] a=502 d=8 fixed=1226/82720 clauses=2\'763\'288) [skipped_logs=24]\n#Bound 242.37s best:3124  next:[1260,3123] bool_core (num_cores=78 [cover] a=502 d=8 fixed=1236/83570 clauses=2\'819\'618) [skipped_logs=9]\n#Bound 246.80s best:3124  next:[1261,3123] bool_core (num_cores=79 [size:41 mw:1 d:6] a=462 d=8 fixed=1237/83694 clauses=2\'825\'550)\n#Bound 246.83s best:3124  next:[1262,3123] bool_core (num_cores=79 [cover] a=462 d=8 fixed=1237/83775 clauses=2\'825\'590)\n#Bound 246.88s best:3124  next:[1263,3123] bool_core (num_cores=79 [cover] a=462 d=8 fixed=1238/83856 clauses=2\'825\'670)\n#Bound 246.99s best:3124  next:[1266,3123] bool_core (num_cores=79 [cover] a=462 d=8 fixed=1241/84099 clauses=2\'826\'150) [skipped_logs=2]\n#Bound 247.76s best:3124  next:[1274,3123] bool_core (num_cores=79 [cover] a=462 d=8 fixed=1249/84747 clauses=2\'829\'561) [skipped_logs=7]\n#Bound 248.23s best:3124  next:[1275,3123] bool_core (num_cores=79 [cover] a=462 d=8 fixed=1250/84828 clauses=2\'830\'528) [skipped_logs=0]\n#Bound 249.06s best:3124  next:[1276,3123] bool_core (num_cores=79 [cover] a=462 d=8 fixed=1251/84909 clauses=2\'831\'907) [skipped_logs=0]\n#Bound 250.74s best:3124  next:[1277,3123] bool_core (num_cores=80 [size:1 mw:1] a=462 d=8 fixed=1252/84990 clauses=2\'824\'257) [skipped_logs=0]\n#Bound 252.59s best:3124  next:[1278,3123] bool_core (num_cores=81 [size:2 mw:1 d:7] a=461 d=8 fixed=1253/85071 clauses=2\'826\'963)\n#Bound 253.06s best:3124  next:[1286,3123] bool_core (num_cores=81 [cover] a=461 d=8 fixed=1260/85735 clauses=2\'834\'098) [skipped_logs=7]\n#142   253.68s best:2982  next:[1290,2981] rins_pump_lns (d=0.83 s=7491 t=0.10 p=0.43 stall=0 h=auto_l0)\n#Bound 253.86s best:2982  next:[1292,2981] bool_core (num_cores=81 [cover] a=461 d=8 fixed=1266/86233 clauses=2\'841\'845) [skipped_logs=5]\n#Bound 254.77s best:2982  next:[1295,2981] bool_core (num_cores=81 [cover] a=461 d=8 fixed=1269/86482 clauses=2\'847\'097) [skipped_logs=2]\n#Bound 255.73s best:2982  next:[1297,2981] bool_core (num_cores=81 [cover] a=461 d=8 fixed=1271/86648 clauses=2\'851\'456) [skipped_logs=1]\n#Bound 256.24s best:2982  next:[1298,2981] bool_core (num_cores=81 [cover] a=461 d=8 fixed=1272/86731 clauses=2\'853\'793) [skipped_logs=0]\n#Bound 257.25s best:2982  next:[1299,2981] bool_core (num_cores=82 [size:1 mw:1] a=461 d=8 fixed=1273/86814 clauses=2\'856\'442) [skipped_logs=0]\n#Bound 258.30s best:2982  next:[1300,2981] bool_core (num_cores=83 [size:1 mw:1] a=461 d=8 fixed=1274/86897 clauses=2\'859\'095) [skipped_logs=0]\n#Bound 259.34s best:2982  next:[1301,2981] bool_core (num_cores=84 [size:1 mw:1] a=461 d=8 fixed=1275/86980 clauses=2\'861\'978) [skipped_logs=0]\n#Bound 260.55s best:2982  next:[1302,2981] bool_core (num_cores=85 [size:1 mw:1] a=461 d=8 fixed=1276/87063 clauses=2\'865\'168) [skipped_logs=0]\n#Bound 261.92s best:2982  next:[1303,2981] bool_core (num_cores=86 [size:1 mw:1] a=461 d=8 fixed=1277/87146 clauses=2\'856\'867) [skipped_logs=0]\n#Bound 263.66s best:2982  next:[1304,2981] bool_core (num_cores=87 [size:2 mw:1 d:8] a=460 d=8 fixed=1278/87229 clauses=2\'860\'634)\n#Bound 263.98s best:2982  next:[1313,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1286/87994 clauses=2\'878\'238) [skipped_logs=8]\n#Bound 265.03s best:2982  next:[1339,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1312/90204 clauses=2\'948\'234) [skipped_logs=25]\n#Bound 266.00s best:2982  next:[1359,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1332/91904 clauses=3\'021\'521) [skipped_logs=19]\n#Bound 266.99s best:2982  next:[1376,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1349/93349 clauses=3\'097\'106) [skipped_logs=16]\n#Bound 267.99s best:2982  next:[1389,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1362/94454 clauses=3\'163\'351) [skipped_logs=12]\n#Bound 268.83s best:2982  next:[1396,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1369/95049 clauses=3\'202\'415) [skipped_logs=6]\n#Bound 269.67s best:2982  next:[1399,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1372/95304 clauses=3\'220\'377) [skipped_logs=2]\n#Bound 270.69s best:2982  next:[1401,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1374/95474 clauses=3\'233\'349) [skipped_logs=1]\n#Bound 271.25s best:2982  next:[1402,2981] bool_core (num_cores=87 [cover] a=460 d=8 fixed=1375/95559 clauses=3\'239\'860) [skipped_logs=0]\n#Bound 280.82s best:2982  next:[1403,2981] bool_core (num_cores=88 [size:41 mw:1 d:6] a=420 d=8 fixed=1376/95683 clauses=3\'245\'911)\n#Bound 280.86s best:2982  next:[1404,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1376/95764 clauses=3\'245\'951)\n#Bound 280.90s best:2982  next:[1405,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1377/95845 clauses=3\'246\'031)\n#Bound 280.95s best:2982  next:[1406,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1378/95926 clauses=3\'246\'151)\n#Bound 280.99s best:2982  next:[1407,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1379/96007 clauses=3\'246\'311)\n#Bound 281.03s best:2982  next:[1408,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1380/96088 clauses=3\'246\'511)\n#Bound 281.07s best:2982  next:[1409,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1381/96169 clauses=3\'246\'751)\n#Bound 281.10s best:2982  next:[1410,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1382/96250 clauses=3\'247\'031)\n#Bound 281.15s best:2982  next:[1411,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1383/96331 clauses=3\'247\'352)\n#Bound 281.91s best:2982  next:[1416,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1388/96736 clauses=3\'250\'112) [skipped_logs=4]\n#Bound 282.44s best:2982  next:[1417,2981] bool_core (num_cores=88 [cover] a=420 d=8 fixed=1389/96817 clauses=3\'251\'149) [skipped_logs=0]\n#Bound 287.76s best:2982  next:[1418,2981] bool_core (num_cores=89 [size:1 mw:1] a=420 d=8 fixed=1390/96898 clauses=3\'240\'407)\n#Bound 289.91s best:2982  next:[1419,2981] bool_core (num_cores=90 [size:2 mw:1 d:7] a=419 d=8 fixed=1391/96979 clauses=3\'243\'056)\n#Bound 289.95s best:2982  next:[1420,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1391/97062 clauses=3\'243\'737)\n#Bound 289.99s best:2982  next:[1421,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1392/97145 clauses=3\'244\'460)\n#Bound 290.03s best:2982  next:[1422,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1393/97228 clauses=3\'245\'226)\n#Bound 290.08s best:2982  next:[1423,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1394/97311 clauses=3\'246\'035)\n#Bound 290.12s best:2982  next:[1424,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1395/97394 clauses=3\'246\'887)\n#Bound 291.02s best:2982  next:[1435,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1406/98307 clauses=3\'259\'527) [skipped_logs=10]\n#Bound 291.98s best:2982  next:[1440,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1411/98722 clauses=3\'267\'817) [skipped_logs=4]\n#Bound 292.81s best:2982  next:[1442,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1413/98888 clauses=3\'272\'166) [skipped_logs=1]\n#Bound 293.62s best:2982  next:[1444,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1415/99054 clauses=3\'276\'773) [skipped_logs=1]\n#Bound 295.00s best:2982  next:[1447,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1418/99303 clauses=3\'277\'468) [skipped_logs=2]\n#Bound 295.56s best:2982  next:[1448,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1419/99386 clauses=3\'280\'066) [skipped_logs=0]\n#Bound 296.18s best:2982  next:[1449,2981] bool_core (num_cores=90 [cover] a=419 d=8 fixed=1420/99469 clauses=3\'282\'909) [skipped_logs=0]\n#Bound 299.36s best:2982  next:[1450,2981] bool_core (num_cores=91 [size:1 mw:1] a=419 d=8 fixed=1421/99552 clauses=3\'286\'252)\n#Bound 300.84s best:2982  next:[1451,2981] bool_core (num_cores=92 [size:1 mw:1] a=419 d=8 fixed=1422/99635 clauses=3\'289\'808)\n#Bound 304.08s best:2982  next:[1452,2981] bool_core (num_cores=93 [size:1 mw:1] a=419 d=8 fixed=1423/99718 clauses=3\'293\'755)\n#Bound 305.74s best:2982  next:[1453,2981] bool_core (num_cores=94 [size:2 mw:1 d:8] a=418 d=8 fixed=1424/99801 clauses=3\'297\'794)\n#Bound 305.78s best:2982  next:[1454,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1424/99886 clauses=3\'299\'870)\n#Bound 305.82s best:2982  next:[1455,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1425/99971 clauses=3\'301\'988)\n#Bound 305.86s best:2982  next:[1456,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1426/100056 clauses=3\'304\'148)\n#Bound 305.90s best:2982  next:[1457,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1427/100141 clauses=3\'306\'350)\n#Bound 306.02s best:2982  next:[1460,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1430/100396 clauses=3\'313\'208) [skipped_logs=2]\n#Bound 307.00s best:2982  next:[1480,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1450/102096 clauses=3\'368\'601) [skipped_logs=19]\n#Bound 307.98s best:2982  next:[1499,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1469/103711 clauses=3\'436\'820) [skipped_logs=18]\n#Bound 309.04s best:2982  next:[1517,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1487/105241 clauses=3\'515\'604) [skipped_logs=17]\n#Bound 309.93s best:2982  next:[1528,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1498/106176 clauses=3\'570\'707) [skipped_logs=10]\n#Bound 311.01s best:2982  next:[1537,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1507/106941 clauses=3\'619\'985) [skipped_logs=8]\n#Bound 311.90s best:2982  next:[1541,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1511/107281 clauses=3\'643\'509) [skipped_logs=3]\n#Bound 312.33s best:2982  next:[1542,2981] bool_core (num_cores=94 [cover] a=418 d=8 fixed=1512/107366 clauses=3\'649\'826) [skipped_logs=0]\n#Bound 313.49s best:2982  next:[1543,2981] bool_core (num_cores=95 [size:1 mw:1] a=418 d=8 fixed=1513/107451 clauses=3\'641\'859) [skipped_logs=0]\n#Bound 314.73s best:2982  next:[1544,2981] bool_core (num_cores=96 [size:1 mw:1] a=418 d=8 fixed=1514/107536 clauses=3\'649\'005) [skipped_logs=0]\n#Bound 316.49s best:2982  next:[1545,2981] bool_core (num_cores=97 [size:5 mw:1 d:3] a=414 d=8 fixed=1515/107624 clauses=3\'655\'301)\n#Bound 316.99s best:2982  next:[1556,2981] bool_core (num_cores=97 [cover] a=414 d=8 fixed=1525/107723 clauses=3\'655\'565) [skipped_logs=10]\n#Bound 318.00s best:2982  next:[1577,2981] bool_core (num_cores=97 [cover] a=414 d=8 fixed=1546/107912 clauses=3\'657\'413) [skipped_logs=20]\n#Bound 319.02s best:2982  next:[1599,2981] bool_core (num_cores=97 [cover] a=414 d=8 fixed=1568/108110 clauses=3\'661\'241) [skipped_logs=21]\n#Bound 320.00s best:2982  next:[1619,2981] bool_core (num_cores=97 [cover] a=414 d=8 fixed=1588/108290 clauses=3\'666\'402) [skipped_logs=19]\n#Bound 321.04s best:2982  next:[1640,2981] bool_core (num_cores=97 [cover] a=414 d=8 fixed=1609/108479 clauses=3\'673\'557) [skipped_logs=20]\n#Bound 322.01s best:2982  next:[1660,2981] bool_core (num_cores=97 [cover] a=414 d=8 fixed=1629/108659 clauses=3\'682\'085) [skipped_logs=19]\n#Bound 323.00s best:2982  next:[1679,2981] bool_core (num_cores=97 [cover] a=414 d=8 fixed=1648/108830 clauses=3\'692\'061) [skipped_logs=18]\n#Bound 323.57s best:2982  next:[1686,2981] bool_core (num_cores=97 [cover] a=414 d=8 fixed=1655/108893 clauses=3\'696\'844) [skipped_logs=6]\n#Bound 326.68s best:2982  next:[1687,2981] bool_core (num_cores=98 [size:1 mw:1] a=414 d=8 fixed=1656/108902 clauses=3\'698\'781)\n#Bound 328.42s best:2982  next:[1688,2981] bool_core (num_cores=99 [size:1 mw:1] a=414 d=8 fixed=1657/108987 clauses=3\'705\'303)\n#Bound 330.08s best:2982  next:[1689,2981] bool_core (num_cores=100 [size:1 mw:1] a=414 d=8 fixed=1658/109072 clauses=3\'712\'156)\n#Bound 336.17s best:2982  next:[1690,2981] bool_core (num_cores=101 [size:1 mw:1] a=414 d=8 fixed=1659/109157 clauses=3\'703\'284)\n#Bound 338.33s best:2982  next:[1691,2981] bool_core (num_cores=102 [size:1 mw:1] a=414 d=8 fixed=1660/109242 clauses=3\'710\'501)\n#Bound 340.42s best:2982  next:[1692,2981] bool_core (num_cores=103 [size:1 mw:1] a=414 d=8 fixed=1661/109327 clauses=3\'718\'231)\n#Bound 342.98s best:2982  next:[1693,2981] bool_core (num_cores=104 [size:1 mw:1] a=414 d=8 fixed=1662/109412 clauses=3\'719\'452)\n#Bound 347.72s best:2982  next:[1694,2981] bool_core (num_cores=105 [size:1 mw:1] a=414 d=8 fixed=1663/109497 clauses=3\'729\'165)\n#Bound 352.48s best:2982  next:[1695,2981] bool_core (num_cores=106 [size:1 mw:1] a=414 d=8 fixed=1664/109582 clauses=3\'730\'802)\n#Bound 358.16s best:2982  next:[1696,2981] bool_core (num_cores=107 [size:1 mw:1] a=414 d=8 fixed=1665/109667 clauses=3\'742\'938)\n#Bound 366.46s best:2982  next:[1697,2981] bool_core (num_cores=108 [size:1 mw:1] a=414 d=8 fixed=1666/109752 clauses=3\'747\'556)\n#Bound 378.48s best:2982  next:[1698,2981] bool_core (num_cores=109 [size:1 mw:1] a=414 d=8 fixed=1667/109837 clauses=3\'755\'490)\n#Bound 393.39s best:2982  next:[1699,2981] bool_core (num_cores=110 [size:1 mw:1] a=414 d=8 fixed=1668/109922 clauses=3\'764\'155)\n#Bound 412.99s best:2982  next:[1700,2981] bool_core (num_cores=111 [size:27 mw:1 d:9] a=388 d=9 fixed=1669/110032 clauses=3\'777\'381)\n#Bound 413.04s best:2982  next:[1701,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1669/110169 clauses=3\'783\'142)\n#Bound 413.09s best:2982  next:[1702,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1670/110306 clauses=3\'788\'971)\n#Bound 413.14s best:2982  next:[1703,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1671/110443 clauses=3\'794\'868)\n#Bound 413.19s best:2982  next:[1704,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1672/110580 clauses=3\'800\'833)\n#Bound 413.26s best:2982  next:[1705,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1673/110717 clauses=3\'806\'866)\n#Bound 413.31s best:2982  next:[1706,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1674/110854 clauses=3\'812\'967)\n#Bound 413.36s best:2982  next:[1707,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1675/110991 clauses=3\'819\'136)\n#Bound 413.42s best:2982  next:[1708,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1676/111128 clauses=3\'825\'375)\n#Bound 413.49s best:2982  next:[1709,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1677/111265 clauses=3\'831\'688)\n#Bound 413.58s best:2982  next:[1710,2981] bool_core (num_cores=111 [cover] a=388 d=9 fixed=1678/111402 clauses=3\'838\'090)\n#Bound 421.85s best:2982  next:[1711,2981] bool_core (num_cores=112 [size:1 mw:1] a=388 d=9 fixed=1679/111539 clauses=3\'843\'078)\n#Bound 422.13s best:2982  next:[1712,2981] bool_core (num_cores=112 [cover] a=388 d=9 fixed=1680/111676 clauses=3\'841\'889)\n#Bound 422.43s best:2982  next:[1713,2981] bool_core (num_cores=112 [cover] a=388 d=9 fixed=1681/111813 clauses=3\'848\'693)\n#Bound 422.94s best:2982  next:[1714,2981] bool_core (num_cores=112 [cover] a=388 d=9 fixed=1682/111950 clauses=3\'855\'701)\n#Bound 423.69s best:2982  next:[1715,2981] bool_core (num_cores=112 [cover] a=388 d=9 fixed=1683/112087 clauses=3\'862\'888)\n#Bound 426.33s best:2982  next:[1716,2981] bool_core (num_cores=113 [size:1 mw:1] a=388 d=9 fixed=1684/112224 clauses=3\'871\'449)\n#Bound 427.13s best:2982  next:[1717,2981] bool_core (num_cores=113 [cover] a=388 d=9 fixed=1685/112361 clauses=3\'878\'809)\n#Bound 428.28s best:2982  next:[1718,2981] bool_core (num_cores=113 [cover] a=388 d=9 fixed=1686/112498 clauses=3\'886\'468)\n#Bound 430.49s best:2982  next:[1719,2981] bool_core (num_cores=114 [size:1 mw:1] a=388 d=9 fixed=1687/112635 clauses=3\'894\'758)\n#Bound 435.88s best:2982  next:[1720,2981] bool_core (num_cores=115 [size:1 mw:1] a=388 d=9 fixed=1688/112772 clauses=3\'903\'714)\n#Bound 440.06s best:2982  next:[1721,2981] bool_core (num_cores=116 [size:2 mw:1 d:10] a=387 d=10 fixed=1689/112909 clauses=3\'913\'006)\n#Bound 440.11s best:2982  next:[1722,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1689/113048 clauses=3\'920\'196)\n#Bound 440.17s best:2982  next:[1723,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1690/113187 clauses=3\'927\'455)\n#Bound 440.22s best:2982  next:[1724,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1691/113326 clauses=3\'934\'783)\n#Bound 440.27s best:2982  next:[1725,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1692/113465 clauses=3\'942\'180)\n#Bound 440.34s best:2982  next:[1726,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1693/113604 clauses=3\'949\'646)\n#Bound 440.40s best:2982  next:[1727,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1694/113743 clauses=3\'957\'181)\n#Bound 440.46s best:2982  next:[1728,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1695/113882 clauses=3\'964\'785)\n#Bound 440.51s best:2982  next:[1729,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1696/114021 clauses=3\'972\'458)\n#Bound 440.57s best:2982  next:[1730,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1697/114160 clauses=3\'980\'200)\n#Bound 440.62s best:2982  next:[1731,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1698/114299 clauses=3\'988\'011)\n#Bound 440.67s best:2982  next:[1732,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1699/114438 clauses=3\'995\'891)\n#Bound 440.72s best:2982  next:[1733,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1700/114577 clauses=4\'003\'840)\n#Bound 440.78s best:2982  next:[1734,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1701/114716 clauses=4\'011\'858)\n#Bound 440.83s best:2982  next:[1735,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1702/114855 clauses=4\'019\'945)\n#Bound 440.89s best:2982  next:[1736,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1703/114994 clauses=4\'028\'101)\n#Bound 440.96s best:2982  next:[1737,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1704/115133 clauses=4\'036\'326)\n#Bound 441.01s best:2982  next:[1738,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1705/115272 clauses=4\'044\'620)\n#Bound 441.07s best:2982  next:[1739,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1706/115411 clauses=4\'052\'983)\n#Bound 441.12s best:2982  next:[1740,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1707/115550 clauses=4\'061\'415)\n#Bound 441.18s best:2982  next:[1741,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1708/115689 clauses=4\'069\'916)\n#Bound 441.24s best:2982  next:[1742,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1709/115828 clauses=4\'078\'486)\n#Bound 441.29s best:2982  next:[1743,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1710/115967 clauses=4\'087\'125)\n#Bound 441.35s best:2982  next:[1744,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1711/116106 clauses=4\'095\'833)\n#Bound 441.40s best:2982  next:[1745,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1712/116245 clauses=4\'104\'610)\n#Bound 441.46s best:2982  next:[1746,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1713/116384 clauses=4\'113\'456)\n#Bound 441.51s best:2982  next:[1747,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1714/116523 clauses=4\'122\'371)\n#Bound 441.57s best:2982  next:[1748,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1715/116662 clauses=4\'131\'355)\n#Bound 441.63s best:2982  next:[1749,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1716/116801 clauses=4\'140\'408)\n#Bound 441.69s best:2982  next:[1750,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1717/116940 clauses=4\'149\'530)\n#Bound 441.75s best:2982  next:[1751,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1718/117079 clauses=4\'158\'721)\n#Bound 441.80s best:2982  next:[1752,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1719/117218 clauses=4\'167\'981)\n#Bound 441.87s best:2982  next:[1753,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1720/117357 clauses=4\'177\'310)\n#Bound 441.94s best:2982  next:[1754,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1721/117496 clauses=4\'186\'708)\n#Bound 441.99s best:2982  next:[1755,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1722/117635 clauses=4\'196\'175)\n#Bound 442.05s best:2982  next:[1756,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1723/117774 clauses=4\'205\'711)\n#Bound 442.11s best:2982  next:[1757,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1724/117913 clauses=4\'215\'316)\n#Bound 442.19s best:2982  next:[1758,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1725/118052 clauses=4\'224\'990)\n#Bound 442.24s best:2982  next:[1759,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1726/118191 clauses=4\'234\'733)\n#Bound 442.30s best:2982  next:[1760,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1727/118330 clauses=4\'244\'545)\n#Bound 442.36s best:2982  next:[1761,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1728/118469 clauses=4\'254\'426)\n#Bound 442.41s best:2982  next:[1762,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1729/118608 clauses=4\'264\'376)\n#Bound 442.47s best:2982  next:[1763,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1730/118747 clauses=4\'274\'395)\n#Bound 442.53s best:2982  next:[1764,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1731/118886 clauses=4\'284\'483)\n#Bound 442.59s best:2982  next:[1765,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1732/119025 clauses=4\'294\'640)\n#Bound 442.65s best:2982  next:[1766,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1733/119164 clauses=4\'304\'866)\n#Bound 442.70s best:2982  next:[1767,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1734/119303 clauses=4\'315\'161)\n#Bound 442.76s best:2982  next:[1768,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1735/119442 clauses=4\'325\'525)\n#Bound 442.82s best:2982  next:[1769,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1736/119581 clauses=4\'335\'958)\n#Bound 442.88s best:2982  next:[1770,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1737/119720 clauses=4\'346\'460)\n#Bound 442.94s best:2982  next:[1771,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1738/119859 clauses=4\'357\'031)\n#Bound 443.00s best:2982  next:[1772,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1739/119998 clauses=4\'367\'671)\n#Bound 443.05s best:2982  next:[1773,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1740/120137 clauses=4\'378\'380)\n#Bound 443.11s best:2982  next:[1774,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1741/120276 clauses=4\'389\'158)\n#Bound 443.17s best:2982  next:[1775,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1742/120415 clauses=4\'400\'005)\n#Bound 443.23s best:2982  next:[1776,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1743/120554 clauses=4\'410\'921)\n#Bound 443.30s best:2982  next:[1777,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1744/120693 clauses=4\'421\'906)\n#Bound 443.36s best:2982  next:[1778,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1745/120832 clauses=4\'432\'960)\n#Bound 443.41s best:2982  next:[1779,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1746/120971 clauses=4\'444\'083)\n#Bound 443.47s best:2982  next:[1780,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1747/121110 clauses=4\'455\'275)\n#Bound 443.53s best:2982  next:[1781,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1748/121249 clauses=4\'466\'536)\n#Bound 443.59s best:2982  next:[1782,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1749/121388 clauses=4\'477\'866)\n#Bound 443.64s best:2982  next:[1783,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1750/121527 clauses=4\'489\'265)\n#Bound 443.70s best:2982  next:[1784,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1751/121666 clauses=4\'500\'733)\n#Bound 443.76s best:2982  next:[1785,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1752/121805 clauses=4\'512\'270)\n#Bound 443.81s best:2982  next:[1786,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1753/121944 clauses=4\'523\'876)\n#Bound 443.87s best:2982  next:[1787,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1754/122083 clauses=4\'535\'551)\n#Bound 443.93s best:2982  next:[1788,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1755/122222 clauses=4\'547\'295)\n#Bound 443.99s best:2982  next:[1789,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1756/122361 clauses=4\'559\'108)\n#Bound 444.06s best:2982  next:[1790,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1757/122500 clauses=4\'570\'990)\n#Bound 444.14s best:2982  next:[1791,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1758/122639 clauses=4\'582\'941)\n#Bound 444.20s best:2982  next:[1792,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1759/122778 clauses=4\'594\'961)\n#Bound 444.26s best:2982  next:[1793,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1760/122917 clauses=4\'607\'050)\n#Bound 444.32s best:2982  next:[1794,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1761/123056 clauses=4\'619\'208)\n#Bound 444.38s best:2982  next:[1795,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1762/123195 clauses=4\'631\'435)\n#Bound 444.45s best:2982  next:[1796,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1763/123334 clauses=4\'643\'731)\n#Bound 444.51s best:2982  next:[1797,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1764/123473 clauses=4\'656\'096)\n#Bound 444.57s best:2982  next:[1798,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1765/123612 clauses=4\'668\'530)\n#Bound 444.64s best:2982  next:[1799,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1766/123751 clauses=4\'681\'033)\n#Bound 444.70s best:2982  next:[1800,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1767/123890 clauses=4\'693\'605)\n#Bound 444.76s best:2982  next:[1801,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1768/124029 clauses=4\'706\'246)\n#Bound 444.82s best:2982  next:[1802,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1769/124168 clauses=4\'718\'956)\n#Bound 444.88s best:2982  next:[1803,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1770/124307 clauses=4\'731\'735)\n#Bound 444.94s best:2982  next:[1804,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1771/124446 clauses=4\'744\'583)\n#Bound 445.00s best:2982  next:[1805,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1772/124585 clauses=4\'757\'500)\n#Bound 445.07s best:2982  next:[1806,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1773/124724 clauses=4\'770\'486)\n#Bound 445.18s best:2982  next:[1807,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1774/124863 clauses=4\'783\'541)\n#Bound 445.97s best:2982  next:[1819,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1786/126531 clauses=4\'945\'583) [skipped_logs=11]\n#Bound 446.96s best:2982  next:[1834,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1801/128616 clauses=5\'162\'108) [skipped_logs=14]\n#Bound 447.43s best:2982  next:[1841,2981] bool_core (num_cores=116 [cover] a=387 d=10 fixed=1808/129589 clauses=5\'268\'466) [skipped_logs=6]\n#Bound 449.51s best:2982  next:[1842,2981] bool_core (num_cores=117 [size:2 mw:1 d:11] a=386 d=11 fixed=1809/129728 clauses=5\'285\'948)\n#Bound 449.97s best:2982  next:[1846,2981] bool_core (num_cores=117 [cover] a=386 d=11 fixed=1812/130292 clauses=5\'348\'552) [skipped_logs=3]\n#Bound 451.03s best:2982  next:[1847,2981] bool_core (num_cores=118 [size:5 mw:1 d:3] a=382 d=11 fixed=1813/130436 clauses=5\'364\'392)\n#Bound 451.95s best:2982  next:[1861,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1826/130562 clauses=5\'364\'812) [skipped_logs=13]\n#Bound 453.03s best:2982  next:[1877,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1842/130706 clauses=5\'366\'252) [skipped_logs=15]\n#Bound 454.02s best:2982  next:[1891,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1856/130832 clauses=5\'368\'352) [skipped_logs=13]\n#Bound 454.97s best:2982  next:[1905,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1870/130958 clauses=5\'371\'236) [skipped_logs=13]\n#Bound 455.96s best:2982  next:[1920,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1885/131093 clauses=5\'375\'198) [skipped_logs=14]\n#Bound 457.00s best:2982  next:[1936,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1901/131237 clauses=5\'380\'451) [skipped_logs=15]\n#Bound 457.96s best:2982  next:[1950,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1915/131363 clauses=5\'385\'950) [skipped_logs=13]\n#Bound 458.95s best:2982  next:[1964,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1929/131489 clauses=5\'392\'405) [skipped_logs=13]\n#Bound 459.96s best:2982  next:[1977,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1942/131606 clauses=5\'399\'479) [skipped_logs=12]\n#Bound 460.95s best:2982  next:[1986,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1951/131687 clauses=5\'405\'840) [skipped_logs=8]\n#Bound 461.35s best:2982  next:[1988,2981] bool_core (num_cores=118 [cover] a=382 d=11 fixed=1953/131705 clauses=5\'377\'455) [skipped_logs=1]\n#Bound 463.04s best:2982  next:[1998,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=1962/131798 clauses=5\'378\'235) [skipped_logs=9]\n#Bound 463.96s best:2982  next:[2012,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=1976/131924 clauses=5\'379\'159) [skipped_logs=13]\n#Bound 465.00s best:2982  next:[2027,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=1991/132059 clauses=5\'381\'019) [skipped_logs=14]\n#Bound 465.99s best:2982  next:[2042,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=2006/132194 clauses=5\'383\'779) [skipped_logs=14]\n#Bound 466.97s best:2982  next:[2057,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=2021/132329 clauses=5\'387\'439) [skipped_logs=14]\n#Bound 467.99s best:2982  next:[2071,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=2035/132455 clauses=5\'391\'669) [skipped_logs=13]\n#Bound 469.04s best:2982  next:[2087,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=2051/132599 clauses=5\'397\'495) [skipped_logs=15]\n#Bound 470.06s best:2982  next:[2102,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=2066/132734 clauses=5\'403\'934) [skipped_logs=14]\n#Bound 470.97s best:2982  next:[2115,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=2079/132851 clauses=5\'410\'355) [skipped_logs=12]\n#Bound 471.94s best:2982  next:[2127,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=2091/132959 clauses=5\'417\'366) [skipped_logs=11]\n#Bound 472.37s best:2982  next:[2130,2981] bool_core (num_cores=119 [cover] a=378 d=11 fixed=2094/132986 clauses=5\'419\'702) [skipped_logs=2]\n#Bound 474.00s best:2982  next:[2132,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2095/133007 clauses=5\'420\'391) [skipped_logs=1]\n#Bound 475.01s best:2982  next:[2147,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2110/133142 clauses=5\'420\'931) [skipped_logs=14]\n#Bound 476.00s best:2982  next:[2162,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2125/133277 clauses=5\'422\'371) [skipped_logs=14]\n#Bound 476.97s best:2982  next:[2176,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2139/133403 clauses=5\'424\'527) [skipped_logs=13]\n#Bound 477.96s best:2982  next:[2190,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2153/133529 clauses=5\'427\'467) [skipped_logs=13]\n#Bound 479.02s best:2982  next:[2205,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2168/133664 clauses=5\'431\'489) [skipped_logs=14]\n#Bound 480.00s best:2982  next:[2220,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2183/133799 clauses=5\'436\'415) [skipped_logs=14]\n#Bound 480.97s best:2982  next:[2234,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2197/133925 clauses=5\'441\'835) [skipped_logs=13]\n#Bound 481.96s best:2982  next:[2248,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2211/134051 clauses=5\'448\'077) [skipped_logs=13]\n#Bound 482.98s best:2982  next:[2262,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2225/134177 clauses=5\'455\'351) [skipped_logs=13]\n#Bound 483.98s best:2982  next:[2272,2981] bool_core (num_cores=120 [cover] a=374 d=11 fixed=2235/134267 clauses=5\'461\'999) [skipped_logs=9]\n#Bound 491.97s best:2982  next:[2273,2981] bool_core (num_cores=121 [size:23 mw:1 d:9] a=352 d=11 fixed=2236/134297 clauses=5\'462\'723)\n#Bound 492.03s best:2982  next:[2274,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2236/134426 clauses=5\'468\'666)\n#Bound 492.10s best:2982  next:[2275,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2237/134555 clauses=5\'474\'673)\n#Bound 492.17s best:2982  next:[2276,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2238/134684 clauses=5\'480\'744)\n#Bound 492.24s best:2982  next:[2277,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2239/134813 clauses=5\'486\'879)\n#Bound 492.32s best:2982  next:[2278,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2240/134942 clauses=5\'493\'078)\n#Bound 492.40s best:2982  next:[2279,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2241/135071 clauses=5\'499\'341)\n#Bound 492.48s best:2982  next:[2280,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2242/135200 clauses=5\'505\'668)\n#Bound 492.98s best:2982  next:[2286,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2248/135974 clauses=5\'545\'015) [skipped_logs=5]\n#Bound 493.96s best:2982  next:[2291,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2253/136619 clauses=5\'580\'065) [skipped_logs=4]\n#Bound 494.64s best:2982  next:[2293,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2255/136877 clauses=5\'595\'042) [skipped_logs=1]\n#Bound 496.00s best:2982  next:[2295,2981] bool_core (num_cores=121 [cover] a=352 d=11 fixed=2257/137135 clauses=5\'611\'154) [skipped_logs=1]\n#Bound 503.71s best:2982  next:[2296,2981] bool_core (num_cores=122 [size:1 mw:1] a=352 d=11 fixed=2258/137264 clauses=5\'593\'667)\n#Bound 506.50s best:2982  next:[2297,2981] bool_core (num_cores=123 [size:1 mw:1] a=352 d=11 fixed=2259/137393 clauses=5\'602\'621)\n#Bound 508.65s best:2982  next:[2298,2981] bool_core (num_cores=124 [size:1 mw:1] a=352 d=11 fixed=2260/137522 clauses=5\'611\'811)\n#Bound 510.47s best:2982  next:[2299,2981] bool_core (num_cores=125 [size:1 mw:1] a=352 d=11 fixed=2261/137651 clauses=5\'620\'782)\n#Bound 512.89s best:2982  next:[2300,2981] bool_core (num_cores=126 [size:2 mw:1 d:10] a=351 d=11 fixed=2262/137780 clauses=5\'630\'403)\n#Bound 512.96s best:2982  next:[2301,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2262/137911 clauses=5\'638\'075)\n#Bound 513.03s best:2982  next:[2302,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2263/138042 clauses=5\'645\'812)\n#Bound 513.10s best:2982  next:[2303,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2264/138173 clauses=5\'653\'614)\n#Bound 513.18s best:2982  next:[2304,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2265/138304 clauses=5\'661\'481)\n#Bound 513.25s best:2982  next:[2305,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2266/138435 clauses=5\'669\'413)\n#Bound 513.32s best:2982  next:[2306,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2267/138566 clauses=5\'677\'410)\n#Bound 513.39s best:2982  next:[2307,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2268/138697 clauses=5\'685\'472)\n#Bound 513.46s best:2982  next:[2308,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2269/138828 clauses=5\'693\'599)\n#Bound 513.53s best:2982  next:[2309,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2270/138959 clauses=5\'701\'791)\n#Bound 513.59s best:2982  next:[2310,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2271/139090 clauses=5\'710\'048)\n#Bound 513.66s best:2982  next:[2311,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2272/139221 clauses=5\'718\'370)\n#Bound 513.73s best:2982  next:[2312,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2273/139352 clauses=5\'726\'757)\n#Bound 514.01s best:2982  next:[2316,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2277/139876 clauses=5\'760\'955) [skipped_logs=3]\n#Bound 515.01s best:2982  next:[2330,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2291/141710 clauses=5\'888\'838) [skipped_logs=13]\n#Bound 516.05s best:2982  next:[2344,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2305/143544 clauses=6\'029\'461) [skipped_logs=13]\n#Bound 516.98s best:2982  next:[2356,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2317/145116 clauses=6\'160\'135) [skipped_logs=11]\n#Bound 518.03s best:2982  next:[2369,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2330/146819 clauses=6\'312\'261) [skipped_logs=12]\n#Bound 518.97s best:2982  next:[2380,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2341/148260 clauses=6\'449\'563) [skipped_logs=10]\n#Bound 519.95s best:2982  next:[2392,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2353/149832 clauses=6\'608\'317) [skipped_logs=11]\n#Bound 520.98s best:2982  next:[2404,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2365/151404 clauses=6\'776\'431) [skipped_logs=11]\n#Bound 521.85s best:2982  next:[2414,2981] bool_core (num_cores=126 [cover] a=351 d=11 fixed=2375/152714 clauses=6\'923\'676) [skipped_logs=9]\n#Bound 523.91s best:2982  next:[2415,2981] bool_core (num_cores=127 [size:5 mw:1 d:3] a=347 d=11 fixed=2376/152848 clauses=6\'938\'875)\n#Bound 524.00s best:2982  next:[2416,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2376/152857 clauses=6\'938\'879)\n#Bound 525.03s best:2982  next:[2428,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2388/152965 clauses=6\'939\'239) [skipped_logs=11]\n#Bound 526.03s best:2982  next:[2440,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2400/153073 clauses=6\'940\'175) [skipped_logs=11]\n#Bound 526.97s best:2982  next:[2451,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2411/153172 clauses=6\'941\'539) [skipped_logs=10]\n#Bound 528.02s best:2982  next:[2464,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2424/153289 clauses=6\'943\'775) [skipped_logs=12]\n#Bound 528.97s best:2982  next:[2475,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2435/153388 clauses=6\'946\'195) [skipped_logs=10]\n#Bound 529.93s best:2982  next:[2486,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2446/153487 clauses=6\'949\'099) [skipped_logs=10]\n#Bound 531.00s best:2982  next:[2498,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2458/153595 clauses=6\'952\'821) [skipped_logs=11]\n#Bound 532.01s best:2982  next:[2510,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2470/153703 clauses=6\'957\'121) [skipped_logs=11]\n#Bound 533.01s best:2982  next:[2522,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2482/153811 clauses=6\'962\'025) [skipped_logs=11]\n#Bound 533.97s best:2982  next:[2533,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2493/153910 clauses=6\'967\'083) [skipped_logs=10]\n#Bound 534.99s best:2982  next:[2544,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2504/154009 clauses=6\'972\'735) [skipped_logs=10]\n#Bound 535.97s best:2982  next:[2554,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2514/154099 clauses=6\'978\'771) [skipped_logs=9]\n#Bound 536.30s best:2982  next:[2556,2981] bool_core (num_cores=127 [cover] a=347 d=11 fixed=2516/154117 clauses=6\'980\'392) [skipped_logs=1]\n#Bound 540.47s best:2982  next:[2557,2981] bool_core (num_cores=128 [size:15 mw:1 d:9] a=333 d=11 fixed=2517/154139 clauses=6\'981\'020)\n#Bound 540.55s best:2982  next:[2558,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2517/154252 clauses=6\'986\'940)\n#Bound 540.64s best:2982  next:[2559,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2518/154365 clauses=6\'992\'916)\n#Bound 540.99s best:2982  next:[2563,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2522/154817 clauses=7\'017\'380) [skipped_logs=3]\n#Bound 541.99s best:2982  next:[2574,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2533/156060 clauses=7\'089\'276) [skipped_logs=10]\n#Bound 543.03s best:2982  next:[2583,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2542/157077 clauses=7\'153\'292) [skipped_logs=8]\n#Bound 543.86s best:2982  next:[2589,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2548/157755 clauses=7\'198\'970) [skipped_logs=5]\n#Bound 545.08s best:2982  next:[2594,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2553/158320 clauses=7\'239\'361) [skipped_logs=4]\n#Bound 545.85s best:2982  next:[2596,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2555/158546 clauses=7\'229\'592) [skipped_logs=1]\n#Bound 546.62s best:2982  next:[2598,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2557/158772 clauses=7\'246\'821) [skipped_logs=1]\n#Bound 547.67s best:2982  next:[2600,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2559/158998 clauses=7\'264\'572) [skipped_logs=1]\n#Bound 548.23s best:2982  next:[2601,2981] bool_core (num_cores=128 [cover] a=333 d=11 fixed=2560/159111 clauses=7\'273\'602) [skipped_logs=0]\n#Bound 554.35s best:2982  next:[2602,2981] bool_core (num_cores=129 [size:19 mw:1 d:9] a=315 d=11 fixed=2561/159241 clauses=7\'283\'126)\n#Bound 554.44s best:2982  next:[2603,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2561/159362 clauses=7\'289\'058)\n#Bound 554.53s best:2982  next:[2604,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2562/159483 clauses=7\'295\'050)\n#Bound 554.62s best:2982  next:[2605,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2563/159604 clauses=7\'301\'102)\n#Bound 554.71s best:2982  next:[2606,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2564/159725 clauses=7\'307\'214)\n#Bound 554.97s best:2982  next:[2609,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2567/160088 clauses=7\'325\'910) [skipped_logs=2]\n#Bound 556.02s best:2982  next:[2620,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2578/161419 clauses=7\'399\'097) [skipped_logs=10]\n#Bound 556.98s best:2982  next:[2629,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2587/162508 clauses=7\'464\'485) [skipped_logs=8]\n#Bound 557.88s best:2982  next:[2635,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2593/163234 clauses=7\'511\'148) [skipped_logs=5]\n#Bound 558.86s best:2982  next:[2639,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2597/163718 clauses=7\'544\'064) [skipped_logs=3]\n#Bound 559.69s best:2982  next:[2642,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2600/164081 clauses=7\'569\'746) [skipped_logs=2]\n#Bound 560.81s best:2982  next:[2645,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2603/164444 clauses=7\'596\'237) [skipped_logs=2]\n#Bound 561.68s best:2982  next:[2647,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2605/164686 clauses=7\'614\'386) [skipped_logs=1]\n#Bound 562.32s best:2982  next:[2648,2981] bool_core (num_cores=129 [cover] a=315 d=11 fixed=2606/164807 clauses=7\'623\'818) [skipped_logs=0]\n#Bound 563.66s best:2982  next:[2649,2981] bool_core (num_cores=130 [size:1 mw:1] a=315 d=11 fixed=2607/164928 clauses=7\'633\'574) [skipped_logs=0]\n#Bound 565.07s best:2982  next:[2650,2981] bool_core (num_cores=131 [size:1 mw:1] a=315 d=11 fixed=2608/165049 clauses=7\'643\'526)\n#Bound 566.79s best:2982  next:[2651,2981] bool_core (num_cores=132 [size:1 mw:1] a=315 d=11 fixed=2609/165170 clauses=7\'642\'527)\n#Bound 568.49s best:2982  next:[2652,2981] bool_core (num_cores=133 [size:1 mw:1] a=315 d=11 fixed=2610/165291 clauses=7\'652\'970)\n#Bound 570.36s best:2982  next:[2653,2981] bool_core (num_cores=134 [size:1 mw:1] a=315 d=11 fixed=2611/165412 clauses=7\'663\'754)\n#Bound 572.30s best:2982  next:[2654,2981] bool_core (num_cores=135 [size:1 mw:1] a=315 d=11 fixed=2612/165533 clauses=7\'674\'572)\n#Bound 574.39s best:2982  next:[2655,2981] bool_core (num_cores=136 [size:2 mw:1 d:10] a=314 d=11 fixed=2613/165654 clauses=7\'685\'641)\n#Bound 574.49s best:2982  next:[2656,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2613/165777 clauses=7\'694\'754)\n#Bound 574.59s best:2982  next:[2657,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2614/165900 clauses=7\'703\'928)\n#Bound 574.69s best:2982  next:[2658,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2615/166023 clauses=7\'713\'163)\n#Bound 574.78s best:2982  next:[2659,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2616/166146 clauses=7\'722\'459)\n#Bound 575.05s best:2982  next:[2662,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2619/166515 clauses=7\'750\'713) [skipped_logs=2]\n#Bound 576.00s best:2982  next:[2672,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2629/167745 clauses=7\'848\'858) [skipped_logs=9]\n#Bound 577.00s best:2982  next:[2682,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2639/168975 clauses=7\'953\'114) [skipped_logs=9]\n#Bound 577.94s best:2982  next:[2691,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2648/170082 clauses=8\'052\'167) [skipped_logs=8]\n#Bound 578.98s best:2982  next:[2701,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2658/171312 clauses=8\'168\'033) [skipped_logs=9]\n#Bound 579.97s best:2982  next:[2710,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2667/172419 clauses=8\'277\'536) [skipped_logs=8]\n#Bound 581.04s best:2982  next:[2719,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2676/173526 clauses=8\'392\'014) [skipped_logs=8]\n#Bound 581.97s best:2982  next:[2726,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2683/174387 clauses=8\'484\'618) [skipped_logs=6]\n#Bound 583.03s best:2982  next:[2733,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2690/175248 clauses=8\'580\'322) [skipped_logs=6]\n#Bound 583.96s best:2982  next:[2738,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2695/175863 clauses=8\'650\'687) [skipped_logs=4]\n#Bound 585.01s best:2982  next:[2742,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2699/176355 clauses=8\'708\'564) [skipped_logs=3]\n#Bound 585.45s best:2982  next:[2743,2981] bool_core (num_cores=136 [cover] a=314 d=11 fixed=2700/176478 clauses=8\'723\'476) [skipped_logs=0]\n#Bound 587.78s best:2982  next:[2744,2981] bool_core (num_cores=137 [size:1 mw:1] a=314 d=11 fixed=2701/176601 clauses=8\'738\'163)\n#Bound 599.77s best:2982  next:[2745,2981] bool_core (num_cores=138 [size:2 mw:1 d:10] a=313 d=11 fixed=2702/176714 clauses=8\'736\'788)\n#Bound 599.87s best:2982  next:[2746,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2702/176829 clauses=8\'745\'285)\n#Bound 599.98s best:2982  next:[2747,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2703/176944 clauses=8\'753\'839)\n#Bound 600.10s best:2982  next:[2748,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2704/177059 clauses=8\'762\'450)\n#Bound 600.20s best:2982  next:[2749,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2705/177174 clauses=8\'771\'118)\n#Bound 600.32s best:2982  next:[2750,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2706/177289 clauses=8\'779\'843)\n#Bound 600.43s best:2982  next:[2751,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2707/177404 clauses=8\'788\'625)\n#Bound 600.54s best:2982  next:[2752,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2708/177519 clauses=8\'797\'464)\n#Bound 600.67s best:2982  next:[2753,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2709/177634 clauses=8\'806\'360)\n#Bound 600.83s best:2982  next:[2754,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2710/177749 clauses=8\'815\'313)\n#Bound 600.93s best:2982  next:[2755,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2711/177864 clauses=8\'824\'323)\n#Bound 601.03s best:2982  next:[2756,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2712/177979 clauses=8\'833\'390)\n#Bound 601.14s best:2982  next:[2757,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2713/178094 clauses=8\'842\'514)\n#Bound 601.27s best:2982  next:[2758,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2714/178209 clauses=8\'851\'695)\n#Bound 601.97s best:2982  next:[2764,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2720/178899 clauses=8\'907\'978) [skipped_logs=5]\n#Bound 602.97s best:2982  next:[2773,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2729/179934 clauses=8\'996\'259) [skipped_logs=8]\n#Bound 603.91s best:2982  next:[2781,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2737/180854 clauses=9\'078\'619) [skipped_logs=7]\n#Bound 605.05s best:2982  next:[2791,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2747/182004 clauses=9\'186\'699) [skipped_logs=9]\n#Bound 605.99s best:2982  next:[2799,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2755/182924 clauses=9\'277\'288) [skipped_logs=7]\n#Bound 607.01s best:2982  next:[2807,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2763/183844 clauses=9\'371\'592) [skipped_logs=7]\n#Bound 608.04s best:2982  next:[2814,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2770/184649 clauses=9\'457\'169) [skipped_logs=6]\n#Bound 608.93s best:2982  next:[2820,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2776/185339 clauses=9\'532\'817) [skipped_logs=5]\n#Bound 609.91s best:2982  next:[2826,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2782/186029 clauses=9\'610\'618) [skipped_logs=5]\n#Bound 610.89s best:2982  next:[2831,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2787/186604 clauses=9\'677\'224) [skipped_logs=4]\n#Bound 611.86s best:2982  next:[2835,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2791/187064 clauses=9\'731\'766) [skipped_logs=3]\n#Bound 612.77s best:2982  next:[2838,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2794/187409 clauses=9\'773\'576) [skipped_logs=2]\n#Bound 613.72s best:2982  next:[2840,2981] bool_core (num_cores=138 [cover] a=313 d=11 fixed=2796/187639 clauses=9\'802\'133) [skipped_logs=1]\n#143   614.52s best:2840  next:[]         core (fixed_bools=2797/187754)\n#Done  614.53s core\n\nTask timing                          n [     min,      max]      avg      dev     time         n [     min,      max]      avg      dev    dtime\n                     \'core\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [   5.94m,    5.94m]    5.94m   0.00ns    5.94m\n               \'default_lp\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [   1.50m,    1.50m]    1.50m   0.00ns    1.50m\n         \'feasibility_pump\':      1413 [  2.01ms, 214.08ms]   3.32ms   9.92ms    4.68s      1412 [930.37us, 330.54ms]   1.76ms  14.27ms    2.49s\n          \'fj_long_default\':       413 [  7.45ms,  15.50ms]   8.78ms   1.21ms    3.63s       413 [  1.42ms,   1.58ms]   1.46ms  14.39us 603.34ms\n         \'fj_short_default\':       413 [  5.87ms,  13.77ms]   7.12ms 921.62us    2.94s       413 [  1.18ms,   1.41ms]   1.30ms  64.58us 535.75ms\n                \'fs_random\':         1 [  23.39s,   23.39s]   23.39s   0.00ns   23.39s         1 [   4.98s,    4.98s]    4.98s   0.00ns    4.98s\n  \'fs_random_quick_restart\':         1 [  23.38s,   23.38s]   23.38s   0.00ns   23.38s         1 [   4.82s,    4.82s]    4.82s   0.00ns    4.82s\n            \'graph_arc_lns\':      1413 [ 13.52ms,    1.38s] 265.52ms 245.11ms    6.25m      1408 [ 10.00ns, 200.03ms]  55.00ms  47.98ms    1.29m\n            \'graph_cst_lns\':      1413 [ 17.41ms,    1.99s] 302.12ms 271.03ms    7.11m      1404 [ 10.00ns, 200.24ms]  54.24ms  48.05ms    1.27m\n            \'graph_dec_lns\':      1412 [ 25.05ms,    1.87s] 320.72ms 275.09ms    7.55m      1407 [  1.43us, 123.49ms]  59.29ms  51.14ms    1.39m\n            \'graph_var_lns\':      1413 [ 14.57ms,    1.55s] 287.75ms 286.40ms    6.78m      1411 [ 10.00ns, 111.82ms]  55.00ms  47.48ms    1.29m\n           \'lb_tree_search\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [   2.08m,    2.08m]    2.08m   0.00ns    2.08m\n                   \'max_lp\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [   1.85m,    1.85m]    1.85m   0.00ns    1.85m\n                    \'no_lp\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [   4.73m,    4.73m]    4.73m   0.00ns    4.73m\n      \'objective_lb_search\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [  56.39s,   56.39s]   56.39s   0.00ns   56.39s\n                  \'probing\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [  14.61s,   14.61s]   14.61s   0.00ns   14.61s\n             \'pseudo_costs\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [   1.76m,    1.76m]    1.76m   0.00ns    1.76m\n            \'quick_restart\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [   1.10m,    1.10m]    1.10m   0.00ns    1.10m\n      \'quick_restart_no_lp\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [   2.07m,    2.07m]    2.07m   0.00ns    2.07m\n            \'reduced_costs\':         1 [  10.24m,   10.24m]   10.24m   0.00ns   10.24m         1 [  44.58s,   44.58s]   44.58s   0.00ns   44.58s\n                \'rins/rens\':      1413 [  2.07ms,    1.63s] 186.57ms 170.54ms    4.39m       895 [ 10.00ns, 200.84ms]  77.43ms  39.85ms    1.15m\n              \'rnd_cst_lns\':      1413 [ 23.01ms,    2.59s] 441.74ms 454.99ms   10.40m      1404 [  2.29us, 208.82ms]  56.88ms  48.86ms    1.33m\n              \'rnd_var_lns\':      1413 [ 21.64ms,    1.47s] 318.57ms 267.23ms    7.50m      1406 [260.00ns, 131.22ms]  64.09ms  54.51ms    1.50m\n             \'violation_ls\':      1413 [  3.74ms, 102.87ms]   9.71ms   7.41ms   13.72s      1413 [981.76us,  40.06ms]   2.41ms   2.83ms    3.41s\n\nSearch stats                    Bools  Conflicts   Branches  Restarts   BoolPropag  IntegerPropag\n                     \'core\':  187\'754    436\'852  3\'033\'948    66\'485  907\'701\'480    816\'495\'498\n               \'default_lp\':   10\'021     31\'824    542\'737    53\'494   55\'762\'105    299\'926\'500\n                \'fs_random\':    3\'485      3\'332     29\'213     2\'453      838\'875      4\'280\'742\n  \'fs_random_quick_restart\':    2\'821      1\'035     54\'121     5\'575    1\'708\'578     10\'438\'605\n           \'lb_tree_search\':    4\'901      4\'050  5\'518\'544   333\'833   32\'268\'893    174\'322\'517\n                   \'max_lp\':    8\'776     34\'423    420\'378    54\'186   54\'957\'809    281\'041\'013\n                    \'no_lp\':    7\'575  1\'678\'770  2\'694\'577    60\'200  361\'179\'241  1\'932\'604\'263\n      \'objective_lb_search\':    5\'443     18\'857    342\'428    48\'487   44\'501\'049    291\'300\'269\n                  \'probing\':    5\'322          0     10\'644    10\'644    3\'458\'211     19\'105\'914\n             \'pseudo_costs\':    9\'204     43\'210    509\'982    38\'084   66\'554\'868    282\'389\'272\n            \'quick_restart\':    6\'667      5\'671    511\'854    46\'551   30\'981\'558    234\'943\'382\n      \'quick_restart_no_lp\':   33\'250     63\'429  2\'390\'870    36\'101  273\'711\'447    787\'323\'511\n            \'reduced_costs\':    7\'849     12\'359    602\'780    46\'576   12\'239\'253    152\'655\'765\n\nSAT stats                     ClassicMinim  LitRemoved  LitLearned  LitForgotten  Subsumed  MClauses  MDecisions  MLitTrue  MSubsumed  MLitRemoved  MReused\n                     \'core\':       388\'768   4\'294\'125   5\'772\'709     2\'928\'979       840    27\'057     163\'572         0        464        9\'221    1\'439\n               \'default_lp\':        22\'887     121\'748     572\'773       187\'741        29    27\'745     163\'548         0      2\'573       11\'171    3\'407\n                \'fs_random\':           165         165      22\'898             0        31     1\'341       9\'038         0        362        1\'639      196\n  \'fs_random_quick_restart\':           160         217       7\'585             0         5     2\'756      17\'142         0        182          824      607\n           \'lb_tree_search\':           417         542      38\'380             0        44    64\'169     566\'571         0        278        1\'252   21\'269\n                   \'max_lp\':        23\'454     259\'072     494\'525       250\'292       423    28\'092     170\'122         0      1\'516        7\'199    3\'925\n                    \'no_lp\':       844\'632  10\'584\'991  42\'443\'256    41\'764\'325     1\'128    30\'336     183\'183         0        790        3\'834    4\'838\n      \'objective_lb_search\':        12\'268      35\'875     248\'554         7\'148       352    24\'491     151\'281         0      1\'514        6\'657    4\'032\n                  \'probing\':             0           0           0             0         0         0           0         0          0            0        0\n             \'pseudo_costs\':        34\'374     216\'072     867\'835       429\'475       155    20\'809     145\'326         0      1\'842        8\'557    5\'774\n            \'quick_restart\':         2\'985      23\'555      82\'807             0       172    22\'190     135\'811         0      1\'017        4\'363    4\'240\n      \'quick_restart_no_lp\':        35\'443     172\'567   1\'479\'509     1\'115\'604     1\'055    16\'045     104\'885         0      3\'548       16\'537    2\'878\n            \'reduced_costs\':         6\'395      25\'709     343\'494             0         0    10\'760      70\'899         0        463        2\'053    2\'703\n\nLp stats                      Component  Iterations  AddedCuts  OPTIMAL  DUAL_F.  DUAL_U.\n               \'default_lp\':          1     423\'003          2  158\'575        0        1\n                \'fs_random\':          1      32\'405          1   15\'284        0        0\n  \'fs_random_quick_restart\':          1      22\'057          4   12\'767        1        0\n           \'lb_tree_search\':          1     414\'898      4\'153  243\'365    9\'466        0\n                   \'max_lp\':          1     456\'337      8\'533  141\'057   17\'488        1\n      \'objective_lb_search\':          1      96\'053          6   60\'919        0        2\n                  \'probing\':          1     140\'875         10   51\'346        0        0\n             \'pseudo_costs\':          1     390\'294      6\'098  184\'197   17\'835        0\n            \'quick_restart\':          1     430\'466        310   87\'017        7        2\n            \'reduced_costs\':          1     237\'115      1\'385   65\'398   11\'789        1\n\nLp dimension                                                                    Final dimension of first component\n               \'default_lp\':  3277 rows, 4556 columns, 8735 entries with magnitude in [2.236068e-02, 1.000000e+00]\n                \'fs_random\':  3195 rows, 4556 columns, 8489 entries with magnitude in [2.236068e-02, 1.000000e+00]\n  \'fs_random_quick_restart\':  3300 rows, 4556 columns, 8710 entries with magnitude in [1.581337e-02, 1.000000e+00]\n           \'lb_tree_search\':  3323 rows, 4556 columns, 8882 entries with magnitude in [2.236068e-02, 1.000000e+00]\n                   \'max_lp\':  3350 rows, 4556 columns, 8936 entries with magnitude in [2.236068e-02, 1.000000e+00]\n      \'objective_lb_search\':  3230 rows, 4556 columns, 8583 entries with magnitude in [2.236068e-02, 1.000000e+00]\n                  \'probing\':  3702 rows, 4556 columns, 9640 entries with magnitude in [1.581337e-02, 1.000000e+00]\n             \'pseudo_costs\':  3158 rows, 4556 columns, 8370 entries with magnitude in [2.236068e-02, 1.000000e+00]\n            \'quick_restart\':  3548 rows, 4556 columns, 9332 entries with magnitude in [2.236068e-02, 1.000000e+00]\n            \'reduced_costs\':  3096 rows, 4556 columns, 8222 entries with magnitude in [2.236068e-02, 1.000000e+00]\n\nLp debug                      CutPropag  CutEqPropag  Adjust  Overflow        Bad  BadScaling\n               \'default_lp\':          0            0   1\'827         0          0           0\n                \'fs_random\':          0            0   3\'367         0          0           0\n  \'fs_random_quick_restart\':          0            0     741         0      1\'894           0\n           \'lb_tree_search\':          0            0  76\'783         0      6\'529           0\n                   \'max_lp\':          0            0  21\'131         0          0           0\n      \'objective_lb_search\':          0            0   3\'340         0      3\'711           0\n                  \'probing\':          0            0       4         0  8\'382\'244           0\n             \'pseudo_costs\':          0            0   4\'301         0      3\'179           0\n            \'quick_restart\':          0            0   1\'719         0     11\'677           0\n            \'reduced_costs\':          0            0   4\'551         0          0           0\n\nLp pool                       Constraints  Updates  Simplif  Merged  Shortened  Split  Strenghtened          Cuts/Call\n               \'default_lp\':        5\'291        0        0       0          0      0             0           2/73\'344\n                \'fs_random\':        5\'290        0        0       0          0      0             0           1/21\'392\n  \'fs_random_quick_restart\':        5\'293        0        0       0          0      0             0           4/65\'707\n           \'lb_tree_search\':        9\'442        0        0       0          0      0             0  4\'153/343\'604\'419\n                   \'max_lp\':       13\'822        0        0       0          0      0             0  8\'533/173\'201\'856\n      \'objective_lb_search\':        5\'295        0        0       0          0      0             0          6/212\'397\n                  \'probing\':        5\'299        1        0       0          0      0             0      10/65\'042\'380\n             \'pseudo_costs\':       11\'387        0        0       0          0      0             0  6\'098/232\'457\'696\n            \'quick_restart\':        5\'599        0        0       0          0      0             0        310/498\'441\n            \'reduced_costs\':        6\'674        0        0       0          0      0             0   1\'385/94\'040\'760\n\nLp Cut          fs_ran  fs_ran  defaul  max_lp  quick_  reduce  pseudo  lb_tre  probin  object\n         CG_K:       -       -       -       -     149       -       -       -       -       -\n         CG_R:       -       -       -       -     150       -       -       -       -       -\n      MIR_1_K:       1       -       -       -       1       -       -       1       1       1\n      MIR_1_R:       -       -       -       -       1       -       -       -       -       -\n      MIR_2_K:       -       -       -       -       3       -       -       -       1       1\n      MIR_2_R:       -       -       -       -       1       -       -       -       -       -\n      MIR_3_K:       -       -       -       -       1       -       -       -       -       -\n      MIR_3_R:       -       -       -       -       1       -       -       -       -       -\n      MIR_5_K:       -       -       -       -       -       -       -       -       -       1\n  SquareLower:       3       1       2   8\'533       3   1\'385   6\'098   4\'152       8       3\n\nLNS stats           Improv/Calls  Closed  Difficulty  TimeLimit\n  \'graph_arc_lns\':       77/1412     51%        0.67       0.10\n  \'graph_cst_lns\':       88/1412     50%        0.72       0.10\n  \'graph_dec_lns\':       55/1412     51%        0.93       0.11\n  \'graph_var_lns\':       88/1413     51%        0.64       0.10\n      \'rins/rens\':      806/1199     46%        0.74       0.10\n    \'rnd_cst_lns\':       79/1413     51%        0.88       0.10\n    \'rnd_var_lns\':       50/1413     51%        0.95       0.12\n\nLS stats               Batches  Restarts  LinMoves  GenMoves  CompoundMoves  WeightUpdates\n   \'fj_long_default\':      413         1   475\'242   514\'146              0            182\n  \'fj_short_default\':      413         1         0     6\'346          4\'230              0\n      \'violation_ls\':    1\'413         0   871\'552   508\'412          5\'990         39\'055\n\nSolutions (143)           Num       Rank\n                 \'core\':    1  [143,143]\n        \'graph_arc_lns\':   12   [26,119]\n        \'graph_cst_lns\':    8   [17,109]\n        \'graph_dec_lns\':    5   [27,102]\n        \'graph_var_lns\':   13   [13,136]\n                \'no_lp\':    1      [1,1]\n        \'quick_restart\':   21   [45,137]\n  \'quick_restart_no_lp\':   63    [2,133]\n          \'rins_lp_lns\':    2  [138,141]\n        \'rins_pump_lns\':    3  [139,142]\n          \'rnd_cst_lns\':    6   [11,113]\n          \'rnd_var_lns\':    7    [16,96]\n         \'violation_ls\':    1  [116,116]\n\nObjective bounds            Num\n            \'bool_core\':  2\'821\n       \'initial_domain\':      1\n       \'lb_tree_search\':     13\n  \'objective_lb_search\':      1\n  \'quick_restart_no_lp\':      1\n\nSolution repositories    Added  Queried  Ignored  Synchro\n  \'feasible solutions\':  1\'870   21\'115        0    1\'860\n        \'lp solutions\':  7\'413      764       15    4\'164\n                \'pump\':  1\'409      649\n\nCpSolverResponse summary:\nstatus: OPTIMAL\nobjective: 2840\nbest_bound: 2840\nintegers: 5305\nbooleans: 2821\nconflicts: 1035\nbranches: 54121\npropagations: 1708578\ninteger_propagations: 10438605\nrestarts: 5575\nlp_iterations: 22057\nwalltime: 615.59\nusertime: 615.59\ndeterministic_time: 1948.67\ngap_integral: 6241\nsolution_fingerprint: 0x97e173b9729223bf\n\n""
inner_objective_lower_bound: 2840
num_integers: 5305";253680;1290;2982;614520;2840;2982
